{
    "swagger": "2.0",
    "info": {
        "title": "XMS API",
        "description": "XMS is the controller of distributed storage system",
        "version": "XSCALEROS_6.1.100.0.221128",
        "contact": {},
        "license": {
            "name": "Commercial"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/access-paths/": {
            "get": {
                "tags": [
                    "access-paths"
                ],
                "description": "List access paths",
                "operationId": "ListAccessPaths",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "uid",
                        "description": "access path uid",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "client_group_id",
                        "description": "related client group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "all",
                        "description": "show all access targets",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccessPathsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "access-paths"
                ],
                "description": "Create an access path",
                "operationId": "CreateAccessPath",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "access_path",
                        "description": "access path info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccessPathCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccessPathResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/AccessPathResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/access-paths/{access_path_id}": {
            "get": {
                "tags": [
                    "access-paths"
                ],
                "description": "Get access path by id",
                "operationId": "GetAccessPath",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_path_id",
                        "description": "access path id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccessPathResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "access-paths"
                ],
                "description": "Delete access path",
                "operationId": "DeleteAccessPath",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_path_id",
                        "description": "access path id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/AccessPathResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "access-paths"
                ],
                "description": "update access path",
                "operationId": "UpdateAccessPath",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_path_id",
                        "description": "access path id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "access_path",
                        "description": "access path info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccessPathUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccessPathResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/AccessPathResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/access-tokens/": {
            "get": {
                "tags": [
                    "access-tokens"
                ],
                "description": "List access tokens",
                "operationId": "ListAccessTokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "description": "The id of user access tokens belong to",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "description": "filter access tokens by role",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "all",
                        "description": "show all access tokens",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccessTokensResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "access-tokens"
                ],
                "description": "Create an access token",
                "operationId": "CreateAccessToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "access token info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccessTokenCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/AccessTokenCreateResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/access-tokens/{access_token_id}": {
            "get": {
                "tags": [
                    "access-tokens"
                ],
                "description": "get an access Token",
                "operationId": "GetAccessToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_token_id",
                        "description": "access token id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccessTokenResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "access-tokens"
                ],
                "description": "delete an access token",
                "operationId": "DeleteAccessToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_token_id",
                        "description": "access token id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "access-tokens"
                ],
                "description": "update an access token",
                "operationId": "UpdateAccessToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_token_id",
                        "description": "access token id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "access token info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccessTokenUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccessTokenResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/access-tokens/{access_token_id}:regenerate": {
            "post": {
                "tags": [
                    "access-tokens"
                ],
                "description": "regenereate an access token UUID",
                "operationId": "RegenerateAccessToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_token_id",
                        "description": "access token id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccessTokenCreateResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/access-tokens:validate": {
            "post": {
                "tags": [
                    "access-tokens"
                ],
                "description": "validate an access token",
                "operationId": "ValidateAccessToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "subject_access_token",
                        "description": "access token to be validated",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccessTokenResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/action-logs/": {
            "get": {
                "tags": [
                    "action-logs"
                ],
                "description": "List action logs",
                "operationId": "ListActionLogs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "resource_type",
                        "description": "resource type of action logs",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "status of action logs",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "description": "user id of action logs",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "create_begin",
                        "description": "create begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "create_end",
                        "description": "create end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "related_resource",
                        "description": "related resource info of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionLogsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "action-logs"
                ],
                "description": "create action log",
                "operationId": "CreateActionLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "action log info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActionLogCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionLogResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/action-logs/:user": {
            "get": {
                "tags": [
                    "action-logs"
                ],
                "description": "get action log user info",
                "operationId": "GetActionLogUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionLogUserResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/action-logs/{action_log_id}": {
            "get": {
                "tags": [
                    "action-logs"
                ],
                "description": "get a action log",
                "operationId": "GetActionLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "action_log_id",
                        "description": "action log id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionLogResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "action-logs"
                ],
                "description": "update action log",
                "operationId": "UpdateActionLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "action_log_id",
                        "description": "action log id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "action log info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActionLogUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionLogResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/admin-host-group/": {
            "get": {
                "tags": [
                    "admin-host-group"
                ],
                "description": "List admin host groups",
                "operationId": "ListAdminHostGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AdminHostGroupsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "admin-host-group"
                ],
                "description": "Create an admin host group",
                "operationId": "CreateAdminHostGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "admin_host_group",
                        "description": "admin host group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminHostGroupCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/AdminHostGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/admin-host-group/{group_id}": {
            "get": {
                "tags": [
                    "admin-host-group"
                ],
                "description": "Get an admin host group",
                "operationId": "GetAdminHostGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "the admin host group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AdminHostGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "admin-host-group"
                ],
                "description": "Delete an admin host group",
                "operationId": "DeleteAdminHostGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "the admin host group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AdminHostGroupResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/AdminHostGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/admin-host-group/{group_id}:add": {
            "patch": {
                "tags": [
                    "admin-host-group"
                ],
                "description": "Add a host to admin host group",
                "operationId": "AddHostToAdminHostGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "admin_host_group",
                        "description": "admin host group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminHostGroupUpdateReq"
                        }
                    },
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "the admin host group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/AdminHostGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/admin-host-group/{group_id}:remove": {
            "patch": {
                "tags": [
                    "admin-host-group"
                ],
                "description": "Remove a host from admin host group",
                "operationId": "RemoveHostFromAdminHostGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "admin_host_group",
                        "description": "admin host group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminHostGroupUpdateReq"
                        }
                    },
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "the admin host group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/AdminHostGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-groups/": {
            "get": {
                "tags": [
                    "alert-groups"
                ],
                "description": "List all alert groups",
                "operationId": "ListAlertGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertGroupsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "alert-groups"
                ],
                "description": "create alert group",
                "operationId": "CreateAlertGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "alert group",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertGroupCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/alert-groups/{group_id}": {
            "get": {
                "tags": [
                    "alert-groups"
                ],
                "description": "get alert group",
                "operationId": "GetAlertGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "the id of alert group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "alert-groups"
                ],
                "description": "delete alert group",
                "operationId": "DeleteAlertGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "the id of alert group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "alert-groups"
                ],
                "description": "update alert group",
                "operationId": "UpdateAlertGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "the id of alert group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "alert group",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertGroupUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-info-groups/": {
            "get": {
                "tags": [
                    "alert-info-groups"
                ],
                "description": "List all alert info groups",
                "operationId": "ListAlertInfoGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "q_must",
                        "description": "must query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "should query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "related_resource",
                        "description": "should query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "level",
                        "description": "level of alert info group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resource_type",
                        "description": "resource type of alert info group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resource_id",
                        "description": "resource id of alert info group",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "create_after",
                        "description": "create_after start time of alert info group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "create_before",
                        "description": "create_before end time of alert info group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "acked",
                        "description": "acked of alert info",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "resolved",
                        "description": "resolved or not of alert info",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "description": "group of alert info",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "exclude_cluster",
                        "description": "filter to exclude cluster of alert info",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertInfoGroupsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-info-groups/report": {
            "get": {
                "tags": [
                    "alert-info-groups"
                ],
                "description": "Get report of alert info groups",
                "operationId": "GetAlertInfoGroupsReport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "level",
                        "description": "level of alert info group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resource_type",
                        "description": "resource type of alert info group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "create_after",
                        "description": "create_after timestamp of alert info group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "acked",
                        "description": "acked of alert info",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "resolved",
                        "description": "resolved or not of alert info",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "description": "group of alert info",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{chunked} OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-info-groups/stats": {
            "get": {
                "tags": [
                    "alert-info-groups"
                ],
                "description": "count alert info groups with conditions",
                "operationId": "CountAlertInfoGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "acked",
                        "description": "acked of the most recently alert info in group",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "resolved",
                        "description": "resolved or not of the most recently alert info in group",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "resource_type",
                        "description": "resource type of alert info group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resource_id",
                        "description": "resource id of alert info group",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "start_time",
                        "description": "start time of create of alert info group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "end_time",
                        "description": "end time of create of alert info group",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertStatsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-info-groups/{alert_info_group_id}": {
            "delete": {
                "tags": [
                    "alert-info-groups"
                ],
                "description": "delete an alert info group",
                "operationId": "DeleteAlertInfoGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alert_info_group_id",
                        "description": "the id of alert info group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/AlertInfoGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-info-groups/{alert_info_group_id}:ack": {
            "post": {
                "tags": [
                    "alert-info-groups"
                ],
                "description": "set the acked status of alert info group",
                "operationId": "AckAlertInfoGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alert_info_group_id",
                        "description": "the id of alert info group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/AlertInfoGroupResp"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-info-groups/{alert_info_group_id}:resolve": {
            "post": {
                "tags": [
                    "alert-info-groups"
                ],
                "description": "set the resolved status of alert info group",
                "operationId": "ResolveAlertInfoGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alert_info_group_id",
                        "description": "the id of alert info group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/AlertInfoGroupResp"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-info-groups/{group_id}": {
            "get": {
                "tags": [
                    "alert-info-groups"
                ],
                "description": "get alert info group",
                "operationId": "GetAlertInfoGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "the id of alert info group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertInfoGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-info-root/": {
            "get": {
                "tags": [
                    "alert-info-root"
                ],
                "description": "get the alert info root",
                "operationId": "GetAlertInfoRoot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertInfoRootResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-info-root/:ack": {
            "post": {
                "tags": [
                    "alert-info-root"
                ],
                "description": "set the acked status of all alert infos",
                "operationId": "AckAlertInfoRoot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/AlertInfoRootResp"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-info-root/:resolve": {
            "post": {
                "tags": [
                    "alert-info-root"
                ],
                "description": "set the resolved status of all alert infos",
                "operationId": "ResolveAlertInfoRoot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/AlertInfoRootResp"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/alert-infos/": {
            "get": {
                "tags": [
                    "alert-infos"
                ],
                "description": "List all alert infos",
                "operationId": "ListAlertInfos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "q_must",
                        "description": "must query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "should query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "related_resource",
                        "description": "should query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "level",
                        "description": "level of alert info",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resource_type",
                        "description": "resource type of alert info",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resource_id",
                        "description": "resource id of alert info",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "create_after",
                        "description": "create_after timestamp of alert info",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "acked",
                        "description": "acked of alert info",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "resolved",
                        "description": "resolved or not of alert info",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "description": "group of alert info",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "exclude_cluster",
                        "description": "filter to exclude cluster of alert info",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertInfosResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-infos/report": {
            "get": {
                "tags": [
                    "alert-infos"
                ],
                "description": "Get report of alert infos",
                "operationId": "GetAlertInfosReport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "level",
                        "description": "level of alert info",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resource_type",
                        "description": "resource type of alert info",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resource_id",
                        "description": "resource id of alert info",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "create_after",
                        "description": "create_after timestamp of alert info",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "acked",
                        "description": "acked of alert info",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "resolved",
                        "description": "resolved or not of alert info",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "description": "group of alert info",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{chunked} OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-infos/stats": {
            "get": {
                "tags": [
                    "alert-infos"
                ],
                "description": "count all alert infos",
                "operationId": "CountAlertInfos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "acked",
                        "description": "acked of alert info",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "resolved",
                        "description": "resolved or not of alert info",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "resource_type",
                        "description": "resource type of alert info",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resource_id",
                        "description": "resource id of alert info",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertStatsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-infos/{alert_info_id}": {
            "get": {
                "tags": [
                    "alert-infos"
                ],
                "description": "get an alert info",
                "operationId": "GetAlertInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alert_info_id",
                        "description": "alert info id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertInfoResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "alert-infos"
                ],
                "description": "delete an alert info",
                "operationId": "DeleteAlertInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alert_info_id",
                        "description": "the id of alert info",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/AlertInfoResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-infos/{alert_info_id}:ack": {
            "post": {
                "tags": [
                    "alert-infos"
                ],
                "description": "set the acked status of alert info",
                "operationId": "AckAlertInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alert_info_id",
                        "description": "the id of alert info",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-infos/{alert_info_id}:resolve": {
            "post": {
                "tags": [
                    "alert-infos"
                ],
                "description": "set the resolved status of alert info",
                "operationId": "ResolveAlertInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alert_info_id",
                        "description": "the id of alert info",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-rule-groups/": {
            "get": {
                "tags": [
                    "alert-rule-groups"
                ],
                "description": "List alert rule groups",
                "operationId": "ListAlertRuleGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "resource_type",
                        "description": "resource type of alert rule group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "name of alert rule group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "level",
                        "description": "level of alert rule group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "enabled",
                        "description": "enabled or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertRuleGroupsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-rule-groups/{id}/detail": {
            "get": {
                "tags": [
                    "alert-rule-groups"
                ],
                "description": "Get alert rule group detail",
                "operationId": "GetAlertRuleGroupDetail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "alert rule group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertRuleGroupDetailResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "alert-rule-groups"
                ],
                "description": "set alert rule group",
                "operationId": "UpdateAlertRuleGroupDetail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "alert rule group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "restore",
                        "description": "restore default setup",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "alert rule group detail",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertRuleGroupDetailUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertRuleGroupDetailResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-rules/": {
            "get": {
                "tags": [
                    "alert-rules"
                ],
                "description": "List all alert rules",
                "operationId": "ListAlertRules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "alert_group_id",
                        "description": "alert group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "resource_type",
                        "description": "resource type of alert rule",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "group_name",
                        "description": "group name of alert rule",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "level",
                        "description": "level of alert rule",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "enabled",
                        "description": "enabled or not",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertRulesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-rules/schema": {
            "get": {
                "tags": [
                    "alert-rules"
                ],
                "description": "get alert rule schema",
                "operationId": "GetAlertRuleSchema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertRuleSchemaResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/alert-rules/{rule_id}": {
            "get": {
                "tags": [
                    "alert-rules"
                ],
                "description": "get alert rule",
                "operationId": "GetAlertRule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "rule_id",
                        "description": "the id of alert rule",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertRuleResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "alert-rules"
                ],
                "description": "delete alert rule",
                "operationId": "DeleteAlertRule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "rule_id",
                        "description": "the id of alert rule",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "alert-rules"
                ],
                "description": "set alert rule",
                "operationId": "UpdateAlertRule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "rule_id",
                        "description": "the id of alert rule",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "alert rule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertRuleUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertRuleResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alert-rules/{rule_id}/blacklist": {
            "get": {
                "tags": [
                    "alert-rules"
                ],
                "description": "List all blacklist of alert rule",
                "operationId": "ListAlertRuleResourceBlacklist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "rule_id",
                        "description": "the id of alert rule",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "blacklist",
                        "description": "filter resource in blacklist or not",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertRuleResourceBlacklistResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "alert-rules"
                ],
                "description": "create resource blacklist of alert rule",
                "operationId": "CreateAlertRuleResourceBlacklist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "rule_id",
                        "description": "the id of alert rule",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "resource blacklist",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateAlertRuleResourceBlacklistReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertRuleResourceBlacklistResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "alert-rules"
                ],
                "description": "delete resource blacklist of alert rule",
                "operationId": "DeleteAlertRuleResourceBlacklist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "rule_id",
                        "description": "the id of alert rule",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "resource blacklist",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateAlertRuleResourceBlacklistReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alerts/": {
            "get": {
                "tags": [
                    "alerts"
                ],
                "description": "List all alerts",
                "operationId": "ListAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "resource_type",
                        "description": "resource type of alert",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resource_id",
                        "description": "resource id of alert",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "alert_type",
                        "description": "type of alert",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "acked",
                        "description": "acked of alert",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "resolved",
                        "description": "resolved or not of alert",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "resolve_type",
                        "description": "resolve type of alert",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "level",
                        "description": "level of alert",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_limit",
                        "description": "duration limit param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_offset",
                        "description": "duration offset param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "related_resource",
                        "description": "related resource info of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "alerts"
                ],
                "description": "delete alerts",
                "operationId": "DeleteAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "before",
                        "description": "create time of last alert",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "alerts"
                ],
                "description": "set the ack status of alerts",
                "operationId": "DoAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "alert",
                        "description": "the alerts action info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertsActionReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alerts/:resolve": {
            "post": {
                "tags": [
                    "alerts"
                ],
                "description": "resolve alerts of specific group or resource type",
                "operationId": "ResolveAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "alert",
                        "description": "the alerts resolve info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertsResolveReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/alerts/stats": {
            "get": {
                "tags": [
                    "alerts"
                ],
                "description": "count all alert",
                "operationId": "CountAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "acked",
                        "description": "acked of alert",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "resolved",
                        "description": "resolved or not of alert",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "resource_type",
                        "description": "resource type of alert",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resource_id",
                        "description": "resource id of alert",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertStatsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/alerts/{alert_id}": {
            "get": {
                "tags": [
                    "alerts"
                ],
                "description": "get a alert",
                "operationId": "GetAlert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alert_id",
                        "description": "alert id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "alerts"
                ],
                "description": "set the ack status of alert",
                "operationId": "DoAlert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alert_id",
                        "description": "the id of alert",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "alert",
                        "description": "the alert action info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertActionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "alerts"
                ],
                "description": "Delete alert",
                "operationId": "DeleteAlert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alert_id",
                        "description": "alert id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/alerts/{alert_id}:resolve": {
            "post": {
                "tags": [
                    "alerts"
                ],
                "description": "set the resolved status of alert",
                "operationId": "ResolveAlert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "alert_id",
                        "description": "the id of alert",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AlertResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/applications/": {
            "get": {
                "tags": [
                    "applications"
                ],
                "description": "get application informations",
                "operationId": "ListApplications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApplicationsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "applications"
                ],
                "description": "Create application info",
                "operationId": "CreateApplication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "application info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApplicationResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/applications/{application_id}": {
            "delete": {
                "tags": [
                    "applications"
                ],
                "description": "delete application info",
                "operationId": "DeleteApplication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "application_id",
                        "description": "application id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Not Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "applications"
                ],
                "description": "set application info",
                "operationId": "UpdateApplication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "application_id",
                        "description": "appliction id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "application info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApplicationResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/auth/:validate-privileged-token": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "validate privileged token in some operations",
                "operationId": "ValidatePrivilegedToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "privileged token info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PrivilegedTokenReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PrivilegedTokenResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/auth/rsa-keys": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Create RSA key",
                "operationId": "CreateRSAKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AuthRSAKeyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/auth/security-policy": {
            "get": {
                "tags": [
                    "auth"
                ],
                "description": "setup auth security policy",
                "operationId": "GetAuthSecurityPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AuthSecurityPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "auth"
                ],
                "description": "update auth security policy",
                "operationId": "UpdateAuthSecurityPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "auth security policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthSecurityPolicyUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AuthSecurityPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/auth/tokens": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "creates temporary token for credentials",
                "operationId": "CreateToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "the identity credential",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TokenCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TokenResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/auth/tokens:login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "logs in",
                "operationId": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "the identity credential",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthLoginReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/TokenResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/auth/tokens:logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "logs out",
                "operationId": "Logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-consistent-snapshots/": {
            "get": {
                "tags": [
                    "block-consistent-snapshots"
                ],
                "description": "List block consistent snapshots",
                "operationId": "ListBlockConsistentSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConsistentSnapshotsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "block-consistent-snapshots"
                ],
                "description": "Create block consistent snapshot",
                "operationId": "CreateBlockConsistentSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "consistent snapshot info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConsistentSnapshotCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ConsistentSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-consistent-snapshots/{block_consistent_snapshot_id}": {
            "get": {
                "tags": [
                    "block-consistent-snapshots"
                ],
                "description": "get block consistent snapshot",
                "operationId": "GetBlockConsistentSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_consistent_snapshot_id",
                        "description": "the block consistent snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SnapshotResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-consistent-snapshots/{consistent_snapshot_id}": {
            "delete": {
                "tags": [
                    "block-consistent-snapshots"
                ],
                "description": "Delete block consistent snapshot",
                "operationId": "DeleteBlockConsistentSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "consistent_snapshot_id",
                        "description": "consistent snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/SnapshotResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-snapshots/": {
            "get": {
                "tags": [
                    "block-snapshots"
                ],
                "description": "List block snapshots",
                "operationId": "ListBlockSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pool_id",
                        "description": "pool id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "uid",
                        "description": "snapshot uid",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "block_volume_id",
                        "description": "volume id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "consistent_snapshot_id",
                        "description": "consistent snapshot id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "reserved",
                        "description": "show reserved snapshot or not, default not",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "all",
                        "description": "show all snapshots",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SnapshotsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "block-snapshots"
                ],
                "description": "Create block snapshot",
                "operationId": "CreateBlockSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "snapshot info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/SnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-snapshots/{block_snapshot_id}": {
            "get": {
                "tags": [
                    "block-snapshots"
                ],
                "description": "get block snapshot",
                "operationId": "GetBlockSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_snapshot_id",
                        "description": "the block snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SnapshotResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-snapshots/{snapshot_id}": {
            "delete": {
                "tags": [
                    "block-snapshots"
                ],
                "description": "Delete block snapshot",
                "operationId": "DeleteBlockSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "snapshot_id",
                        "description": "snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/SnapshotResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "block-snapshots"
                ],
                "description": "Update block snapshot info",
                "operationId": "UpdateSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "snapshot_id",
                        "description": "snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "snapshot info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/block-volume-group-snapshots/": {
            "get": {
                "tags": [
                    "block-volume-group-snapshots"
                ],
                "description": "List block volume group snapshots",
                "operationId": "ListBlockVolumeGroupSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "block_volume_group_id",
                        "description": "related volume group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "name of volume group snapshot",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "passive",
                        "description": "passive or not",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupSnapshotsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "block-volume-group-snapshots"
                ],
                "description": "Create block volume group snapshot",
                "operationId": "CreateBlockVolumeGroupSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "volume group snapshot info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupSnapshotCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volume-group-snapshots/{block_volume_group_snapshot_id}": {
            "get": {
                "tags": [
                    "block-volume-group-snapshots"
                ],
                "description": "get block volume group snapshot",
                "operationId": "GetBlockVolumeGroupSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_group_snapshot_id",
                        "description": "the block volume group snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupSnapshotResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "block-volume-group-snapshots"
                ],
                "description": "Delete a block volume group snapshot",
                "operationId": "DeleteBlockVolumeGroupSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_group_snapshot_id",
                        "description": "block volume group snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "block-volume-group-snapshots"
                ],
                "description": "Update block volume group snapshot",
                "operationId": "UpdateBlockVolumeGroupSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_group_snapshot_id",
                        "description": "the block volume group snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "volume group snapshot info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupSnapshotUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volume-groups/": {
            "get": {
                "tags": [
                    "block-volume-groups"
                ],
                "description": "List block volume groups",
                "operationId": "ListBlockVolumeGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "passive",
                        "description": "passive or not",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "name of volume group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dp_volume_group_snapshot_replication_policy_id",
                        "description": "show volume groups of specific dp block async replication policy",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "block-volume-groups"
                ],
                "description": "Create block volume group",
                "operationId": "CreateBlockVolumeGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "volume group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/block-volume-groups/{block_volume_group_id}": {
            "get": {
                "tags": [
                    "block-volume-groups"
                ],
                "description": "get a block volume group",
                "operationId": "GetBlockVolumeGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_group_id",
                        "description": "block volume group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "block-volume-groups"
                ],
                "description": "Delete a block volume group",
                "operationId": "DeleteBlockVolumeGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_group_id",
                        "description": "block volume group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "block-volume-groups"
                ],
                "description": "Update block volume group",
                "operationId": "UpdateBlockVolumeGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_group_id",
                        "description": "block volume group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "volume group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volume-groups/{block_volume_group_id}:rollback": {
            "post": {
                "tags": [
                    "block-volume-groups"
                ],
                "description": "Rollback volume group",
                "operationId": "RollbackVolumeGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_group_id",
                        "description": "block volume group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "rollback info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupRollbackReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volume-groups/{block_volume_group_id}:set-snapshot-replication-protection": {
            "post": {
                "tags": [
                    "block-volume-groups"
                ],
                "description": "Set snapshot replication protection for a volume group",
                "operationId": "SetVolumeGroupSnapshotReplicationProtection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_group_id",
                        "description": "the block volume group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "request info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupSnapshotReplicationProtectionReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/block-volume-groups/{block_volume_group_id}:unset-snapshot-replication-protection": {
            "post": {
                "tags": [
                    "block-volume-groups"
                ],
                "description": "Unset volume group snapshot replication protection for a volume group",
                "operationId": "UnsetVolumeGroupSnapshotReplicationProtection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_group_id",
                        "description": "the volume group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force unset or not",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "reserve_volume_group",
                        "description": "reserve replicated volume group or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volume-migration-jobs/": {
            "get": {
                "tags": [
                    "block-volume-migration-jobs"
                ],
                "description": "List volume migration jobs",
                "operationId": "ListBlockVolumeMigrationJobs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "the status of volume migration job",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BlockVolumeMigrationJobsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volume-migration-jobs/{block_volume_migration_job_id}": {
            "get": {
                "tags": [
                    "block-volume-migration-jobs"
                ],
                "description": "get a volume migration job",
                "operationId": "GetBlockVolumeMigrationJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_migration_job_id",
                        "description": "volume migration job id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BlockVolumeMigrationJobResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volume-migration-jobs/{block_volume_migration_job_id}:cancel": {
            "post": {
                "tags": [
                    "block-volume-migration-jobs"
                ],
                "operationId": "CancelBlockVolumeMigrationJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_migration_job_id",
                        "description": "block volume migration job id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BlockVolumeMigrationJobResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/BlockVolumeMigrationJobResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volume-migration-jobs/{block_volume_migration_job_id}:update": {
            "post": {
                "tags": [
                    "block-volume-migration-jobs"
                ],
                "operationId": "UpdateMigration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_migration_job_id",
                        "description": "block volume migration job id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "volume migration udpate info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BlockVolumeUpdateMigrationReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BlockVolumeMigrationJobResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/BlockVolumeMigrationJobResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/": {
            "get": {
                "tags": [
                    "block-volumes"
                ],
                "description": "List block volumes",
                "operationId": "ListBlockVolumes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "pool_id",
                        "description": "The id of the pool volumes belong to",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "pool_name",
                        "description": "The pool_name of the pool volumes belong to",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "block_snapshot_id",
                        "description": "related snapshot id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "name of volume",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name_prefix",
                        "description": "name prefix of volume",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "volume_name",
                        "description": "volume_name of volume",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "uid",
                        "description": "uid of volume",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "client_group_id",
                        "description": "related client group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "mapping_group_id",
                        "description": "related mapping group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "exclude_mapping_group_id",
                        "description": "exclude mapping group id, with access path id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "access_path_id",
                        "description": "related access path id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "passive",
                        "description": "passive or not",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "recycled",
                        "description": "recycled or not",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "filter with status",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "with_not_used",
                        "description": "list with not used volumes, can be used with access path id",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "all",
                        "description": "show all volumes",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "dp_block_backup_policy_id",
                        "description": "show volumes of specific dp block backup policy",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dp_block_async_replication_policy_id",
                        "description": "show volumes of specific dp block async replication policy",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "could_have_io",
                        "description": "show volumes without volume that cannot have io",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "rbd_client_id",
                        "description": "rbd client id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Create block volume",
                "operationId": "CreateBlockVolume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "volume info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/:update-stat": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "update volume stat from other cluster",
                "operationId": "UpdateVolumeStat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "volume stat",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateVolumeStatReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/samples": {
            "get": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Get samples of multiple block volumes",
                "operationId": "BatchGetBlockVolumeSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MultiVolumesSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}": {
            "get": {
                "tags": [
                    "block-volumes"
                ],
                "description": "get a block volume",
                "operationId": "GetBlockVolume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Delete block volume",
                "operationId": "DeleteBlockVolume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "bypass_trash",
                        "description": "bypass trash or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Update block volume info",
                "operationId": "UpdateBlockVolume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "the block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "volume info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}/samples": {
            "get": {
                "tags": [
                    "block-volumes"
                ],
                "description": "get a block volume's Samples",
                "operationId": "GetBlockVolumeSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}:migrate": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "operationId": "MigrateBlockVolume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "the block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "volume migration info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeMigrateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}:rebuild-replication": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Rebuild block volume replication",
                "operationId": "RebuildBlockVolumeReplication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force rebuild or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}:set-async-replication-protection": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Set async replication protection for a block volume",
                "operationId": "SetAsyncReplicationProtection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "the block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "request info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeAsyncReplicationProtectionReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}:set-backup-protection": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Set backup protection for a block volume",
                "operationId": "SetBackupProtection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "the block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "request info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeBackupProtectionReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}:set-crc": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Set block volume crc",
                "operationId": "SetBlockVolumeCrc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "volume crc info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeCrcSetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}:set-replication": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Set block volume replication",
                "operationId": "SetBlockVolumeReplication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "volume replication info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeReplicationSetReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}:set-snapshot-protection": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Set snapshot protection for a block volume",
                "operationId": "SetSnapshotProtection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "the block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "request info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeSnapshotProtectionReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}:suspend-replication": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Suspend block volume replication",
                "operationId": "SuspendBlockVolumeReplication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}:unset-async-replication-protection": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Unset async replication protection for a block volume",
                "operationId": "UnsetAsyncReplicationProtection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "the block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force unset or not",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "reserve_volume",
                        "description": "reserve replicated volume or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}:unset-backup-protection": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Unset backup protection for a block volume",
                "operationId": "UnsetBackupProtection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "the block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force unset or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}:unset-crc": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Unset block volume crc",
                "operationId": "UnsetBlockVolumeCrc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "volume crc info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeCrcSetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}:unset-replication": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Unset block volume replication",
                "operationId": "UnsetBlockVolumeReplication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}:unset-snapshot-protection": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Unset snapshot protection for a block volume",
                "operationId": "UnsetSnapshotProtection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "the block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force unset or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/block-volumes/{block_volume_id}:update-volume-name": {
            "post": {
                "tags": [
                    "block-volumes"
                ],
                "description": "Update block volume volume_name",
                "operationId": "UpdateBlockVolumeVolumeName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "block_volume_id",
                        "description": "the block volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "volume volume_name",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VolumeUpdateVolumeNameReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VolumeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/chunks/{chunk_id}": {
            "get": {
                "tags": [
                    "chunks"
                ],
                "description": "get an chunk",
                "operationId": "GetChunk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "chunk_id",
                        "description": "The id of the chunk",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{models.PlacementGroup}"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/client-codes/": {
            "get": {
                "tags": [
                    "client-codes"
                ],
                "description": "List client iqns/wwns",
                "operationId": "ListClientCodes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "FC/iSCSI",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "unused",
                        "description": "list unused client codes",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClientCodesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/client-groups/": {
            "get": {
                "tags": [
                    "client-groups"
                ],
                "description": "List client groups",
                "operationId": "ListClientGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "uid",
                        "description": "client group uid",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "block_volume_id",
                        "description": "related block volume id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClientGroupsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "client-groups"
                ],
                "description": "Create a client group",
                "operationId": "CreateClientGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "client",
                        "description": "client group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClientGroupCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ClientGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/client-groups/{client_group_id}": {
            "get": {
                "tags": [
                    "client-groups"
                ],
                "description": "get a client group",
                "operationId": "GetClientGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "client_group_id",
                        "description": "client group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClientGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "client-groups"
                ],
                "description": "Delete a client",
                "operationId": "DeleteClientGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "client_group_id",
                        "description": "client group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "client-groups"
                ],
                "description": "update client group",
                "operationId": "UpdateClientGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "client_group_id",
                        "description": "client group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "client",
                        "description": "client group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClientGroupUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ClientGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/client-lun-mappings/": {
            "get": {
                "tags": [
                    "client-lun-mappings"
                ],
                "description": "List client lun mappings",
                "operationId": "ListClientLunMappings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "mapping_group_id",
                        "description": "mapping group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClientLunMappingsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/client-lun-mappings/{client_lun_mapping_id}": {
            "get": {
                "tags": [
                    "client-lun-mappings"
                ],
                "description": "get a client lun mapping",
                "operationId": "GetClientLunMapping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "client_lun_mapping_id",
                        "description": "client lun mapping id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClientLunMappingResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/clients/": {
            "get": {
                "tags": [
                    "clients"
                ],
                "description": "List clients",
                "operationId": "ListClients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "client_group_id",
                        "description": "client group id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClientsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/clients/{client_id}": {
            "get": {
                "tags": [
                    "clients"
                ],
                "description": "Get client",
                "operationId": "GetClient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "client_id",
                        "description": "client id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClientResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cloud-instances/": {
            "get": {
                "tags": [
                    "cloud-instances"
                ],
                "description": "List cloud instances",
                "operationId": "ListCloudInstances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cloud_platform_id",
                        "description": "cloud platform id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cloud_platform_type",
                        "description": "cloud platform type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cloud_platform_name",
                        "description": "cloud platform name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CloudInstancesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cloud-instances/{cloud_instance_id}": {
            "get": {
                "tags": [
                    "cloud-instances"
                ],
                "description": "Get a cloud instance",
                "operationId": "GetCloudInstance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cloud_instance_id",
                        "description": "cloud instance id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CloudInstanceResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cloud-instances/{cloud_instance_id}/samples": {
            "get": {
                "tags": [
                    "cloud-instances"
                ],
                "description": "get a cloud instance's Samples",
                "operationId": "GetCloudInstanceSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cloud_instance_id",
                        "description": "cloud instance id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CloudInstanceSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cloud-platforms/": {
            "get": {
                "tags": [
                    "cloud-platforms"
                ],
                "description": "List cloud platforms",
                "operationId": "ListCloudPlatforms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CloudPlatformsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "cloud-platforms"
                ],
                "description": "Create cloud platform",
                "operationId": "CreateCloudPlatform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "cloud platform info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudPlatformCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/CloudPlatformResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cloud-platforms/{cloud_platform_id}": {
            "get": {
                "tags": [
                    "cloud-platforms"
                ],
                "description": "Get a cloud platform",
                "operationId": "GetCloudPlatform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cloud_platform_id",
                        "description": "cloud platform id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CloudPlatformResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "cloud-platforms"
                ],
                "description": "Delete cloud platform",
                "operationId": "DeleteCloudPlatform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cloud_platform_id",
                        "description": "cloud platform id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "cloud-platforms"
                ],
                "description": "Update a cloud platform",
                "operationId": "UpdateCloudPlatform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cloud_platform_id",
                        "description": "cloud platform id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "cloud platform info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudPlatformUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CloudPlatformResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cloud-platforms/{cloud_platform_id}:sync": {
            "post": {
                "tags": [
                    "cloud-platforms"
                ],
                "description": "Sync a cloud platform",
                "operationId": "SyncCloudPlatform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cloud_platform_id",
                        "description": "cloud platform id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/CloudPlatformResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/cloud-volume-attachments/": {
            "get": {
                "tags": [
                    "cloud-volume-attachments"
                ],
                "description": "List cloud volume attachments",
                "operationId": "ListCloudVolumeAttachments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cloud_instance_id",
                        "description": "cloud instance id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CloudVolumeAttachmentsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cloud-volumes/": {
            "get": {
                "tags": [
                    "cloud-volumes"
                ],
                "description": "List cloud volumes",
                "operationId": "ListCloudVolumes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cloud_instance_id",
                        "description": "cloud instance id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CloudVolumesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cloud-volumes/{cloud_volume_id}": {
            "get": {
                "tags": [
                    "cloud-volumes"
                ],
                "description": "Get a cloud volume",
                "operationId": "GetCloudVolume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cloud_volume_id",
                        "description": "cloud volume id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CloudVolumeResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster-services/": {
            "get": {
                "tags": [
                    "cluster-services"
                ],
                "description": "List cluster services",
                "operationId": "ListClusterServices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterServicesResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster-services/{service_id}": {
            "get": {
                "tags": [
                    "cluster-services"
                ],
                "description": "Get a cluster service",
                "operationId": "GetClusterService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "service_id",
                        "description": "clsuter service id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterServiceResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster-services/{service_id}:rebuild": {
            "post": {
                "tags": [
                    "cluster-services"
                ],
                "description": "Rebuild the cluster service.",
                "operationId": "RebuildClusterService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "service_id",
                        "description": "clsuter service id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ClusterServiceResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster-services/{service_id}:reindex-docs": {
            "post": {
                "tags": [
                    "cluster-services"
                ],
                "description": "Reindex search docs.",
                "operationId": "ReindexDocs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "service_id",
                        "description": "clsuter service id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ClusterServiceResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "Output the status of the cluster",
                "operationId": "Cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterRecordResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "cluster"
                ],
                "description": "set disk lighting mode of cluster",
                "operationId": "UpdateCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "cluster disk lighting info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/action-log-report": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "Get report of cluster action logs",
                "operationId": "GetActionLogReport",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "binary",
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/alert-report": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "Get report of cluster alerts",
                "operationId": "GetAlertReport",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "binary",
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/bootnode": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "get bootnode info",
                "operationId": "BootNode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BootNodeResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "cluster"
                ],
                "description": "set bootnode info",
                "operationId": "SetBootNode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "bootnode info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BootNodeReq"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BootNodeResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/BootNodeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/download": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "download the file which in whitelist path",
                "operationId": "Download",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "paths",
                        "description": "file path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "binary",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/event-log-report": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "Get report of cluster event logs",
                "operationId": "GetEventLogReport",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "binary",
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/installation": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "show the installation status",
                "operationId": "Installation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterInstallationResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/cluster/maintenance": {
            "put": {
                "tags": [
                    "cluster"
                ],
                "description": "update maintenance mode of cluster",
                "operationId": "UpdateClusterMaintenance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "cluster maintenance info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterMaintainReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/ng-object-storage": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "Get osp status",
                "operationId": "GetNgObjectStorage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NgObjectStorageResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/ng-object-storage:set-domain-names": {
            "post": {
                "tags": [
                    "cluster"
                ],
                "description": "Set osp domain names",
                "operationId": "SetNgObjectStorageDomainNames",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "domain names info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NgObjectStorageSetDomainNamesReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/NgObjectStorageResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/NgObjectStorageResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/object-storage": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "Get object storage system status",
                "operationId": "GetObjectStorage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "cluster"
                ],
                "description": "Initialize object storage system in current cluster",
                "operationId": "InitObjectStorage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "init info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageInitReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "cluster"
                ],
                "description": "Delete object storage system in current cluster",
                "operationId": "DeleteObjectStorage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "409": {
                        "description": "Conflicted"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "cluster"
                ],
                "description": "Set object storage system in current cluster",
                "operationId": "SetObjectStorage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "set info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageSetReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/object-storage/samples": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "Get object storage's samples",
                "operationId": "GetObjectStorageSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageSamplesResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/object-storage:commit-master-switching": {
            "post": {
                "tags": [
                    "cluster"
                ],
                "description": "Commit the switch to new master os zone.",
                "operationId": "CommitMasterSwitching",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/object-storage:enable-multi-zone": {
            "post": {
                "tags": [
                    "cluster"
                ],
                "description": "Enable multi zone for object storage system",
                "operationId": "EnableMultiZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/cluster/object-storage:prepare-master-switching": {
            "post": {
                "tags": [
                    "cluster"
                ],
                "description": "Prepare to switch to new master os zone.",
                "operationId": "PrepareMasterSwitching",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/object-storage:rollback-master-switching": {
            "post": {
                "tags": [
                    "cluster"
                ],
                "description": "Rollback the switch to new master os zone.",
                "operationId": "RollbackMasterSwitching",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/object-storage:set-dns-names": {
            "post": {
                "tags": [
                    "cluster"
                ],
                "description": "Set object storage dns names",
                "operationId": "SetObjectStorageDNSNames",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dns names info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageSetDNSNamesReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/object-storage:set-origin-pull-hosts": {
            "post": {
                "tags": [
                    "cluster"
                ],
                "description": "Set object storage origin pull enable hosts",
                "operationId": "SetObjectStorageOriginPullHosts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "origin pull enabled hosts info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageSetFunctionEnableHostsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/cluster/object-storage:set-tiering-hosts": {
            "post": {
                "tags": [
                    "cluster"
                ],
                "description": "Set object storage tiering enable hosts",
                "operationId": "SetObjectStorageTieringHosts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "tiering enabled hosts info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageSetFunctionEnableHostsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/object-storage:switch-os-zone-to-master": {
            "post": {
                "tags": [
                    "cluster"
                ],
                "description": "Switch current os zone to master",
                "operationId": "SwitchOSZoneToMaster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force to switch even if old master is dead",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/report": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "Get report of a cluster",
                "operationId": "GetClusterReport",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "binary",
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/samples": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "get cluster's samples",
                "operationId": "GetClusterSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterSamplesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/stats": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "Get overview data of a cluster",
                "operationId": "GetClusterOverview",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterOverviewResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/stats-usage-prediction": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "Get prediction of stats space usage",
                "operationId": "GetClusterStatsUsagePrediction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterStatsPredictionResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster/time": {
            "get": {
                "tags": [
                    "cluster"
                ],
                "description": "show current server time",
                "operationId": "ServerTime",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterServerTimeResp"
                        }
                    }
                }
            }
        },
        "/cluster:remove-access-info": {
            "post": {
                "tags": [
                    "cluster"
                ],
                "description": "Remove cluster access info",
                "operationId": "RemoveClusterAccessInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster:set-access-info": {
            "post": {
                "tags": [
                    "cluster"
                ],
                "description": "Set cluster access info",
                "operationId": "SetClusterAccessInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "access info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterSetAccessInfoReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/cluster:set-network": {
            "post": {
                "tags": [
                    "cluster"
                ],
                "description": "Set cluster gateway networks",
                "operationId": "SetClusterNetwork",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateway network",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterSetNetworkReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/clusters/": {
            "get": {
                "tags": [
                    "clusters"
                ],
                "description": "List clusters",
                "operationId": "ListClusters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "cluster type",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClustersResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "clusters"
                ],
                "description": "Create cluster",
                "operationId": "CreateCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "cluster info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/clusters/{cluster_id}": {
            "delete": {
                "tags": [
                    "clusters"
                ],
                "description": "Delete a cluster",
                "operationId": "DeleteCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ClusterResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "clusters"
                ],
                "description": "update cluster info",
                "operationId": "UpdateClusters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "cluster info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClustersUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/clusters/{cluster_id}/osp-overview": {
            "get": {
                "tags": [
                    "clusters"
                ],
                "description": "returns osp cluster overview",
                "operationId": "GetOspClusterOverview",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OspClusterOverviewResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/clusters/{cluster_id}::action": {
            "patch": {
                "tags": [
                    "clusters"
                ],
                "description": "skip initial action",
                "operationId": "ClusterSkipAction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "hosts info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterAddHostsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/clusters/{cluster_id}:add-hosts": {
            "post": {
                "tags": [
                    "clusters"
                ],
                "description": "add hosts to a cluster",
                "operationId": "ClusterAddHosts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "hosts info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterAddHostsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/clusters/{cluster_id}:remove-hosts": {
            "post": {
                "tags": [
                    "clusters"
                ],
                "description": "remove hosts",
                "operationId": "ClusterRemoveHosts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "host ids",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterRemoveHostsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/conf-types/": {
            "get": {
                "tags": [
                    "conf-types"
                ],
                "description": "List conf types",
                "operationId": "ListConfTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfTypesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/confs/": {
            "get": {
                "tags": [
                    "confs"
                ],
                "description": "List conf items with query",
                "operationId": "ListConfItemsQuery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "filter the type of conf",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "key",
                        "description": "filter the key of conf",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfItemsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "confs"
                ],
                "description": "set conf item",
                "operationId": "SetConfItem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "conf item",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConfItemSetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfItem"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/confs/{type}": {
            "get": {
                "tags": [
                    "confs"
                ],
                "description": "List conf items",
                "operationId": "ListConfItems",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "type",
                        "description": "filter the type of conf",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfItemsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "confs"
                ],
                "description": "set conf items",
                "operationId": "SetConfItems",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "description": "filter the type of conf",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "conf items",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConfItemsSetReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/confs/{type}/{key}": {
            "get": {
                "tags": [
                    "confs"
                ],
                "description": "get conf item",
                "operationId": "GetConfItem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "description": "filter the type of conf",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "key",
                        "description": "filter the key of conf item",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfItemResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "confs"
                ],
                "description": "delete conf item",
                "operationId": "DeleteConfItem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "description": "filter the type of conf item",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "key",
                        "description": "filter the key of conf item",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/crypto-keys/": {
            "get": {
                "tags": [
                    "crypto-keys"
                ],
                "description": "List crypto keys",
                "operationId": "ListCryptoKeys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CryptoKeysResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "crypto-keys"
                ],
                "description": "Create a crypto key",
                "operationId": "CreateCryptoKey",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "formData",
                        "name": "name",
                        "description": "crypto key name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "key",
                        "description": "crypto key",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CryptoKeyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/crypto-keys/{key_id}": {
            "get": {
                "tags": [
                    "crypto-keys"
                ],
                "description": "Get a crypto key",
                "operationId": "GetCryptoKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "key_id",
                        "description": "crypto key id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CryptoKeyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "crypto-keys"
                ],
                "description": "Update a crypto key",
                "operationId": "UpdateCryptoKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "key_id",
                        "description": "crypto key id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "crypto key info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CryptoKeyUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CryptoKeyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/crypto-keys/{key_id}/key": {
            "get": {
                "tags": [
                    "crypto-keys"
                ],
                "operationId": "DownloadCryptoKey",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "key_id",
                        "description": "crypto key id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "password",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "binary",
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-audit-logs/": {
            "get": {
                "tags": [
                    "dfs-audit-logs"
                ],
                "description": "List dfs audit logs",
                "operationId": "ListDfsAuditLogs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsAuditLogsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-audit-logs/{dfs_audit_log_id}": {
            "patch": {
                "tags": [
                    "dfs-audit-logs"
                ],
                "description": "Update dfs audit log",
                "operationId": "UpdateDfsAuditLog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_audit_log_id",
                        "description": "dfs audit log id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dfs audit log info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsAuditLogUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsAuditLogResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsAuditLogResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-directories/:check-resource": {
            "post": {
                "tags": [
                    "dfs-directories"
                ],
                "description": "check if resource exists on directory",
                "operationId": "CheckDirectoryResources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "directory info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsDirectoryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsDirectoryResourcesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-directories/:create": {
            "post": {
                "tags": [
                    "dfs-directories"
                ],
                "description": "Create directories in dfs rootfs",
                "operationId": "CreateDfsDirectories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "directories info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsDirectoriesReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsDirectoriesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-directories/:delete": {
            "post": {
                "tags": [
                    "dfs-directories"
                ],
                "description": "Delete directories in dfs rootfs, deprecated",
                "operationId": "DeleteDfsDirectories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "directories info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsDirectoriesReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsDirectoriesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-directories/:mkdir": {
            "post": {
                "tags": [
                    "dfs-directories"
                ],
                "description": "Create directory in dfs rootfs",
                "operationId": "CreateDfsDirectory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "directory info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsDirectoryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsDirectoryResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsDirectoryResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-directories/:rmdir": {
            "post": {
                "tags": [
                    "dfs-directories"
                ],
                "description": "Delete directory in dfs rootfs",
                "operationId": "DeleteDfsDirectory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "directory info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsDirectoryReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsDirectoryResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-directories/:update-storage-policy": {
            "patch": {
                "tags": [
                    "dfs-directories"
                ],
                "description": "Update policy on Directory",
                "operationId": "UpdatePolicyOnDfsDirectory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsDirectoryReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsDirectoryResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-directories/directory-validator": {
            "get": {
                "tags": [
                    "dfs-directories"
                ],
                "description": "validate specified directory whether exists, subdirectory contains quotas, snapshots, shares",
                "operationId": "DirectoryValidator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "rootfs_id",
                        "description": "dfs rootfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "dfs quota path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsDirectoryValidationResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-files/": {
            "post": {
                "tags": [
                    "dfs-files"
                ],
                "description": "List dfs files in a directory",
                "operationId": "ListDfsFiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "rootfs_id",
                        "description": "dfs rootfs id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "parent path",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "start",
                        "description": "start file for list",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "prefix",
                        "description": "prefix to filter file or directory",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "filter by file or dir type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "worm",
                        "description": "check dir worm before enable filter",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "reverse",
                        "description": "sort reverse",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "page_up",
                        "description": "query last page instead of next",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "hidden",
                        "description": "show hidden files",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsFilesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-files/:chmod": {
            "post": {
                "tags": [
                    "dfs-files"
                ],
                "description": "Set file mode",
                "operationId": "Chmod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "path and permission info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChmodReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-files/:download": {
            "get": {
                "tags": [
                    "dfs-files"
                ],
                "description": "Download a file from dfs",
                "operationId": "DownloadDfsFile",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "rootfs_id",
                        "description": "dfs rootfs id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "dfs file path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "binary",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-files/:find": {
            "get": {
                "tags": [
                    "dfs-files"
                ],
                "description": "Find files in dfs",
                "operationId": "FindDfsFiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "rootfs_id",
                        "description": "dfs rootfs id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "dfs dirctory path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "filter type, 'file' or 'dir'",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsFileBasesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-files/:stat": {
            "post": {
                "tags": [
                    "dfs-files"
                ],
                "description": "Get dfs file Stat",
                "operationId": "StatDfsFile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "rootfs_id",
                        "description": "dfs rootfs id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "parent path",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsFileResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-files/log-report": {
            "get": {
                "tags": [
                    "dfs-files"
                ],
                "description": "Get report of a gfs log",
                "operationId": "GetDfsLogReport",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "dfs_rootfs_id",
                        "description": "dfs rootfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "paths",
                        "description": "dfs log path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "binary",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-files:delete": {
            "post": {
                "tags": [
                    "dfs-files"
                ],
                "description": "delete dfs file from rootfs",
                "operationId": "DeleteDfsFile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "active pool ids",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsFileDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Not Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-ftp-sessions/": {
            "get": {
                "tags": [
                    "dfs-ftp-sessions"
                ],
                "description": "List dfs ftp sessions",
                "operationId": "ListDfsFTPSessions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_ftp_share_id",
                        "description": "dfs ftp share id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsFTPSessionsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-ftp-share-acls/": {
            "get": {
                "tags": [
                    "dfs-ftp-share-acls"
                ],
                "description": "List dfs ftp share acls",
                "operationId": "ListDfsFTPShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_ftp_share_id",
                        "description": "dfs ftp share id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsFTPShareACLsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-ftp-shares/": {
            "get": {
                "tags": [
                    "dfs-ftp-shares"
                ],
                "description": "List dfs ftp shares",
                "operationId": "ListDfsFTPShares",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_rootfs_id",
                        "description": "dfs rootfs id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "related dfs path",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_gateway_group_id",
                        "description": "dfs gateway group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsFTPSharesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-ftp-shares"
                ],
                "description": "Create dfs ftp share",
                "operationId": "CreateDfsFTPShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "allow_path_create",
                        "description": "allow create path when not existed",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsFTPShareCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsFTPShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-ftp-shares/{dfs_ftp_share_id}": {
            "get": {
                "tags": [
                    "dfs-ftp-shares"
                ],
                "description": "Get dfs ftp share",
                "operationId": "GetDfsFTPShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_ftp_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsFTPShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-ftp-shares"
                ],
                "description": "delete dfs ftp share",
                "operationId": "DeleteDfsFTPShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_ftp_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "with_directory",
                        "description": "also delete directory",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsFTPShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-ftp-shares"
                ],
                "description": "update dfs ftp shares",
                "operationId": "UpdateDfsFTPShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_ftp_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsFTPShareUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsFTPShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-ftp-shares/{dfs_ftp_share_id}:add-acls": {
            "post": {
                "tags": [
                    "dfs-ftp-shares"
                ],
                "description": "Add dfs ftp share acls",
                "operationId": "AddDfsFTPShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_ftp_share_id",
                        "description": "dfs ftp share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "ftp share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsFTPShareAddACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsFTPShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-ftp-shares/{dfs_ftp_share_id}:remove-acls": {
            "post": {
                "tags": [
                    "dfs-ftp-shares"
                ],
                "description": "remove dfs ftp share acls",
                "operationId": "RemoveDfsFTPShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_ftp_share_id",
                        "description": "dfs ftp share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsFTPShareRemoveACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsFTPShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-ftp-shares/{dfs_ftp_share_id}:update-acls": {
            "post": {
                "tags": [
                    "dfs-ftp-shares"
                ],
                "description": "Update dfs ftp share acls",
                "operationId": "UpdateDfsFTPShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_ftp_share_id",
                        "description": "ftp share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "ftp share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsFTPShareUpdateACLsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsFTPShareResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsFTPShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateway-groups/": {
            "get": {
                "tags": [
                    "dfs-gateway-groups"
                ],
                "description": "List dfs gateway groups",
                "operationId": "ListDfsGatewayGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "type of dfs gateway group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "security",
                        "description": "security of dfs gateway group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-gateway-groups"
                ],
                "description": "Create dfs gateway group",
                "operationId": "CreateDfsGatewayGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateway group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateway-groups/{dfs_gateway_group_id}": {
            "get": {
                "tags": [
                    "dfs-gateway-groups"
                ],
                "description": "Get dfs gateway group",
                "operationId": "GetDfsGatewayGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_group_id",
                        "description": "gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-gateway-groups"
                ],
                "description": "delete dfs gateway group",
                "operationId": "DeleteDfsGatewayGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_group_id",
                        "description": "gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-gateway-groups"
                ],
                "description": "Update dfs gateway group",
                "operationId": "UpdateDfsGatewayGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_group_id",
                        "description": "gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateway group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateway-groups/{dfs_gateway_group_id}:add-gateways": {
            "post": {
                "tags": [
                    "dfs-gateway-groups"
                ],
                "description": "add dfs gateways",
                "operationId": "AddDfsGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_group_id",
                        "description": "gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateways info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupAddGatewaysReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateway-groups/{dfs_gateway_group_id}:rebuild-gateways": {
            "post": {
                "tags": [
                    "dfs-gateway-groups"
                ],
                "description": "rebuild gateways in gateway group",
                "operationId": "RebuildDfsGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_group_id",
                        "description": "gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateways info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupRebuildGatewaysReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateway-groups/{dfs_gateway_group_id}:remove-gateways": {
            "post": {
                "tags": [
                    "dfs-gateway-groups"
                ],
                "description": "remove gateways from gateway group",
                "operationId": "RemoveDfsGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_group_id",
                        "description": "gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateways info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupRemoveGatewaysReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateway-groups/{dfs_gateway_group_id}:update-types": {
            "post": {
                "tags": [
                    "dfs-gateway-groups"
                ],
                "description": "Update protocal types of dfs gateway group",
                "operationId": "UpdateDfsGatewayGroupTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_group_id",
                        "description": "gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateway group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupUpdateTypesReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateway-groups/{dfs_gateway_group_id}:update-vips": {
            "post": {
                "tags": [
                    "dfs-gateway-groups"
                ],
                "description": "Update VIPs of dfs gateway group",
                "operationId": "UpdateDfsGatewayGroupVIPs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_group_id",
                        "description": "gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateway group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupUpdateVIPsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateway-network-addresses/": {
            "get": {
                "tags": [
                    "dfs-gateway-network-addresses"
                ],
                "description": "List dfs gateway network addresses",
                "operationId": "ListDfsGatewayNetworkAddresses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_gateway_group_id",
                        "description": "dfs gateway group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dfs_gateway_zone_id",
                        "description": "dfs gateway zone id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayNetworkAddressesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateway-network-addresses/{dfs_gateway_network_address_id}": {
            "get": {
                "tags": [
                    "dfs-gateway-network-addresses"
                ],
                "description": "Get dfs gateway",
                "operationId": "GetDfsGatewayNetworkAddress",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_network_address_id",
                        "description": "gateway network address id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayNetworkAddressResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateway-zones/": {
            "get": {
                "tags": [
                    "dfs-gateway-zones"
                ],
                "description": "List dfs gateway zones",
                "operationId": "ListDfsGatewayZones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayZonesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-gateway-zones"
                ],
                "description": "Create dfs gateway zone",
                "operationId": "CreateDfsGatewayZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateway zone info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayZoneCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayZoneResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-gateway-zones/{dfs_gateway_zone_id}": {
            "get": {
                "tags": [
                    "dfs-gateway-zones"
                ],
                "description": "Get dfs gateway zone",
                "operationId": "GetDfsGatewayZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_zone_id",
                        "description": "gateway zone id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayZoneResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-gateway-zones"
                ],
                "description": "delete dfs gateway zone",
                "operationId": "DeleteDfsGatewayZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_zone_id",
                        "description": "gateway zone id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayZoneResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-gateway-zones"
                ],
                "description": "Update dfs gateway zone",
                "operationId": "UpdateDfsGatewayZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_zone_id",
                        "description": "gateway zone id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateway zone info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayZoneUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayZoneResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateway-zones/{dfs_gateway_zone_id}/samples": {
            "get": {
                "tags": [
                    "dfs-gateway-zones"
                ],
                "description": "get a dfs gateway zone's samples",
                "operationId": "GetDfsGatewayZoneSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_zone_id",
                        "description": "dfs gateway zone id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayZoneSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateways/": {
            "get": {
                "tags": [
                    "dfs-gateways"
                ],
                "description": "List dfs gateways",
                "operationId": "ListDfsGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_gateway_group_id",
                        "description": "dfs gateway group id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewaysResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateways/{dfs_gateway_id}": {
            "get": {
                "tags": [
                    "dfs-gateways"
                ],
                "description": "Get dfs gateway",
                "operationId": "GetDfsGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_id",
                        "description": "gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateways/{dfs_gateway_id}/connections": {
            "get": {
                "tags": [
                    "dfs-gateways"
                ],
                "description": "list client connections of dfs gateway",
                "operationId": "ListDfsGatewayConnections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_id",
                        "description": "dfs gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "types",
                        "description": "share types, value is smb|nfs|ftp|s3",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewayConnectionsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-gateways/{dfs_gateway_id}/samples": {
            "get": {
                "tags": [
                    "dfs-gateways"
                ],
                "description": "get a dfs gateway's samples",
                "operationId": "GetDfsGatewaySamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_gateway_id",
                        "description": "dfs gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsGatewaySamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-hdfs-acls/": {
            "get": {
                "tags": [
                    "dfs-hdfs-acls"
                ],
                "description": "List dfs hdfs acl",
                "operationId": "ListDfsHdfsACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_hdfs_id",
                        "description": "dfs hdfs id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsACLsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-hdfses/": {
            "get": {
                "tags": [
                    "dfs-hdfses"
                ],
                "description": "List dfs hdfs",
                "operationId": "ListDfsHdfses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "related dfs path",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_gateway_zone_id",
                        "description": "dfs gateway zone id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-hdfses"
                ],
                "description": "Create dfs hdfs",
                "operationId": "CreateDfsHdfs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "allow_path_create",
                        "description": "allow create path when not existed",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "hdfs info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-hdfses/{dfs_hdfs_id}": {
            "get": {
                "tags": [
                    "dfs-hdfses"
                ],
                "description": "Get dfs hdfs",
                "operationId": "GetDfsHdfs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_hdfs_id",
                        "description": "dfs hdfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-hdfses"
                ],
                "description": "delete dfs hdfs",
                "operationId": "DeleteDfsHdfs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_hdfs_id",
                        "description": "dfs hdfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-hdfses"
                ],
                "description": "Update dfs hdfs",
                "operationId": "UpdateDfsHdfs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_hdfs_id",
                        "description": "hdfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dfs hdfs info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-hdfses/{dfs_hdfs_id}:add-acls": {
            "post": {
                "tags": [
                    "dfs-hdfses"
                ],
                "description": "add dfs hdfs acls",
                "operationId": "AddDfsHdfsACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_hdfs_id",
                        "description": "hdfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dfs hdfs info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsAddACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-hdfses/{dfs_hdfs_id}:remove-acls": {
            "post": {
                "tags": [
                    "dfs-hdfses"
                ],
                "description": "remove dfs hdfs acls",
                "operationId": "RemoveDfsHdfsACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_hdfs_id",
                        "description": "dfs hdfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "hdfs acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsRemoveACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-hdfses/{dfs_hdfs_id}:update-acls": {
            "patch": {
                "tags": [
                    "dfs-hdfses"
                ],
                "description": "Update dfs hdfs ACL",
                "operationId": "UpdateDfsHdfsACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_hdfs_id",
                        "description": "hdfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "hdfs acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsUpdateACLsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsHdfsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-nfs-connections/": {
            "get": {
                "tags": [
                    "dfs-nfs-connections"
                ],
                "description": "List dfs nfs connections",
                "operationId": "ListDfsNFSConnections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_nfs_share_id",
                        "description": "dfs nfs share id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsNFSConnectionsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-nfs-share-acls/": {
            "get": {
                "tags": [
                    "dfs-nfs-share-acls"
                ],
                "description": "List dfs nfs shares acls",
                "operationId": "ListDfsNFSShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_nfs_share_id",
                        "description": "dfs nfs shares id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareACLsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-nfs-shares/": {
            "get": {
                "tags": [
                    "dfs-nfs-shares"
                ],
                "description": "List dfs nfs sharess",
                "operationId": "ListDfsNFSShares",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dfs_rootfs_id",
                        "description": "dfs rootfs id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "related dfs path",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_gateway_group_id",
                        "description": "dfs gateway group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsNFSSharesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-nfs-shares"
                ],
                "description": "Create dfs nfs shares",
                "operationId": "CreateDfsNFSShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "allow_path_create",
                        "description": "allow create path when not existed",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-nfs-shares/{dfs_nfs_share_id}": {
            "get": {
                "tags": [
                    "dfs-nfs-shares"
                ],
                "description": "Get dfs nfs shares",
                "operationId": "GetDfsNFSShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_nfs_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-nfs-shares"
                ],
                "description": "delete dfs nfs shares",
                "operationId": "DeleteDfsNFSShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_nfs_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "with_directory",
                        "description": "also delete directory",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-nfs-shares"
                ],
                "description": "update dfs nfs shares",
                "operationId": "UpdateDfsNFSShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_nfs_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareResp"
                        }
                    },
                    "202": {
                        "description": "Accept",
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-nfs-shares/{dfs_nfs_share_id}:add-acls": {
            "post": {
                "tags": [
                    "dfs-nfs-shares"
                ],
                "description": "Add dfs nfs shares acls",
                "operationId": "AddDfsNFSShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_nfs_share_id",
                        "description": "dfs nfs shares id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareAddACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-nfs-shares/{dfs_nfs_share_id}:remove-acls": {
            "post": {
                "tags": [
                    "dfs-nfs-shares"
                ],
                "description": "remove dfs nfs shares acls",
                "operationId": "RemoveDfsNFSShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_nfs_share_id",
                        "description": "dfs nfs shares id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareRemoveACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-nfs-shares/{dfs_nfs_share_id}:set-acls": {
            "post": {
                "tags": [
                    "dfs-nfs-shares"
                ],
                "description": "Set all acls of dfs nfs share",
                "operationId": "SetDfsNFSShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_nfs_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareSetACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-nfs-shares/{dfs_nfs_share_id}:update-acls": {
            "post": {
                "tags": [
                    "dfs-nfs-shares"
                ],
                "description": "Update dfs nfs share acls",
                "operationId": "UpdateDfsNFSShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_nfs_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareUpdateACLsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsNFSShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-path-performances/": {
            "get": {
                "tags": [
                    "dfs-path-performances"
                ],
                "description": "List dfs path performances",
                "operationId": "ListDfsPathPerformances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "path",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsPathPerformancesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-path-performances"
                ],
                "description": "Create dfs path performance",
                "operationId": "CreateDfsPathPerformance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "path performance info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsPathPerformanceCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsPathPerformanceResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-path-performances/{dfs_path_performance_id}": {
            "get": {
                "tags": [
                    "dfs-path-performances"
                ],
                "description": "Get dfs path performance",
                "operationId": "GetDfsPathPerformance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_path_performance_id",
                        "description": "path performance id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsPathPerformanceResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-path-performances"
                ],
                "description": "Delete dfs path performance",
                "operationId": "DeleteDfsPathPerformance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_path_performance_id",
                        "description": "dfs path performance id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsPathPerformanceResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-path-performances/{dfs_path_performance_id}/samples": {
            "get": {
                "tags": [
                    "dfs-path-performances"
                ],
                "description": "get a dfs path performance's samples",
                "operationId": "GetDfsPathPerformanceSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_path_performance_id",
                        "description": "dfs path performance id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsPathPerformanceSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-qos-policies/": {
            "get": {
                "tags": [
                    "dfs-qos-policies"
                ],
                "description": "List dfs qos policies",
                "operationId": "ListDfsQosPolicies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQosPoliciesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-qos-policies"
                ],
                "description": "Create dfs qos policy",
                "operationId": "CreateDfsQosPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "qos policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsQosPolicyCreateReq"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQosPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-qos-policies/{policy_id}": {
            "get": {
                "tags": [
                    "dfs-qos-policies"
                ],
                "description": "Get dfs qos policy",
                "operationId": "GetDfsQosPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "dfs qos policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQosPolicyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-qos-policies"
                ],
                "description": "delete dfs qos policy",
                "operationId": "DeleteDfsQosPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQosPolicyResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsQosPolicyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-qos-policies"
                ],
                "description": "Update dfs qos policy",
                "operationId": "UpdateDfsQosPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dfs qos policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsQosPolicyUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQosPolicyResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsQosPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-qoses/": {
            "get": {
                "tags": [
                    "dfs-qoses"
                ],
                "description": "List dfs qoses",
                "operationId": "ListDfsQoses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "path",
                        "description": "dfs qos path",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "policy_id",
                        "description": "policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQosesRecordsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-qoses"
                ],
                "description": "Create dfs qos",
                "operationId": "CreateDfsQos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "qos info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsQosCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsQosResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-qoses/{dfs_qos_id}": {
            "get": {
                "tags": [
                    "dfs-qoses"
                ],
                "description": "Get dfs qos",
                "operationId": "GetDfsQos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_qos_id",
                        "description": "dfs qos id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQosResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-qoses"
                ],
                "description": "delete dfs qos",
                "operationId": "DeleteDfsQos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_qos_id",
                        "description": "dfs qos id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsQosResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-qoses"
                ],
                "description": "Update dfs qos",
                "operationId": "UpdateDfsQos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_qos_id",
                        "description": "qos id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dfs qos info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsQosUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsQosResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-qoses/{dfs_qos_id}/samples": {
            "get": {
                "tags": [
                    "dfs-qoses"
                ],
                "description": "get a dfs qos's samples",
                "operationId": "GetDfsQosSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_qos_id",
                        "description": "dfs qos id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQosSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-quotas/": {
            "get": {
                "tags": [
                    "dfs-quotas"
                ],
                "description": "List dfs quotas",
                "operationId": "ListDfsQuotas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "path",
                        "description": "dfs quota path",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "dfs quota type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "domain_user_name",
                        "description": "dfs quota domain user name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "domain_user_group_name",
                        "description": "dfs quota domain user group name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQuotasResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-quotas"
                ],
                "description": "Create dfs quota",
                "operationId": "CreateDfsQuota",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "allow_path_create",
                        "description": "allow create path when not existed",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "quota info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsQuotaCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsQuotaResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-quotas/overview": {
            "get": {
                "tags": [
                    "dfs-quotas"
                ],
                "description": "dfs quota overview about type and status",
                "operationId": "DfsQuotaOverview",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQuotaOverviewResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-quotas/path-validator": {
            "get": {
                "tags": [
                    "dfs-quotas"
                ],
                "description": "validate a path for dfs quota",
                "operationId": "PathValidator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "dfs_rootfs_id",
                        "description": "dfs rootfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "dfs quota path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQuotaPathValidateResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-quotas/{dfs_quota_id}": {
            "get": {
                "tags": [
                    "dfs-quotas"
                ],
                "description": "Get dfs quota",
                "operationId": "GetDfsQuota",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_quota_id",
                        "description": "dfs quota id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQuotaResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-quotas"
                ],
                "description": "delete dfs quota",
                "operationId": "DeleteDfsQuota",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_quota_id",
                        "description": "dfs quota id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsQuotaResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-quotas"
                ],
                "description": "Update dfs quota",
                "operationId": "UpdateDfsQuota",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_quota_id",
                        "description": "quota id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dfs quota info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsQuotaUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQuotaResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsQuotaResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-quotas/{dfs_quota_id}/predictions": {
            "get": {
                "tags": [
                    "dfs-quotas"
                ],
                "description": "get a quota's prediction",
                "operationId": "GetDfsQuotaPredictions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_quota_id",
                        "description": "dfs quota id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQuotaPredictionsResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-quotas/{dfs_quota_id}/samples": {
            "get": {
                "tags": [
                    "dfs-quotas"
                ],
                "description": "get a dfs quota's samples",
                "operationId": "GetDfsQuotaSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_quota_id",
                        "description": "dfs quota id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsQuotaSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-rootfses/": {
            "get": {
                "tags": [
                    "dfs-rootfses"
                ],
                "description": "List dfs rootfses",
                "operationId": "ListDfsRootfses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pool_id",
                        "description": "pool id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "fs_user_id",
                        "description": "fs user id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "fs_user_group_id",
                        "description": "fs user group id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsRootfsesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-rootfses"
                ],
                "description": "Create dfs rootfs",
                "operationId": "CreateDfsRootfs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "rootfs info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsRootfsCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsRootfsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-rootfses/{dfs_rootfs_id}": {
            "get": {
                "tags": [
                    "dfs-rootfses"
                ],
                "description": "Get dfs rootfs",
                "operationId": "GetDfsRootfs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_rootfs_id",
                        "description": "rootfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsRootfsResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-rootfses"
                ],
                "description": "delete dfs rootfs",
                "operationId": "DeleteDfsRootfs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete",
                        "type": "boolean"
                    },
                    {
                        "in": "path",
                        "name": "dfs_rootfs_id",
                        "description": "rootfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsRootfsResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-rootfses/{dfs_rootfs_id}/samples": {
            "get": {
                "tags": [
                    "dfs-rootfses"
                ],
                "description": "get a dfs rootfs's samples",
                "operationId": "GetDfsRootfsSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_rootfs_id",
                        "description": "dfs rootfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsRootfsSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-rootfses/{dfs_rootfs_id}:set-gc-speed": {
            "post": {
                "tags": [
                    "dfs-rootfses"
                ],
                "description": "Set gc speed of dfs rootfs",
                "operationId": "SetGCSpeed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_rootfs_id",
                        "description": "rootfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gc speed",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsRootfsSetGCSpeedReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsRootfsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-rootfses/{dfs_rootfs_id}:set-worm-log-path": {
            "patch": {
                "tags": [
                    "dfs-rootfses"
                ],
                "description": "Set dfs worm log path",
                "operationId": "SetDfsWormLogPath",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_rootfs_id",
                        "description": "rootfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "worm log path",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsRootfsSetWormLogPathReq"
                        }
                    },
                    {
                        "in": "query",
                        "name": "allow_path_create",
                        "description": "allow create path when not existed",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsRootfsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-rootfses/{dfs_rootfs_id}:update-active-pools": {
            "patch": {
                "tags": [
                    "dfs-rootfses"
                ],
                "description": "Update dfs rootfs active pools",
                "operationId": "UpdateDfsRootfsActivePool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_rootfs_id",
                        "description": "rootfs id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "active pool ids",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsRootfsUpdateActivePoolReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsRootfsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-s3-bucket-connections/": {
            "get": {
                "tags": [
                    "dfs-s3-bucket-connections"
                ],
                "description": "List dfs s3 Bucket connections",
                "operationId": "ListDfsS3BucketConnections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsS3BucketConnectionsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-s3-buckets/": {
            "get": {
                "tags": [
                    "dfs-s3-buckets"
                ],
                "description": "List dfs s3 buckets",
                "operationId": "ListDfsS3Buckets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "name of dfs s3 buckets",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "owner_id",
                        "description": "The id of user buckets belong to",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "path_id",
                        "description": "The id of bucket path",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsS3BucketsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-s3-buckets"
                ],
                "description": "Create os bucket",
                "operationId": "CreateDfsS3Bucket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "allow_path_create",
                        "description": "allow create path when not existed",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "bucket info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsS3BucketCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsS3BucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-s3-buckets/{bucket_id}": {
            "get": {
                "tags": [
                    "dfs-s3-buckets"
                ],
                "description": "Get dfs s3 bucket",
                "operationId": "GetDfsS3Bucket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsS3BucketResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-s3-buckets"
                ],
                "description": "delete dfs s3 bucket",
                "operationId": "DeleteDfsS3Bucket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "with_directory",
                        "description": "also delete directory",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsS3BucketResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-s3-buckets"
                ],
                "description": "Update dfs s3 bucket",
                "operationId": "UpdateDfsS3Bucket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "bucket info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsS3BucketUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsS3BucketResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsS3BucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-s3-buckets/{bucket_id}/samples": {
            "get": {
                "tags": [
                    "dfs-s3-buckets"
                ],
                "description": "get an dfs s3 bucket's Samples",
                "operationId": "GetDfsS3BucketSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsS3BucketSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-s3-buckets/{bucket_id}:delete-bucket-policy": {
            "delete": {
                "tags": [
                    "dfs-s3-buckets"
                ],
                "description": "delete dfs s3 bucket policy",
                "operationId": "DeleteDfsS3BucketPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsS3BucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-s3-buckets/{bucket_id}:set-bucket-policy": {
            "post": {
                "tags": [
                    "dfs-s3-buckets"
                ],
                "description": "set dfs s3 bucket policy",
                "operationId": "SetDfsS3BucketPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "bucket policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsS3BucketPolicySetReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsS3BucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-s3-keys/": {
            "get": {
                "tags": [
                    "dfs-s3-keys"
                ],
                "description": "List dfs s3 keys",
                "operationId": "ListDfsS3Keys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "description": "dfs s3 user id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsS3KeysResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-s3-keys"
                ],
                "description": "Create new dfs s3 key",
                "operationId": "CreateDfsS3Key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "key info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsS3KeyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsS3KeyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-s3-keys/{key_id}": {
            "get": {
                "tags": [
                    "dfs-s3-keys"
                ],
                "description": "get dfs s3 key",
                "operationId": "GetDfsS3Key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "key_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsS3KeyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-s3-keys"
                ],
                "description": "Delete dfs s3 key",
                "operationId": "DeleteDfsS3Key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "key_id",
                        "description": "key id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsS3KeyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-s3-keys"
                ],
                "description": "Update dfs s3 key",
                "operationId": "UpdateDfsS3Key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "key_id",
                        "description": "key id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "key info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsS3KeyUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsS3KeyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-smb-sessions/": {
            "get": {
                "tags": [
                    "dfs-smb-sessions"
                ],
                "description": "List dfs smb sessions",
                "operationId": "ListDfsSMBSessions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_smb_share_id",
                        "description": "dfs smb share id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsSMBSessionsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-smb-share-acls/": {
            "get": {
                "tags": [
                    "dfs-smb-share-acls"
                ],
                "description": "List dfs smb share acls",
                "operationId": "ListDfsSMBShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_smb_share_id",
                        "description": "dfs smb share id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareACLsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-smb-shares/": {
            "get": {
                "tags": [
                    "dfs-smb-shares"
                ],
                "description": "List dfs smb shares",
                "operationId": "ListDfsSMBShares",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_rootfs_id",
                        "description": "dfs rootfs id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dfs_gateway_group_id",
                        "description": "dfs gateway group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "related dfs path",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsSMBSharesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-smb-shares"
                ],
                "description": "Create dfs smb share",
                "operationId": "CreateDfsSMBShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "allow_path_create",
                        "description": "allow create path when not existed",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-smb-shares/{dfs_smb_share_id}": {
            "get": {
                "tags": [
                    "dfs-smb-shares"
                ],
                "description": "Get dfs smb share",
                "operationId": "GetDfsSMBShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_smb_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-smb-shares"
                ],
                "description": "delete dfs smb share",
                "operationId": "DeleteDfsSMBShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_smb_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "with_directory",
                        "description": "also delete directory",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-smb-shares"
                ],
                "description": "Update dfs smb share",
                "operationId": "UpdateDfsSMBShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_smb_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-smb-shares/{dfs_smb_share_id}:add-acls": {
            "post": {
                "tags": [
                    "dfs-smb-shares"
                ],
                "description": "Add dfs smb share acls",
                "operationId": "AddDfsSMBShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_smb_share_id",
                        "description": "dfs smb share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareAddACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-smb-shares/{dfs_smb_share_id}:remove-acls": {
            "post": {
                "tags": [
                    "dfs-smb-shares"
                ],
                "description": "remove dfs smb share acls",
                "operationId": "RemoveDfsSMBShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_smb_share_id",
                        "description": "dfs smb share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareRemoveACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-smb-shares/{dfs_smb_share_id}:update-acls": {
            "post": {
                "tags": [
                    "dfs-smb-shares"
                ],
                "description": "Update dfs smb share ACL",
                "operationId": "UpdateDfsSMBShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_smb_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareUpdateACLsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsSMBShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-snap-changelist-tasks/": {
            "get": {
                "tags": [
                    "dfs-snap-changelist-tasks"
                ],
                "description": "List dfs snap change list tasks",
                "operationId": "ListDfsSnapChangelistTasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "related dfs path",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsSnapChangelistTasksResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-snap-changelist-tasks"
                ],
                "description": "Create dfs snap change list task",
                "operationId": "CreateDfsSnapChangelistTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "task info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsSnapChangelistTaskCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DfsSnapChangelistTaskResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-snap-changelist-tasks/{dfs_snap_changelist_task_id}": {
            "get": {
                "tags": [
                    "dfs-snap-changelist-tasks"
                ],
                "description": "get dfs snap change list task",
                "operationId": "GetDfsSnapChangelistTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_snap_changelist_task_id",
                        "description": "the dfs snap change list task id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsSnapChangelistTaskResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-snap-changelist-tasks"
                ],
                "description": "delete dfs snap change list task",
                "operationId": "DeleteDfsSnapChangelistTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_snap_changelist_task_id",
                        "description": "task id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Not Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-snapshots/": {
            "get": {
                "tags": [
                    "dfs-snapshots"
                ],
                "description": "List dfs snapshots",
                "operationId": "ListDfsSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_path_id",
                        "description": "related dfs path id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dp_dfs_snapshot_id",
                        "description": "dp dfs snapshot id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "related dfs path",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "name of dfs snapshot",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsSnapshotsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-snapshots"
                ],
                "description": "Create dfs snapshot",
                "operationId": "CreateDfsSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "allow_path_create",
                        "description": "allow create path when not existed",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dfs snapshot info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsSnapshotCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-snapshots/overview": {
            "get": {
                "tags": [
                    "dfs-snapshots"
                ],
                "description": "get dfs snapshots overview page",
                "operationId": "GetDfsSnapshotsOverViewPage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsSnapShotsOverviewPageResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-snapshots/{dfs_snapshot_id}": {
            "get": {
                "tags": [
                    "dfs-snapshots"
                ],
                "description": "get dfs snapshot",
                "operationId": "GetDfsSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_snapshot_id",
                        "description": "the dfs snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsSnapshotResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-snapshots"
                ],
                "description": "Delete a dfs snapshot",
                "operationId": "DeleteDfsSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_snapshot_id",
                        "description": "dfs snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-snapshots"
                ],
                "description": "Update dfs snapshot",
                "operationId": "UpdateDfsSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_snapshot_id",
                        "description": "dfs snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dfs snapshot info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsSnapshotUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-snapshots/{dfs_snapshot_id}:lock": {
            "post": {
                "tags": [
                    "dfs-snapshots"
                ],
                "description": "Lock dfs snapshot",
                "operationId": "LockDfsSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_snapshot_id",
                        "description": "dfs snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-snapshots/{dfs_snapshot_id}:rollback": {
            "post": {
                "tags": [
                    "dfs-snapshots"
                ],
                "description": "Rollback dfs snapshot",
                "operationId": "RollbackDfsSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_snapshot_id",
                        "description": "dfs snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "snapshot rollback info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsSnapshotRollbackReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-snapshots/{dfs_snapshot_id}:unlock": {
            "post": {
                "tags": [
                    "dfs-snapshots"
                ],
                "description": "Unlock dfs snapshot",
                "operationId": "UnlockDfsSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_snapshot_id",
                        "description": "dfs snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-storage-classes/": {
            "get": {
                "tags": [
                    "dfs-storage-classes"
                ],
                "description": "List dfs storage classes",
                "operationId": "ListDfsStorageClasses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "write_policy",
                        "description": "write policy",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsStorageClassesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-storage-classes"
                ],
                "description": "create dfs storage class",
                "operationId": "CreateDfsStorageClass",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "class info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsStorageClassCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsStorageClassResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-storage-classes/{dfs_storage_class_id}": {
            "get": {
                "tags": [
                    "dfs-storage-classes"
                ],
                "description": "Get dfs storage class",
                "operationId": "GetDfsStorageClass",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_storage_class_id",
                        "description": "dfs storage class id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsStorageClassResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-storage-classes"
                ],
                "description": "delete dfs storage class",
                "operationId": "DeleteDfsStorageClass",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_storage_class_id",
                        "description": "dfs storage class id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsStorageClassResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-storage-classes"
                ],
                "description": "update dfs storage class",
                "operationId": "UpdateDfsStorageClass",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_storage_class_id",
                        "description": "dfs storage class id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "class info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsStorageClassUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsStorageClassResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsStorageClassResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-storage-classes/{dfs_storage_class_id}/samples": {
            "get": {
                "tags": [
                    "dfs-storage-classes"
                ],
                "description": "get a dfs storage class's samples",
                "operationId": "GetDfsStorageClassSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_storage_class_id",
                        "description": "dfs storage class id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsStorageClassSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-storage-classes/{dfs_storage_class_id}:add-pools": {
            "post": {
                "tags": [
                    "dfs-storage-classes"
                ],
                "description": "add dfs storage class pools",
                "operationId": "AddDfsStorageClassPools",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_storage_class_id",
                        "description": "dfs storage class id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "pools info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsStorageClassAddPoolReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsStorageClassResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-storage-classes/{dfs_storage_class_id}:remove-pools": {
            "post": {
                "tags": [
                    "dfs-storage-classes"
                ],
                "description": "remove dfs storage class pools",
                "operationId": "RemoveDfsStorageClassPools",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_storage_class_id",
                        "description": "dfs storage class id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "pools info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsStorageClassRemovePoolReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsStorageClassResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-storage-policies/": {
            "get": {
                "tags": [
                    "dfs-storage-policies"
                ],
                "description": "List dfs Policies",
                "operationId": "ListDfsStoragePolicies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dfs_rootfs_id",
                        "description": "dfs rootfs id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dfs_path_id",
                        "description": "dfs path id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dfs_storage_class_id",
                        "description": "dfs class id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsStoragePoliciesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-storage-policies"
                ],
                "description": "Create dfs storage policies",
                "operationId": "CreateDfsStoragePolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "storagepolicy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsStoragePolicyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsStoragePolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-storage-policies/{dfs_storage_policy_id}": {
            "get": {
                "tags": [
                    "dfs-storage-policies"
                ],
                "description": "Get dfs storage policy",
                "operationId": "GetDfsStoragePolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_storage_policy_id",
                        "description": "dfs storage policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsStoragePolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-storage-policies"
                ],
                "description": "delete dfs storage policy",
                "operationId": "DeleteDfsStoragePolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_storage_policy_id",
                        "description": "dfs storage policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsStoragePolicyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-storage-policies"
                ],
                "description": "Update dfs storage policy",
                "operationId": "UpdateDfsStoragePolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_storage_policy_id",
                        "description": "dfs storage policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "storagepolicy info",
                        "schema": {
                            "$ref": "#/definitions/DfsStoragePolicyUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsStoragePolicyResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsStoragePolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-storage-policies/{dfs_storage_policy_id}:unlink-dfs-path": {
            "patch": {
                "tags": [
                    "dfs-storage-policies"
                ],
                "description": "Policy unlink Path",
                "operationId": "UnlinkDfsStoragePolicyAndDfsPath",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_storage_policy_id",
                        "description": "dfs storage policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsStoragePolicyUnlinkDfsPathReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsStoragePolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-tiers/": {
            "get": {
                "tags": [
                    "dfs-tiers"
                ],
                "description": "List dfs tiers",
                "operationId": "ListDfsTiers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_rootfs_id",
                        "description": "dfs rootfs id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsTiersResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-tiers/{dfs_tier_id}": {
            "get": {
                "tags": [
                    "dfs-tiers"
                ],
                "description": "Get dfs tier",
                "operationId": "GetDfsTier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_tier_id",
                        "description": "dfs tier id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsTierResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-tiers/{dfs_tier_id}:add-pools": {
            "post": {
                "tags": [
                    "dfs-tiers"
                ],
                "description": "add dfs tier pools",
                "operationId": "AddDfsTierPools",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_tier_id",
                        "description": "dfs tier id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "pools info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsTierAddPoolReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsTierResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-tiers/{dfs_tier_id}:remove-pools": {
            "post": {
                "tags": [
                    "dfs-tiers"
                ],
                "description": "remove dfs tier pools",
                "operationId": "RemoveDfsTierPools",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_tier_id",
                        "description": "dfs tier id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "pools info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsTierRemovePoolReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsTierResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-trashes/": {
            "get": {
                "tags": [
                    "dfs-trashes"
                ],
                "description": "List dfs trashes",
                "operationId": "ListDfsTrashes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "status",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsTrashesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-trashes"
                ],
                "description": "Create dfs trash",
                "operationId": "OpenDfsTrash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "allow_path_create",
                        "description": "allow create path when not existed",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "trash info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsTrashOpenReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsTrashResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-trashes/:list_trash_file_jobs": {
            "get": {
                "tags": [
                    "dfs-trashes"
                ],
                "description": "List dfs trash file job",
                "operationId": "ListDfsTrashFileJobs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_trash_id",
                        "description": "trash id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "path",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "action",
                        "description": "action",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsTrashFileJobResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-trashes/{dfs_trash_id}": {
            "get": {
                "tags": [
                    "dfs-trashes"
                ],
                "description": "Get dfs trash",
                "operationId": "GetDfsTrash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_trash_id",
                        "description": "trash id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsTrashResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-trashes"
                ],
                "description": "Close dfs trash",
                "operationId": "CloseDfsTrash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_trash_id",
                        "description": "trash id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsTrashResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-trashes"
                ],
                "description": "Update dfs trash",
                "operationId": "UpdateDfsTrash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_trash_id",
                        "description": "trash id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "trash info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsTrashUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsTrashResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-trashes/{dfs_trash_id}:empty": {
            "post": {
                "tags": [
                    "dfs-trashes"
                ],
                "description": "Empty dfs trash",
                "operationId": "EmptyDfsTrash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_trash_id",
                        "description": "trash id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force empty",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsTrashResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-trashes/{dfs_trash_id}:list_trash_files": {
            "post": {
                "tags": [
                    "dfs-trashes"
                ],
                "description": "List dfs trash files",
                "operationId": "ListDfsTrashFiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "parent path",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "start",
                        "description": "start file for list",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "prefix",
                        "description": "prefix to filter file or directory",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "dfs_trash_id",
                        "description": "trash id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsTrashFilesResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dfs-trashes/{dfs_trash_id}:remove-file": {
            "post": {
                "tags": [
                    "dfs-trashes"
                ],
                "description": "Remove dfs trash file",
                "operationId": "RemoveDfsTrashFile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_trash_id",
                        "description": "trash id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "trash info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsTrashRemoveFileReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsTrashFileJobResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-trashes/{dfs_trash_id}:restore-file": {
            "post": {
                "tags": [
                    "dfs-trashes"
                ],
                "description": "Restore dfs trash file",
                "operationId": "RestoreDfsTrashFile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_trash_id",
                        "description": "trash id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force restore",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "trash info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsTrashRestoreFileReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsTrashFileJobResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-trashes/{dfs_trash_id}:search_trash_files": {
            "post": {
                "tags": [
                    "dfs-trashes"
                ],
                "description": "Search dfs trash files",
                "operationId": "SearchDfsTrashFiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "subdirectory of trash path",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "start",
                        "description": "start file for list",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "prefix",
                        "description": "prefix to filter file or directory",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "dfs_trash_id",
                        "description": "trash id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsTrashFilesResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-vips/": {
            "get": {
                "tags": [
                    "dfs-vips"
                ],
                "description": "List dfs vips",
                "operationId": "ListDfsVIPs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_gateway_group_id",
                        "description": "dfs vip group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dfs_gateway_zone_id",
                        "description": "dfs gateway zone id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "primary_gateway_id",
                        "description": "primary gateway id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsVIPsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-vips/{dfs_vip_id}": {
            "get": {
                "tags": [
                    "dfs-vips"
                ],
                "description": "Get dfs vip",
                "operationId": "GetDfsVIP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_vip_id",
                        "description": "vip id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsVIPResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-vips"
                ],
                "description": "move vip to another dfs gateway",
                "operationId": "MoveDfsVIP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_vip_id",
                        "description": "vip id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "moving vip info",
                        "schema": {
                            "$ref": "#/definitions/DfsVIPMoveReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsVIPResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-worms/": {
            "get": {
                "tags": [
                    "dfs-worms"
                ],
                "description": "List dfs worms",
                "operationId": "ListDfsWorms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_path_id",
                        "description": "related dfs path id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "related dfs path",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsWormsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dfs-worms"
                ],
                "description": "Create dfs worm",
                "operationId": "CreateDfsWorm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "worm info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsWormCreateReq"
                        }
                    },
                    {
                        "in": "query",
                        "name": "allow_path_create",
                        "description": "allow create path when not existed",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsWormResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dfs-worms/{dfs_worm_id}": {
            "get": {
                "tags": [
                    "dfs-worms"
                ],
                "description": "get dfs worm",
                "operationId": "GetDfsWorm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_worm_id",
                        "description": "the dfs worm id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsWormResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dfs-worms"
                ],
                "description": "delete dfs worm",
                "operationId": "DeleteDfsWorm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_worm_id",
                        "description": "worm id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DfsWormResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dfs-worms"
                ],
                "description": "Update dfs worm",
                "operationId": "UpdateDfsWorm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dfs_worm_id",
                        "description": "dfs worm id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dfs worm info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DfsWormUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DfsWormResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/disks/": {
            "get": {
                "tags": [
                    "disks"
                ],
                "description": "List all pyhsical disks in the system",
                "operationId": "ListDisks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "host_id",
                        "description": "host id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "is_cache",
                        "description": "filter cache disk, deprecated, use `usage=partition` instead",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "disk_type",
                        "description": "filter disk type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "usage",
                        "description": "filter disk usage",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "used",
                        "description": "filter used",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "device",
                        "description": "device name of disk",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "disk status",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "disk comma seperate ids",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "host_ids",
                        "description": "disk.host comma separate ids",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order_by",
                        "description": "sort param without search, split with comma, e.g. -host.name",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DisksResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/disks/{disk_id}": {
            "get": {
                "tags": [
                    "disks"
                ],
                "description": "Get a disk",
                "operationId": "GetDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "disk_id",
                        "description": "disk id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DiskResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "disks"
                ],
                "description": "update disk info",
                "operationId": "UpdateDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "disk_id",
                        "description": "disk id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "disk",
                        "description": "disk info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DiskUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DiskResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/disks/{disk_id}/partitions": {
            "put": {
                "tags": [
                    "disks"
                ],
                "description": "create cache partitions for disk",
                "operationId": "CreatePartitions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "disk_id",
                        "description": "disk id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "num",
                        "description": "num of cache partitions to create",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "partitions info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PartitionsCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DiskResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "disks"
                ],
                "description": "delete cache partitions of disk",
                "operationId": "DeletePartitions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "disk_id",
                        "description": "disk id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DiskResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/disks/{disk_id}/samples": {
            "get": {
                "tags": [
                    "disks"
                ],
                "description": "get a disk's samples",
                "operationId": "GetDiskSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "disk_id",
                        "description": "disk id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DiskSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dns-domain-names/": {
            "get": {
                "tags": [
                    "dns-domain-names"
                ],
                "description": "List dns domain names",
                "operationId": "ListDNSDomainNames",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dns_zone_id",
                        "description": "dns zone id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DNSDomainNamesResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dns-domain-names"
                ],
                "description": "Create a DNS domain name.",
                "operationId": "CreateDNSDomainName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "dns_domain_name",
                        "description": "DNS domain name info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DNSDomainNameCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DNSDomainNameResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dns-domain-names/{name_id}": {
            "get": {
                "tags": [
                    "dns-domain-names"
                ],
                "description": "Get a dns domain name",
                "operationId": "GetDNSDomainName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "name_id",
                        "description": "dns domain name id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DNSDomainNameResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dns-domain-names"
                ],
                "description": "Delete a DNS domain nam.",
                "operationId": "DeleteDNSDomainName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "name_id",
                        "description": "DNS domain name id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dns-domain-names"
                ],
                "description": "Update a DNS domain name",
                "operationId": "UpdateDNSDomainName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "name_id",
                        "description": "DNS domain name id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "dns_domain_name",
                        "description": "DNS domain name info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DNSDomainNameUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DNSDomainNameResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dns-gateway-groups/": {
            "get": {
                "tags": [
                    "dns-gateway-groups"
                ],
                "description": "List dns gateway groups",
                "operationId": "ListDNSGatewayGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DNSGatewayGroupsResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dns-gateway-groups"
                ],
                "description": "Create a DNS gateway group.",
                "operationId": "CreateDNSGatewayGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "dns_gateway_group",
                        "description": "DNS gateway group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DNSGatewayGroupCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DNSGatewayGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dns-gateway-groups/{group_id}": {
            "get": {
                "tags": [
                    "dns-gateway-groups"
                ],
                "description": "Get a dns gateway group",
                "operationId": "GetDNSGatewayGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "dns gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DNSGatewayGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dns-gateway-groups"
                ],
                "description": "Delete a DNS gateway group.",
                "operationId": "DeleteDNSGatewayGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "dns gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DNSGatewayGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dns-gateway-groups/{group_id}:add-gateway": {
            "post": {
                "tags": [
                    "dns-gateway-groups"
                ],
                "description": "Add DNS gateways to DNS gateway group.",
                "operationId": "AddDNSGatewayToGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "dns gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "DNS gateway info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DNSGatewayGroupAddGatewayReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DNSGatewayGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dns-gateway-groups/{group_id}:redeploy": {
            "post": {
                "tags": [
                    "dns-gateway-groups"
                ],
                "description": "Redeploy a DNS gateway group",
                "operationId": "RedeployDNSGatewayGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "dns gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DNSGatewayGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dns-gateway-groups/{group_id}:remove-gateway": {
            "post": {
                "tags": [
                    "dns-gateway-groups"
                ],
                "description": "Remove DNS gateways from group.",
                "operationId": "RemoveDNSGatewayFromGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "dns gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "DNS gateway info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DNSGatewayGroupRemoveGatewayReq"
                        }
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DNSGatewayGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dns-gateways/": {
            "get": {
                "tags": [
                    "dns-gateways"
                ],
                "description": "List dns gateway",
                "operationId": "ListDNSGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dns_gateway_group_id",
                        "description": "dns_gateway_group id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DNSGatewaysResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dns-gateways/{gateway_id}": {
            "get": {
                "tags": [
                    "dns-gateways"
                ],
                "description": "Get a dns gateway",
                "operationId": "GetDNSGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "dns gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DNSGatewayResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dns-load-balance-policies/": {
            "get": {
                "tags": [
                    "dns-load-balance-policies"
                ],
                "description": "List dns load balance policies",
                "operationId": "ListDNSLoadBalancePolicies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "resource_type",
                        "description": "resource type",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DNSLoadBalancePoliciesResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dns-zones/": {
            "get": {
                "tags": [
                    "dns-zones"
                ],
                "description": "List dns zones",
                "operationId": "ListDNSZones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dns_gateway_group_id",
                        "description": "dns gateway group id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DNSZonesResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dns-zones/{zone_id}": {
            "get": {
                "tags": [
                    "dns-zones"
                ],
                "description": "Get a dns zone",
                "operationId": "GetDNSZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "zone_id",
                        "description": "dns zone id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DNSZoneResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dns-zones"
                ],
                "description": "Update a dns zone",
                "operationId": "UpdateDNSZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "zone_id",
                        "description": "dns zone id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "dns_zone",
                        "description": "DNS zone info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DNSZoneUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DNSZoneResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/domain-user-groups/": {
            "get": {
                "tags": [
                    "domain-user-groups"
                ],
                "description": "List domain user groups",
                "operationId": "ListDomainUserGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DomainUserGroupsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/domain-user-groups/{domain_user_group_id}": {
            "delete": {
                "tags": [
                    "domain-user-groups"
                ],
                "description": "delete domain user group",
                "operationId": "DeleteDomainUserGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_user_group_id",
                        "description": "domain user group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Not Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/domain-user-validators/": {
            "post": {
                "tags": [
                    "domain-user-validators"
                ],
                "description": "Create domain user validator",
                "operationId": "CreateDomainUserValidator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "domain user validator info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DomainUserValidatorCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DomainUserValidatorResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/domain-user-validators/{domain_user_validator_id}": {
            "get": {
                "tags": [
                    "domain-user-validators"
                ],
                "description": "Get domain_user validator",
                "operationId": "GetDomainUserValidator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_user_validator_id",
                        "description": "domain user validator id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DomainUserValidatorResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/domain-users/": {
            "get": {
                "tags": [
                    "domain-users"
                ],
                "description": "List domain users",
                "operationId": "ListDomainUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DomainUsersResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/domain-users/{domain_user_id}": {
            "delete": {
                "tags": [
                    "domain-users"
                ],
                "description": "delete domain user",
                "operationId": "DeleteDomainUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_user_id",
                        "description": "domain user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Not Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-async-replication-jobs/": {
            "get": {
                "tags": [
                    "dp-block-async-replication-jobs"
                ],
                "description": "List dp block async replication jobs",
                "operationId": "ListDpBlockAsyncReplicationJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationJobsResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-async-replication-jobs/{job_id}": {
            "get": {
                "tags": [
                    "dp-block-async-replication-jobs"
                ],
                "description": "Get dp block async replication job",
                "operationId": "GetDpBlockAsyncReplicationJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationJobResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-block-async-replication-jobs"
                ],
                "description": "Delete dp block async replication job",
                "operationId": "DeleteDpBlockAsyncReplicationJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-async-replication-pairs/": {
            "get": {
                "tags": [
                    "dp-block-async-replication-pairs"
                ],
                "description": "List dp block async replication pairs",
                "operationId": "ListDpBlockAsyncReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "block_volume_id",
                        "description": "show volume snapshot replication pairs of specific block volume",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dp_block_async_replication_policy_id",
                        "description": "show volume snapshot replication pairs of specific block async replication policy",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPairsResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dp-block-async-replication-pairs"
                ],
                "description": "Create dp block async replication pair",
                "operationId": "CreateDpBlockAsyncReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "pair info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPairCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPairResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-async-replication-pairs/{pair_id}": {
            "get": {
                "tags": [
                    "dp-block-async-replication-pairs"
                ],
                "description": "Get dp block async replication pair",
                "operationId": "GetDpBlockAsyncReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPairResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-block-async-replication-pairs"
                ],
                "description": "Delete dp block async replication pair",
                "operationId": "DeleteDpBlockAsyncReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "reserve_volume",
                        "description": "reserve replicated volume or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPairResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dp-block-async-replication-pairs"
                ],
                "description": "Update dp block async replication pair",
                "operationId": "UpdateDpBlockAsyncReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "pair info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPairUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPairResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-async-replication-pairs/{pair_id}:async-failover": {
            "post": {
                "tags": [
                    "dp-block-async-replication-pairs"
                ],
                "description": "switch the roles of the pair",
                "operationId": "AsyncFailoverDpBlockAsyncReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPairResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-async-replication-pairs/{pair_id}:failback": {
            "post": {
                "tags": [
                    "dp-block-async-replication-pairs"
                ],
                "description": "switch the roles of the pair to synced",
                "operationId": "FailbackDpBlockAsyncReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPairResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-async-replication-pairs/{pair_id}:pause": {
            "post": {
                "tags": [
                    "dp-block-async-replication-pairs"
                ],
                "description": "pause periodic sync",
                "operationId": "PauseDpBlockAsyncReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPairResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-async-replication-pairs/{pair_id}:resume": {
            "post": {
                "tags": [
                    "dp-block-async-replication-pairs"
                ],
                "description": "resume periodic sync",
                "operationId": "ResumeDpBlockAsyncReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPairResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-async-replication-pairs/{pair_id}:rollback": {
            "post": {
                "tags": [
                    "dp-block-async-replication-pairs"
                ],
                "description": "rollback volume snapshot pair to previous snapshot",
                "operationId": "RollbackDpBlockAsyncReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPairResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dp-block-async-replication-pairs/{pair_id}:sync": {
            "post": {
                "tags": [
                    "dp-block-async-replication-pairs"
                ],
                "description": "sync pair",
                "operationId": "SyncDpBlockAsyncReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPairResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-async-replication-pairs/{pair_id}:sync-failover": {
            "post": {
                "tags": [
                    "dp-block-async-replication-pairs"
                ],
                "description": "switch the roles of the pair",
                "operationId": "SyncFailoverDpBlockAsyncReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPairResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-async-replication-policies/": {
            "get": {
                "tags": [
                    "dp-block-async-replication-policies"
                ],
                "description": "List dp block async replication policies",
                "operationId": "ListDpBlockAsyncReplicationPolicies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dp_site_id",
                        "description": "related site id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "volume_id",
                        "description": "related volume id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPoliciesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dp-block-async-replication-policies"
                ],
                "description": "Create dp block async replication policy",
                "operationId": "CreateDpBlockAsyncReplicationPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPolicyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-async-replication-policies/{policy_id}": {
            "get": {
                "tags": [
                    "dp-block-async-replication-policies"
                ],
                "description": "Get dp block async replication policy",
                "operationId": "GetDpBlockAsyncReplicationPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-block-async-replication-policies"
                ],
                "description": "Delete dp block async replication policy",
                "operationId": "DeleteDpBlockAsyncReplicationPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dp-block-async-replication-policies"
                ],
                "description": "Update dp block async replication policy",
                "operationId": "UpdateDpBlockAsyncReplicationPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPolicyUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPolicyResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockAsyncReplicationPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-backup-jobs/": {
            "get": {
                "tags": [
                    "dp-block-backup-jobs"
                ],
                "description": "List dp block backup jobs",
                "operationId": "ListDpBlockBackupJobs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "block_volume_id",
                        "description": "block volume",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "block_snapshot_id",
                        "description": "object storage bucket",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dp_block_backup_policy_id",
                        "description": "dp block backup policy",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockBackupJobsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-backup-policies/": {
            "get": {
                "tags": [
                    "dp-block-backup-policies"
                ],
                "description": "List dp block backup policies",
                "operationId": "ListDpBlockBackupPolicies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "block_volume_id",
                        "description": "show dp block backup policies of specific block volume",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dp_site_id",
                        "description": "related site id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockBackupPoliciesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dp-block-backup-policies"
                ],
                "description": "Create dp block backup policy",
                "operationId": "CreateDpBlockBackupPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpBlockBackupPolicyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockBackupPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-backup-policies/{policy_id}": {
            "get": {
                "tags": [
                    "dp-block-backup-policies"
                ],
                "description": "Get dp block backup policy",
                "operationId": "GetDpBlockBackupPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockBackupPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-block-backup-policies"
                ],
                "description": "Delete dp block backup policy",
                "operationId": "DeleteDpBlockBackupPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockBackupPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dp-block-backup-policies"
                ],
                "description": "Update dp block backup policy",
                "operationId": "UpdateDpBlockBackupPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpBlockBackupPolicyUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockBackupPolicyResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockBackupPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-replication-policies/": {
            "get": {
                "tags": [
                    "dp-block-replication-policies"
                ],
                "description": "List dp block replication policies",
                "operationId": "ListDpBlockReplicationPolicies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockReplicationPoliciesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dp-block-replication-policies"
                ],
                "description": "Create dp block replication policy",
                "operationId": "CreateDpBlockReplicationPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpBlockReplicationPolicyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockReplicationPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-replication-policies/{policy_id}": {
            "get": {
                "tags": [
                    "dp-block-replication-policies"
                ],
                "description": "Get dp block replication policy",
                "operationId": "GetDpBlockReplicationPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockReplicationPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-block-replication-policies"
                ],
                "description": "Delete dp block replication policy",
                "operationId": "DeleteDpBlockReplicationPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NoContent"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dp-block-replication-policies"
                ],
                "description": "Update dp block replication policy",
                "operationId": "UpdateDpBlockReplicationPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpBlockReplicationPolicyUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockReplicationPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dp-block-snapshot-jobs/": {
            "get": {
                "tags": [
                    "dp-block-snapshot-jobs"
                ],
                "description": "List dp block snapshot jobs",
                "operationId": "ListDpBlockSnapshotJobs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "block_volume_id",
                        "description": "block volume",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "block_snapshot_id",
                        "description": "object storage bucket",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dp_block_snapshot_policy_id",
                        "description": "dp block snapshot policy",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockSnapshotJobsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dp-block-snapshot-policies/": {
            "get": {
                "tags": [
                    "dp-block-snapshot-policies"
                ],
                "description": "List dp block snapshot policies",
                "operationId": "ListDpBlockSnapshotPolicies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockSnapshotPoliciesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dp-block-snapshot-policies"
                ],
                "description": "Create dp block snapshot policy",
                "operationId": "CreateDpBlockSnapshotPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpBlockSnapshotPolicyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockSnapshotPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-block-snapshot-policies/{policy_id}": {
            "get": {
                "tags": [
                    "dp-block-snapshot-policies"
                ],
                "description": "Get dp block snapshot policy",
                "operationId": "GetDpBlockSnapshotPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockSnapshotPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-block-snapshot-policies"
                ],
                "description": "Delete dp block snapshot policy",
                "operationId": "DeleteDpBlockSnapshotPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockSnapshotPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dp-block-snapshot-policies"
                ],
                "description": "Update dp block snapshot policy",
                "operationId": "UpdateDpBlockSnapshotPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpBlockSnapshotPolicyUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockSnapshotPolicyResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockSnapshotPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dp-block-snapshot-recovery-jobs/": {
            "get": {
                "tags": [
                    "dp-block-snapshot-recovery-jobs"
                ],
                "description": "List dp block snapshot recovery jobs",
                "operationId": "ListDpBlockSnapshotRecoveryJobs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockSnapshotRecoveryJobsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dp-block-snapshot-recovery-jobs"
                ],
                "description": "Create a dp block snapshot recovery job",
                "operationId": "CreateDpBlockSnapshotRecoveryJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "resource info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpBlockSnapshotRecoveryJobCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpBlockSnapshotRecoveryJobResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/dp-block-snapshot-recovery-jobs/{job_id}": {
            "get": {
                "tags": [
                    "dp-block-snapshot-recovery-jobs"
                ],
                "description": "Get a dp block snapshot recovery job",
                "operationId": "GetDpBlockSnapshotRecoveryJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBlockSnapshotRecoveryJobResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-block-snapshot-recovery-jobs"
                ],
                "description": "Delete a dp block snapshot recovery job",
                "operationId": "DeleteDpBlockSnapshotRecoveryJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NoContent"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-dfs-snapshot-jobs/": {
            "get": {
                "tags": [
                    "dp-dfs-snapshot-jobs"
                ],
                "description": "List dp dfs snapshot jobs",
                "operationId": "ListDpDfsSnapshotJobs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dp_dfs_snapshot_policy_id",
                        "description": "dp dfs snapshot policy",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpDfsSnapshotJobsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-dfs-snapshot-policies/": {
            "get": {
                "tags": [
                    "dp-dfs-snapshot-policies"
                ],
                "description": "List dp dfs snapshot policies",
                "operationId": "ListDpDfsSnapshotPolicies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dfs_path_name",
                        "description": "show dp dfs snapshot policies of specific dfs path",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpDfsSnapshotPoliciesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dp-dfs-snapshot-policies"
                ],
                "description": "Create dp dfs snapshot policy",
                "operationId": "CreateDpDfsSnapshotPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dp dfs snapshot policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpDfsSnapshotPolicyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DpDfsSnapshotPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-dfs-snapshot-policies/{policy_id}": {
            "get": {
                "tags": [
                    "dp-dfs-snapshot-policies"
                ],
                "description": "get dp dfs snapshot policy",
                "operationId": "GetDpDfsSnapshotPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "the dp dfs snapshot policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpDfsSnapshotPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-dfs-snapshot-policies"
                ],
                "description": "Delete a dp dfs snapshot policy",
                "operationId": "DeleteDPDfsSnapshotPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "dp dfs snapshot policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Not Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dp-dfs-snapshot-policies"
                ],
                "description": "Update dp dfs snapshot policy",
                "operationId": "UpdateDpDfsSnapshotPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "dp dfs snapshot policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dp dfs snapshot policy update info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpDfsSnapshotPolicyUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpDfsSnapshotPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-dfs-snapshots/": {
            "get": {
                "tags": [
                    "dp-dfs-snapshots"
                ],
                "description": "List dp dfs snapshots",
                "operationId": "ListDpDfsSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "policy_id",
                        "description": "related dp dfs snapshot policy id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "path_id",
                        "description": "related dfs path id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpDfsSnapshotsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dp-dfs-snapshots"
                ],
                "description": "Create dp dfs snapshot",
                "operationId": "CreateDpDfsSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "allow_path_create",
                        "description": "allow create path when not existed",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dp dfs snapshot info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpDfsSnapshotCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpDfsSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-dfs-snapshots/_search": {
            "post": {
                "tags": [
                    "dp-dfs-snapshots"
                ],
                "description": "List dp dfs snapshots by name",
                "operationId": "ListDpDfsSnapshotsByDfsPathName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpDfsSnapshotsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-dfs-snapshots/{dp_dfs_snapshot_id}": {
            "get": {
                "tags": [
                    "dp-dfs-snapshots"
                ],
                "description": "get dp dfs snapshot",
                "operationId": "GetDpDfsSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dp_dfs_snapshot_id",
                        "description": "the dp dfs snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpDfsSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-dfs-snapshots"
                ],
                "description": "Delete a dp dfs snapshot",
                "operationId": "DeleteDPDfsSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "dp_dfs_snapshot_id",
                        "description": "dp dfs snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpDfsSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-fs-snapshot-jobs/": {
            "get": {
                "tags": [
                    "dp-fs-snapshot-jobs"
                ],
                "description": "List dp fs snapshot jobs",
                "operationId": "ListDpFSSnapshotJobs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_folder_id",
                        "description": "fs folder",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "fs_snapshot_id",
                        "description": "fs snapshot",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dp_fs_snapshot_policy_id",
                        "description": "dp fs snapshot policy",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpFSSnapshotJobsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-fs-snapshot-jobs/{job_id}": {
            "get": {
                "tags": [
                    "dp-fs-snapshot-jobs"
                ],
                "description": "Get dp fs snapshot job",
                "operationId": "GetDpFSSnapshotJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpFSSnapshotJobResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-fs-snapshot-policies/": {
            "get": {
                "tags": [
                    "dp-fs-snapshot-policies"
                ],
                "description": "List dp fs snapshot policies",
                "operationId": "ListDpFSSnapshotPolicies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpFSSnapshotPoliciesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dp-fs-snapshot-policies"
                ],
                "description": "Create dp fs snapshot policy",
                "operationId": "CreateDpFSSnapshotPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpFSSnapshotPolicyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpFSSnapshotPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-fs-snapshot-policies/{policy_id}": {
            "get": {
                "tags": [
                    "dp-fs-snapshot-policies"
                ],
                "description": "Get dp fs snapshot policy",
                "operationId": "GetDpFSSnapshotPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpFSSnapshotPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-fs-snapshot-policies"
                ],
                "description": "Delete dp fs snapshot policy",
                "operationId": "DeleteDpFSSnapshotPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpFSSnapshotPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dp-fs-snapshot-policies"
                ],
                "description": "Update dp fs snapshot policy",
                "operationId": "UpdateDpFSSnapshotPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpFSSnapshotPolicyUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpFSSnapshotPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-gateways/": {
            "get": {
                "tags": [
                    "dp-gateways"
                ],
                "description": "List dp gateways",
                "operationId": "ListDpGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpGatewaysResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dp-gateways"
                ],
                "description": "Create a dp gateway",
                "operationId": "CreateDpGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dp gateway info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpGatewayCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpGatewayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-gateways/{gateway_id}": {
            "get": {
                "tags": [
                    "dp-gateways"
                ],
                "description": "Get dp gateway",
                "operationId": "GetDpGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "dp gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpGatewayResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-gateways"
                ],
                "description": "Delete dp gateway",
                "operationId": "DeleteDpGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "dp gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpGatewayResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dp-gateways"
                ],
                "description": "Update a dp gateway",
                "operationId": "UpdateDpGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "dp gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dp gateway info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpGatewayUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpGatewayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-sites/": {
            "get": {
                "tags": [
                    "dp-sites"
                ],
                "description": "List data protection sites",
                "operationId": "ListDpSites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "protection_type",
                        "description": "protection type",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpSitesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dp-sites"
                ],
                "description": "Create a data protection site",
                "operationId": "CreateDpSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dp site info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpSiteCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DpSiteResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-sites/{site_id}": {
            "get": {
                "tags": [
                    "dp-sites"
                ],
                "description": "Get data protection site",
                "operationId": "GetDpSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "site_id",
                        "description": "protection site id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpSiteResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-sites"
                ],
                "description": "Delete data protection site",
                "operationId": "DeleteDpSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "site_id",
                        "description": "dp site id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dp-sites"
                ],
                "description": "Update a data protection site",
                "operationId": "UpdateDpSite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "site_id",
                        "description": "dp site id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dp site info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpSiteUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpSiteResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-sites/{site_id}/backup-block-snapshots": {
            "get": {
                "tags": [
                    "dp-sites"
                ],
                "description": "List snapshots of a volume stored on a dp site",
                "operationId": "GetBackupBlockSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "site_id",
                        "description": "dp site id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dp_gateway_id",
                        "description": "the dp gateway to execute the query",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_fs_id",
                        "description": "cluster fs id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "block_volume_name",
                        "description": "block volume name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "after",
                        "description": "continuation token",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBackupBlockSnapshotsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-sites/{site_id}/backup-block-volumes": {
            "get": {
                "tags": [
                    "dp-sites"
                ],
                "description": "List volumes of a cluster stored on a dp site",
                "operationId": "GetBackupBlockVolumes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "site_id",
                        "description": "dp site id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dp_gateway_id",
                        "description": "the dp gateway to execute the query",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_fs_id",
                        "description": "cluster fs id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "after",
                        "description": "continuation token",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBackupBlockVolumesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-sites/{site_id}/backup-clusters": {
            "get": {
                "tags": [
                    "dp-sites"
                ],
                "description": "List clusters stored on a dp site",
                "operationId": "GetBackupClusters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "site_id",
                        "description": "dp site id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dp_gateway_id",
                        "description": "the dp gateway to execute the query",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpBackupClustersResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-volume-group-snapshot-replication-jobs/": {
            "get": {
                "tags": [
                    "dp-volume-group-snapshot-replication-jobs"
                ],
                "description": "List dp volume group snapshot replication jobs",
                "operationId": "ListDpVolumeGroupSnapshotReplicationJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "dp_volume_group_snapshot_replication_pair_id",
                        "description": "related pair id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationJobsResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-volume-group-snapshot-replication-jobs/{job_id}": {
            "get": {
                "tags": [
                    "dp-volume-group-snapshot-replication-jobs"
                ],
                "description": "Get dp volume group snapshot replication job",
                "operationId": "GetDpVolumeGroupSnapshotReplicationJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationJobResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-volume-group-snapshot-replication-jobs"
                ],
                "description": "Delete dp volume group snapshot replication job",
                "operationId": "DeleteDpVolumeGroupSnapshotReplicationJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-volume-group-snapshot-replication-pairs/": {
            "get": {
                "tags": [
                    "dp-volume-group-snapshot-replication-pairs"
                ],
                "description": "List dp volume group snapshot replication pairs",
                "operationId": "ListDpVolumeGroupSnapshotReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "volume_group_id",
                        "description": "related volume group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dp_volume_group_snapshot_replication_policy_id",
                        "description": "related policy id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPairsResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dp-volume-group-snapshot-replication-pairs"
                ],
                "description": "Create dp volume group snapshot replication pair",
                "operationId": "CreateDpVolumeGroupSnapshotReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "pair info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPairCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPairResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-volume-group-snapshot-replication-pairs/{pair_id}": {
            "get": {
                "tags": [
                    "dp-volume-group-snapshot-replication-pairs"
                ],
                "description": "Get dp volume group snapshot replication pair",
                "operationId": "GetDpVolumeGroupSnapshotReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPairResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-volume-group-snapshot-replication-pairs"
                ],
                "description": "Delete dp volume group snapshot replication pair",
                "operationId": "DeleteDpVolumeGroupSnapshotReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete volume group pair or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dp-volume-group-snapshot-replication-pairs"
                ],
                "description": "Update dp volume group snapshot replication pair",
                "operationId": "UpdateDpVolumeGroupSnapshotReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "pair info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPairUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPairResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-volume-group-snapshot-replication-pairs/{pair_id}:async-failover": {
            "post": {
                "tags": [
                    "dp-volume-group-snapshot-replication-pairs"
                ],
                "description": "switch the roles of the pair",
                "operationId": "AsyncFailoverDpVolumeGroupSnapshotReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPairsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-volume-group-snapshot-replication-pairs/{pair_id}:pause": {
            "post": {
                "tags": [
                    "dp-volume-group-snapshot-replication-pairs"
                ],
                "description": "pause periodic sync",
                "operationId": "PauseDpVolumeGroupSnapshotReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPairsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-volume-group-snapshot-replication-pairs/{pair_id}:resume": {
            "post": {
                "tags": [
                    "dp-volume-group-snapshot-replication-pairs"
                ],
                "description": "resume periodic sync",
                "operationId": "ResumeDpVolumeGroupSnapshotReplicationPair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pair_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPairResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-volume-group-snapshot-replication-policies/": {
            "get": {
                "tags": [
                    "dp-volume-group-snapshot-replication-policies"
                ],
                "description": "List dp volume group snapshot replication policies",
                "operationId": "ListDpVolumeGroupSnapshotReplicationPolicies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dp_site_id",
                        "description": "related site id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "volume_group_id",
                        "description": "related volume group id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPoliciesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "dp-volume-group-snapshot-replication-policies"
                ],
                "description": "Create dp volume group snapshot replication policy",
                "operationId": "CreateDpVolumeGroupSnapshotReplicationPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPolicyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/dp-volume-group-snapshot-replication-policies/{policy_id}": {
            "get": {
                "tags": [
                    "dp-volume-group-snapshot-replication-policies"
                ],
                "description": "Get dp volume group snapshot replication policy",
                "operationId": "GetDpVolumeGroupSnapshotReplicationPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "dp-volume-group-snapshot-replication-policies"
                ],
                "description": "Delete dp volume group snapshot replication policy",
                "operationId": "DeleteDpVolumeGroupSnapshotReplicationPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "dp-volume-group-snapshot-replication-policies"
                ],
                "description": "Update dp volume group snapshot replication policy",
                "operationId": "UpdateDpVolumeGroupSnapshotReplicationPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPolicyUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPolicyResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/email-groups/": {
            "get": {
                "tags": [
                    "email-groups"
                ],
                "description": "List all email groups",
                "operationId": "ListEmailGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "alert_group_id",
                        "description": "alert group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "name of email groups",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmailGroupsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "email-groups"
                ],
                "description": "create email group",
                "operationId": "CreateEmailGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "email group",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmailGroupUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmailGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/email-groups/{group_id}": {
            "get": {
                "tags": [
                    "email-groups"
                ],
                "description": "get email group",
                "operationId": "GetEmailGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "the id of email group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmailGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "email-groups"
                ],
                "description": "update email group",
                "operationId": "UpdateEmailGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "the id of email group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "email group",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmailGroupUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmailGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "email-groups"
                ],
                "description": "delete email group",
                "operationId": "DeleteEmailGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "the id of email group",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/emails/": {
            "post": {
                "tags": [
                    "emails"
                ],
                "description": "send email",
                "operationId": "SendEmail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "email info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmailSendReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmailResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/emails/config": {
            "get": {
                "tags": [
                    "emails"
                ],
                "description": "setup email configs",
                "operationId": "GetEmailConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmailConfigResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "emails"
                ],
                "description": "setup email configs",
                "operationId": "UpdateEmailConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "email config info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmailConfigUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmailConfigResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/error-records/": {
            "post": {
                "tags": [
                    "error-records"
                ],
                "description": "create error record",
                "operationId": "CreateErrorRecord",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "error record info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ErrorRecordCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ErrorRecordResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/event-logs/": {
            "get": {
                "tags": [
                    "event-logs"
                ],
                "description": "List event logs",
                "operationId": "ListEventLogs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "status of event logs",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resource_type",
                        "description": "resource type of event logs",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EventLogsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/ext-compat-configs/": {
            "get": {
                "tags": [
                    "ext-compat-configs"
                ],
                "description": "list ext compat conf",
                "operationId": "ListExtCompatConf",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "ext_name",
                        "description": "filter the external interface name of ext compat conf",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "func_name",
                        "description": "filter the function name of ext compat conf",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "policy",
                        "description": "filter the policy of ext compat conf",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "host_id",
                        "description": "filter the host of ext compat conf, 0 for global config",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ExtCompatConfResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ext-compat-configs"
                ],
                "description": "set ext compat conf",
                "operationId": "SetExtCompatConf",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "ext compat conf",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SetExtCompatConfReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SetExtCompatConfResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fc-port-client-codes/": {
            "get": {
                "tags": [
                    "fc-port-client-codes"
                ],
                "description": "List fc port client codes",
                "operationId": "ListFCPortClientCodes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FCPortClientCodesResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fc-ports/": {
            "get": {
                "tags": [
                    "fc-ports"
                ],
                "description": "List fc ports",
                "operationId": "ListFCPorts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FCPortsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fc-ports/{fc_port_id}": {
            "get": {
                "tags": [
                    "fc-ports"
                ],
                "description": "Get fc port",
                "operationId": "GetFCPort",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fc_port_id",
                        "description": "fc port id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FCPortResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "fc-ports"
                ],
                "description": "Set fc port",
                "operationId": "SetFCPort",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fc_port_id",
                        "description": "fc port id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FCPortResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fc-ports/{fc_port_id}:clear-err-code": {
            "post": {
                "tags": [
                    "fc-ports"
                ],
                "description": "Clear fc port errcode",
                "operationId": "ClearFCPortErrCode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fc_port_id",
                        "description": "fc port id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FCPortResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fc-ports/{fc_port_id}:reset": {
            "post": {
                "tags": [
                    "fc-ports"
                ],
                "description": "Reset fc port",
                "operationId": "ResetFCPort",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fc_port_id",
                        "description": "fc port id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FCPortResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-active-directories/": {
            "get": {
                "tags": [
                    "fs-active-directories"
                ],
                "description": "List file storage active directories",
                "operationId": "ListFSActiveDirectories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSActiveDirectoriesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fs-active-directories"
                ],
                "description": "create file storage active directory",
                "operationId": "CreateFSActiveDirectory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "file storage active directory info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSActiveDirectoryCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSActiveDirectoryResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/fs-active-directories/{fs_active_directory_id}": {
            "get": {
                "tags": [
                    "fs-active-directories"
                ],
                "description": "Get a file storage active directory",
                "operationId": "GetFSActiveDirectory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_active_directory_id",
                        "description": "file storage active directory id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSActiveDirectoryResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-active-directories"
                ],
                "description": "Delete file storage active directory",
                "operationId": "DeleteFSActiveDirectory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_active_directory_id",
                        "description": "file storage active directory id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSActiveDirectoryResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "fs-active-directories"
                ],
                "description": "Update a file storage active directory",
                "operationId": "UpdateFSActiveDirectory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_active_directory_id",
                        "description": "file storage active directory id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "file storage active directory info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSActiveDirectoryUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSActiveDirectoryResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-active-directories/{fs_active_directory_id}:verify": {
            "post": {
                "tags": [
                    "fs-active-directories"
                ],
                "description": "Verify a fs active directory or user/group info",
                "operationId": "VerifyFSActiveDirectory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_active_directory_id",
                        "description": "file storage active directory id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSActiveDirectoryResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-client-groups/": {
            "get": {
                "tags": [
                    "fs-client-groups"
                ],
                "description": "List file storage client groups",
                "operationId": "ListFSClientGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_client_id",
                        "description": "file storage client id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSClientGroupsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fs-client-groups"
                ],
                "description": "Create file storage client group",
                "operationId": "CreateFSClientGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "client group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSClientGroupCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/FSClientGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-client-groups/{fs_client_group_id}": {
            "get": {
                "tags": [
                    "fs-client-groups"
                ],
                "description": "Get file storage client group",
                "operationId": "GetFSClientGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_client_group_id",
                        "description": "client group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSClientGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-client-groups"
                ],
                "description": "delete file storage client group",
                "operationId": "DeleteFSClientGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_client_group_id",
                        "description": "client group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Not Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "fs-client-groups"
                ],
                "description": "Update file storage client group",
                "operationId": "UpdateFSClientGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_client_group_id",
                        "description": "client group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "client group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSClientGroupUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSClientGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-client-groups/{fs_client_group_id}/fs-clients": {
            "put": {
                "tags": [
                    "fs-client-groups"
                ],
                "description": "add clients to file storage client group",
                "operationId": "AddFSClients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_client_group_id",
                        "description": "client group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "clients info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSClientGroupAddClientsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSClientGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-client-groups"
                ],
                "description": "remove clients from file storage client group",
                "operationId": "RemoveFSClients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_client_group_id",
                        "description": "client group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "clients info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSClientGroupRemoveClientsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSClientGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-clients/": {
            "get": {
                "tags": [
                    "fs-clients"
                ],
                "description": "List file storage clients",
                "operationId": "ListFSClients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_client_group_id",
                        "description": "file storage client group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "not_fs_client_group_id",
                        "description": "group id the client don't belong to",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSClientsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fs-clients"
                ],
                "description": "Create file storage client",
                "operationId": "CreateFSClient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "client info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSClientCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/FSClientResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-clients/{fs_client_id}": {
            "get": {
                "tags": [
                    "fs-clients"
                ],
                "description": "Get file storage client",
                "operationId": "GetFSClient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_client_id",
                        "description": "client id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSClientResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-clients"
                ],
                "description": "delete file storage client",
                "operationId": "DeleteFSClient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_client_id",
                        "description": "client id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Not Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "fs-clients"
                ],
                "description": "Update file storage client",
                "operationId": "UpdateFSClient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_client_id",
                        "description": "client id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "client info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSClientUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSClientResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-folders/": {
            "get": {
                "tags": [
                    "fs-folders"
                ],
                "description": "List file storage folders",
                "operationId": "ListFolders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_user_id",
                        "description": "file storage user id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "fs_user_group_id",
                        "description": "file storage user group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "fs_gateway_group_id",
                        "description": "file storage gateway group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "fs_snapshot_id",
                        "description": "file storage snapshot id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "fs_client_id",
                        "description": "file storage client id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "fs_client_group_id",
                        "description": "file storage client group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "pool_id",
                        "description": "pool id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSFoldersResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fs-folders"
                ],
                "description": "Create file storage folder",
                "operationId": "CreateFolder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "folder info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSFolderCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSFolderResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSFolderResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-folders/{fs_folder_id}": {
            "get": {
                "tags": [
                    "fs-folders"
                ],
                "description": "Get file storage folder",
                "operationId": "GetFolder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_folder_id",
                        "description": "folder id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSFolderResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-folders"
                ],
                "description": "delete file storage folder",
                "operationId": "DeleteFolder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete",
                        "type": "boolean"
                    },
                    {
                        "in": "path",
                        "name": "fs_folder_id",
                        "description": "folder id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSFolderResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "fs-folders"
                ],
                "description": "Update file storage folder",
                "operationId": "UpdateFolder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_folder_id",
                        "description": "folder id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "folder info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSFolderUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSFolderResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/fs-folders/{fs_folder_id}/fs-quota-trees": {
            "put": {
                "tags": [
                    "fs-folders"
                ],
                "description": "add file storage quota trees",
                "operationId": "AddFSQuotaTrees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_folder_id",
                        "description": "fs folder id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "quota trees info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSFolderAddQuotaTreesReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSFolderQuotaTreesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-folders"
                ],
                "description": "delete fs quota trees from fs folder",
                "operationId": "RemoveFSQuotaTrees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_folder_id",
                        "description": "fs folder id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "quota trees info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSFolderRemoveQuotaTreesReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSFolderResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-folders/{fs_folder_id}/samples": {
            "get": {
                "tags": [
                    "fs-folders"
                ],
                "description": "get a file storage folder's samples",
                "operationId": "GetFSFolderSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_folder_id",
                        "description": "file storage folder id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSFolderSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/fs-folders/{fs_folder_id}:roll-back": {
            "post": {
                "tags": [
                    "fs-folders"
                ],
                "description": "roll back file storage folder",
                "operationId": "RollBackFolder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_folder_id",
                        "description": "folder id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "folder info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSFolderRollBackReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSFolderResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-folders/{fs_folder_id}:set-snapshot-protection": {
            "post": {
                "tags": [
                    "fs-folders"
                ],
                "description": "Set snapshot protection for a fs folder",
                "operationId": "SetFSSnapshotProtection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_folder_id",
                        "description": "fs folder id in db",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "request info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSFolderSnapshotProtectionReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSFolderResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-folders/{fs_folder_id}:unset-snapshot-protection": {
            "post": {
                "tags": [
                    "fs-folders"
                ],
                "description": "Unset snapshot protection for a fs folder",
                "operationId": "UnsetFSSnapshotProtection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_folder_id",
                        "description": "fs_folder id in db",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force unset or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSFolderResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-ftp-sessions/": {
            "get": {
                "tags": [
                    "fs-ftp-sessions"
                ],
                "description": "List fs ftp sessions",
                "operationId": "ListFSFTPSessions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_ftp_share_id",
                        "description": "fs ftp share id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSFTPSessionsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-ftp-share-acls/": {
            "get": {
                "tags": [
                    "fs-ftp-share-acls"
                ],
                "description": "List fs ftp share acls",
                "operationId": "ListFSFTPShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_ftp_share_id",
                        "description": "fs ftp share id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSFTPShareACLsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-ftp-shares/": {
            "get": {
                "tags": [
                    "fs-ftp-shares"
                ],
                "description": "List fs ftp shares",
                "operationId": "ListFSFTPShares",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_folder_id",
                        "description": "fs smb id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "fs_gateway_group_id",
                        "description": "fs gateway group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSFTPSharesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fs-ftp-shares"
                ],
                "description": "Create fs ftp share",
                "operationId": "CreateFSFTPShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSFTPShareCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSFTPShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-ftp-shares/{fs_ftp_share_id}": {
            "get": {
                "tags": [
                    "fs-ftp-shares"
                ],
                "description": "Get fs ftp share",
                "operationId": "GetFSFTPShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_ftp_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSFTPShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-ftp-shares"
                ],
                "description": "delete fs ftp share",
                "operationId": "DeleteFSFTPShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_ftp_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSFTPShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-ftp-shares/{fs_ftp_share_id}:add-acls": {
            "post": {
                "tags": [
                    "fs-ftp-shares"
                ],
                "description": "Add fs ftp share acls",
                "operationId": "AddFSFTPShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_ftp_share_id",
                        "description": "fs ftp share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "ftp share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSFTPShareAddACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSFTPShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-ftp-shares/{fs_ftp_share_id}:remove-acls": {
            "post": {
                "tags": [
                    "fs-ftp-shares"
                ],
                "description": "remove fs ftp share acls",
                "operationId": "RemoveFSFTPShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_ftp_share_id",
                        "description": "fs ftp share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSFTPShareRemoveACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSFTPShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-ftp-shares/{fs_ftp_share_id}:update-acls": {
            "post": {
                "tags": [
                    "fs-ftp-shares"
                ],
                "description": "Update fs ftp share acls",
                "operationId": "UpdateFSFTPShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_ftp_share_id",
                        "description": "ftp share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "ftp share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSFTPShareUpdateACLsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSFTPShareResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSFTPShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-gateway-groups/": {
            "get": {
                "tags": [
                    "fs-gateway-groups"
                ],
                "description": "List file storage gateway groups",
                "operationId": "ListFSGatewayGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "type of file storage gateway group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "security",
                        "description": "security of file storage gateway group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSGatewayGroupsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fs-gateway-groups"
                ],
                "description": "Create file storage gateway group",
                "operationId": "CreateFSGatewayGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateway group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSGatewayGroupCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSGatewayGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-gateway-groups/{fs_gateway_group_id}": {
            "get": {
                "tags": [
                    "fs-gateway-groups"
                ],
                "description": "Get file storage gateway group",
                "operationId": "GetFSGatewayGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_gateway_group_id",
                        "description": "gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSGatewayGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-gateway-groups"
                ],
                "description": "delete file storage gateway group",
                "operationId": "DeleteFSGatewayGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_gateway_group_id",
                        "description": "gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSGatewayGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "fs-gateway-groups"
                ],
                "description": "Update file storage gateway group",
                "operationId": "UpdateFSGatewayGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_gateway_group_id",
                        "description": "gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateway group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSGatewayGroupUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSGatewayGroupResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSGatewayGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-gateway-groups/{fs_gateway_group_id}:add-gateways": {
            "post": {
                "tags": [
                    "fs-gateway-groups"
                ],
                "description": "add file storage gateways",
                "operationId": "AddFSGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_gateway_group_id",
                        "description": "gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateways info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSGatewayGroupAddGatewaysReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSGatewayGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-gateway-groups/{fs_gateway_group_id}:remove-gateways": {
            "post": {
                "tags": [
                    "fs-gateway-groups"
                ],
                "description": "remove gateways from gateway group",
                "operationId": "RemoveFSGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_gateway_group_id",
                        "description": "gateway group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateways info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSGatewayGroupRemoveGatewaysReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSGatewayGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/fs-gateways/": {
            "get": {
                "tags": [
                    "fs-gateways"
                ],
                "description": "List file storage gateways",
                "operationId": "ListFSGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_gateway_group_id",
                        "description": "file storage gateway group id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSGatewaysResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-gateways/{fs_gateway_id}": {
            "get": {
                "tags": [
                    "fs-gateways"
                ],
                "description": "Get file storage gateway",
                "operationId": "GetFSGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_gateway_id",
                        "description": "gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSGatewayResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/fs-ldaps/": {
            "get": {
                "tags": [
                    "fs-ldaps"
                ],
                "description": "List file storage ldaps",
                "operationId": "ListFSLdaps",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSLdapsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fs-ldaps"
                ],
                "description": "create file storage ldap",
                "operationId": "CreateFSLdap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "file storage ldap info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSLdapCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSLdapResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-ldaps/{fs_ldap_id}": {
            "get": {
                "tags": [
                    "fs-ldaps"
                ],
                "description": "Get a file storage ldap",
                "operationId": "GetFSLdap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_ldap_id",
                        "description": "file storage ldap id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSLdapResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-ldaps"
                ],
                "description": "Delete file storage ldap",
                "operationId": "DeleteFSLdap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_ldap_id",
                        "description": "file storage ldap id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "fs-ldaps"
                ],
                "description": "Update a file storage ldap",
                "operationId": "UpdateFSLdap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_ldap_id",
                        "description": "file storage ldap id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "file storage ldap info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSLdapUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSLdapResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-ldaps/{fs_ldap_id}:verify": {
            "post": {
                "tags": [
                    "fs-ldaps"
                ],
                "description": "Verify a file storage ldap",
                "operationId": "VerifyFSLdap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_ldap_id",
                        "description": "file storage ldap id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSLdapResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/fs-nfs-connections/": {
            "get": {
                "tags": [
                    "fs-nfs-connections"
                ],
                "description": "List fs nfs connections",
                "operationId": "ListFSNFSConnections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_nfs_share_id",
                        "description": "fs nfs id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSNFSConnectionsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-nfs-share-acls/": {
            "get": {
                "tags": [
                    "fs-nfs-share-acls"
                ],
                "description": "List fs nfs shares acls",
                "operationId": "ListFSNFSShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "fs_nfs_share_id",
                        "description": "fs nfs shares id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSNFSShareACLsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-nfs-shares/": {
            "get": {
                "tags": [
                    "fs-nfs-shares"
                ],
                "description": "List fs nfs sharess",
                "operationId": "ListFSNFSShares",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_folder_id",
                        "description": "fs nfs id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "fs_gateway_group_id",
                        "description": "file storage gateway group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSNFSSharesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fs-nfs-shares"
                ],
                "description": "Create fs nfs shares",
                "operationId": "CreateFSNFSShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSNFSShareCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSNFSShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/fs-nfs-shares/{fs_nfs_share_id}": {
            "get": {
                "tags": [
                    "fs-nfs-shares"
                ],
                "description": "Get fs nfs shares",
                "operationId": "GetFSNFSShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_nfs_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSNFSShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-nfs-shares"
                ],
                "description": "delete fs nfs shares",
                "operationId": "DeleteFSNFSShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_nfs_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSNFSShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/fs-nfs-shares/{fs_nfs_share_id}:add-acls": {
            "post": {
                "tags": [
                    "fs-nfs-shares"
                ],
                "description": "Add fs nfs shares acls",
                "operationId": "AddFSNFSShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_nfs_share_id",
                        "description": "fs nfs shares id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSNFSShareAddACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSNFSShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-nfs-shares/{fs_nfs_share_id}:remove-acls": {
            "post": {
                "tags": [
                    "fs-nfs-shares"
                ],
                "description": "remove fs nfs shares acls",
                "operationId": "RemoveFSNFSShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_nfs_share_id",
                        "description": "fs nfs shares id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSNFSShareRemoveACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSNFSShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-nfs-shares/{fs_nfs_share_id}:update-acls": {
            "post": {
                "tags": [
                    "fs-nfs-shares"
                ],
                "description": "Update fs nfs share acls",
                "operationId": "UpdateFSNFSShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_nfs_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSNFSShareUpdateACLsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSNFSShareResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSNFSShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-quota-trees/": {
            "get": {
                "tags": [
                    "fs-quota-trees"
                ],
                "description": "List file storage quota trees",
                "operationId": "ListQuotaTrees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_folder_id",
                        "description": "file storage folder id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSQuotaTreesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-quota-trees/{fs_quota_tree_id}": {
            "get": {
                "tags": [
                    "fs-quota-trees"
                ],
                "description": "Get file storage quota tree",
                "operationId": "GetQuotaTree",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_quota_tree_id",
                        "description": "quota tree id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSQuotaTreeResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "fs-quota-trees"
                ],
                "description": "Update file storage quota tree",
                "operationId": "UpdateQuotaTree",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_quota_tree_id",
                        "description": "quota tree id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "quota tree info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSQuotaTreeUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSQuotaTreeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-smb-sessions/": {
            "get": {
                "tags": [
                    "fs-smb-sessions"
                ],
                "description": "List fs smb sessions",
                "operationId": "ListFSSMBSessions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_smb_share_id",
                        "description": "fs smb id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSSMBSessionsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-smb-share-acls/": {
            "get": {
                "tags": [
                    "fs-smb-share-acls"
                ],
                "description": "List fs smb share acls",
                "operationId": "ListFSSMBShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_smb_share_id",
                        "description": "fs smb share id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareACLsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-smb-shares/": {
            "get": {
                "tags": [
                    "fs-smb-shares"
                ],
                "description": "List fs smb shares",
                "operationId": "ListFSSMBShares",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_folder_id",
                        "description": "fs folder id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "fs_gateway_group_id",
                        "description": "fs gateway group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSSMBSharesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fs-smb-shares"
                ],
                "description": "Create fs smb share",
                "operationId": "CreateFSSMBShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/fs-smb-shares/{fs_smb_share_id}": {
            "get": {
                "tags": [
                    "fs-smb-shares"
                ],
                "description": "Get fs smb share",
                "operationId": "GetFSSMBShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_smb_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-smb-shares"
                ],
                "description": "delete fs smb share",
                "operationId": "DeleteFSSMBShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_smb_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "fs-smb-shares"
                ],
                "description": "Update fs smb share",
                "operationId": "UpdateFSSMBShare",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_smb_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-smb-shares/{fs_smb_share_id}:add-acls": {
            "post": {
                "tags": [
                    "fs-smb-shares"
                ],
                "description": "Add fs smb share acls",
                "operationId": "AddFSSMBShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_smb_share_id",
                        "description": "fs smb share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareAddACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-smb-shares/{fs_smb_share_id}:remove-acls": {
            "post": {
                "tags": [
                    "fs-smb-shares"
                ],
                "description": "remove fs smb share acls",
                "operationId": "RemoveFSSMBShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_smb_share_id",
                        "description": "fs smb share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareRemoveACLsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-smb-shares/{fs_smb_share_id}:update-acls": {
            "post": {
                "tags": [
                    "fs-smb-shares"
                ],
                "description": "Update fs smb share ACL",
                "operationId": "UpdateFSSMBShareACLs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_smb_share_id",
                        "description": "share id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "share acls info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareUpdateACLsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSSMBShareResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-snapshots/": {
            "get": {
                "tags": [
                    "fs-snapshots"
                ],
                "description": "List file storage snapshots",
                "operationId": "ListFSSnapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_folder_id",
                        "description": "file storage folder id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSSnapshotsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fs-snapshots"
                ],
                "description": "Create file storage snapshot",
                "operationId": "CreateFSSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "snapshot info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSSnapshotCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-snapshots/{fs_snapshot_id}": {
            "get": {
                "tags": [
                    "fs-snapshots"
                ],
                "description": "Get file storage snapshot",
                "operationId": "GetFSSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_snapshot_id",
                        "description": "file storage snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSSnapshotResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-snapshots"
                ],
                "description": "delete file storage snapshot",
                "operationId": "DeleteFSSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_snapshot_id",
                        "description": "snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/FSSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "fs-snapshots"
                ],
                "description": "Update file storage snapshot",
                "operationId": "UpdateFSSnapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_snapshot_id",
                        "description": "snapshot id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "snapshot info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSSnapshotUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSSnapshotResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-user-groups/": {
            "get": {
                "tags": [
                    "fs-user-groups"
                ],
                "description": "List file storage user groups",
                "operationId": "ListFSUserGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "security type of file storage user group",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_user_id",
                        "description": "file storage user id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "not_dfs_smb_share_id",
                        "description": "id of dfs smb share user groups not in",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSUserGroupsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fs-user-groups"
                ],
                "description": "Create file storage user group",
                "operationId": "CreateFSUserGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "user group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSUserGroupCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/FSUserGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-user-groups/{fs_user_group_id}": {
            "get": {
                "tags": [
                    "fs-user-groups"
                ],
                "description": "Get file storage user group",
                "operationId": "GetFSUserGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_user_group_id",
                        "description": "user group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSUserGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-user-groups"
                ],
                "description": "delete file storage user group",
                "operationId": "DeleteFSUserGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_user_group_id",
                        "description": "user group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Not Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "fs-user-groups"
                ],
                "description": "Update file storage user group",
                "operationId": "UpdateFSUserGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_user_group_id",
                        "description": "user group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "user group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSUserGroupUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSUserGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/fs-user-groups/{fs_user_group_id}/fs-users": {
            "put": {
                "tags": [
                    "fs-user-groups"
                ],
                "description": "add users to file storage user group",
                "operationId": "AddFSUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_user_group_id",
                        "description": "user group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "users info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSUserGroupAddUsersReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSUserGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-user-groups"
                ],
                "description": "remove users from file storage user group",
                "operationId": "RemoveFSUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_user_group_id",
                        "description": "user group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "users info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSUserGroupRemoveUsersReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSUserGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-users/": {
            "get": {
                "tags": [
                    "fs-users"
                ],
                "description": "List file storage users",
                "operationId": "ListFSUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "security",
                        "description": "security of file storage users",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_user_group_id",
                        "description": "file storage user group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "not_fs_user_group_id",
                        "description": "file storage user group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "not_dfs_smb_share_id",
                        "description": "id of dfs smb share users not in",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "not_dfs_ftp_share",
                        "description": "value must be true, means available add to ftp share",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "s3_enabled",
                        "description": "is s3 enabled",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "description": "user id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSUsersResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fs-users"
                ],
                "description": "create file storage user",
                "operationId": "CreateFSUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "allow_path_create",
                        "description": "allow create path for s3 when not existed",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "user info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSUserCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/FSUserResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-users/:verify": {
            "post": {
                "tags": [
                    "fs-users"
                ],
                "description": "verify fs user password",
                "operationId": "VerifyFSUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "the identity credential",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSUserVerifyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSUserResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/fs-users/{fs_user_id}": {
            "get": {
                "tags": [
                    "fs-users"
                ],
                "description": "get file storage user",
                "operationId": "GetFSUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_user_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSUserResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "fs-users"
                ],
                "description": "delete file storage user",
                "operationId": "DeleteFSUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_user_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Not Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "fs-users"
                ],
                "description": "update file storage user",
                "operationId": "UpdateFSUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fs_user_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "allow_path_create",
                        "description": "allow create path for s3 when not existed",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "user info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FSUserUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FSUserResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/host-enc-specs/": {
            "get": {
                "tags": [
                    "host-enc-specs"
                ],
                "description": "List host enclosure specs",
                "operationId": "ListHostEncSpecs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "model",
                        "description": "host model",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "vendor",
                        "description": "host vendor",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HostEncSpecsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "host-enc-specs"
                ],
                "description": "Create a host enclosure spec",
                "operationId": "CreateHostEncSpec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "host enclosure spec info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HostEncSpecCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/HostEncSpecResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/host-enc-specs/{spec_id}": {
            "get": {
                "tags": [
                    "host-enc-specs"
                ],
                "description": "Get host enclosure spec",
                "operationId": "GetHostEncSpec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "spec_id",
                        "description": "host enclosure spec id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HostEncSpecResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "host-enc-specs"
                ],
                "description": "Delete a host enclosure spec",
                "operationId": "DeleteHostEncSpec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "spec_id",
                        "description": "host enclosure spec id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/host-info/": {
            "get": {
                "tags": [
                    "host-info"
                ],
                "description": "scan host info from specified ip",
                "operationId": "GetHostInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "ip",
                        "description": "host ip",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HostInfoResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/host-initializations/": {
            "post": {
                "tags": [
                    "host-initializations"
                ],
                "description": "Create host initialization",
                "operationId": "HostInitialization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "host initialization info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HostInitializationReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/HostInitializationResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/host-maintain-validators/": {
            "post": {
                "tags": [
                    "host-maintain-validators"
                ],
                "description": "Create host maintain validator",
                "operationId": "CreateHostMaintainValidator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "host maintain validator info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HostMaintainValidatorCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/HostMaintainValidatorResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/host-maintain-validators/{host_maintain_validator_id}": {
            "get": {
                "tags": [
                    "host-maintain-validators"
                ],
                "description": "Get host maintain validator",
                "operationId": "GetHostMaintainValidator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "host_maintain_validator_id",
                        "description": "host maintain validator id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HostMaintainValidatorResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/host-validators/": {
            "post": {
                "tags": [
                    "host-validators"
                ],
                "description": "Create host validator",
                "operationId": "CreateHostValidator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "host validator info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HostValidatorCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/HostValidatorResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/host-validators/{host_validator_id}": {
            "get": {
                "tags": [
                    "host-validators"
                ],
                "description": "Get host validator",
                "operationId": "GetHostValidator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "host_validator_id",
                        "description": "host validator id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HostValidatorResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/hosts/": {
            "get": {
                "tags": [
                    "hosts"
                ],
                "description": "List hosts by fileter",
                "operationId": "ListHosts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "protection_domain_id",
                        "description": "protection domain id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "osp_cluster_id",
                        "description": "osp cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "hostname",
                        "description": "host name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "if it existed, value should be xdcactive",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "description": "filter by host role",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fc_available",
                        "description": "available host with fc port",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "replication_gateway_available",
                        "description": "available host for replication gateway",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "fs_gateway_group_id",
                        "description": "file storage gateway group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "fs_gateway_group_used",
                        "description": "used in file storage gateway group",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "osp_zone_id",
                        "description": "osp zone id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "datacenter_ids",
                        "description": "datacenter ids",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "usage",
                        "description": "host usage",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "with_s3_lb",
                        "description": "host used by s3 load balancer",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HostsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "hosts"
                ],
                "description": "check env and install packages",
                "operationId": "CreateHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "host info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HostCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/HostResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/hosts/:add-hosts-to-osp-zone": {
            "post": {
                "tags": [
                    "hosts"
                ],
                "description": "Set hosts to osp zone",
                "operationId": "SetHostsToOspZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "hosts cluster osp zone info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OpHostsZoneReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/hosts/:delete-hosts-gateway-lb-group": {
            "post": {
                "tags": [
                    "hosts"
                ],
                "description": "delete hosts gateway load balancer group from osp zone",
                "operationId": "DeleteHostsGatewayLbGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "osp zone info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteHostsGatewayLbGroupOpReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/hosts/:remove-hosts-from-osp-zone": {
            "post": {
                "tags": [
                    "hosts"
                ],
                "description": "remove hosts form osp zone",
                "operationId": "RemoveHostsFormOspZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "hosts cluster osp zone info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OpHostsZoneReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/hosts/{host_id}": {
            "get": {
                "tags": [
                    "hosts"
                ],
                "description": "get a host info",
                "operationId": "GetHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "host_id",
                        "description": "the host id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HostResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "hosts"
                ],
                "description": "delete host",
                "operationId": "DeleteHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "host_id",
                        "description": "host id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/HostResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "hosts"
                ],
                "description": "update host info",
                "operationId": "UpdateHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "host_id",
                        "description": "host id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "host info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HostUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HostResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/hosts/{host_id}/samples": {
            "get": {
                "tags": [
                    "hosts"
                ],
                "description": "get a host's samples",
                "operationId": "GetHostSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "host_id",
                        "description": "host id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HostSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/hosts/{host_id}:host-deletable": {
            "get": {
                "tags": [
                    "hosts"
                ],
                "description": "check host deletable",
                "operationId": "HostDeletable",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "host_id",
                        "description": "host id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HostResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/hosts/{host_id}:maintain": {
            "post": {
                "tags": [
                    "hosts"
                ],
                "description": "Put host in maintanence mode",
                "operationId": "MaintainHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force maintain",
                        "type": "boolean"
                    },
                    {
                        "in": "path",
                        "name": "host_id",
                        "description": "host id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/HostResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/hosts/{host_id}:unmaintain": {
            "post": {
                "tags": [
                    "hosts"
                ],
                "description": "Put host out of maintanence mode",
                "operationId": "UnmaintainHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "host_id",
                        "description": "host id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/HostResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/identity-platforms/": {
            "get": {
                "tags": [
                    "identity-platforms"
                ],
                "description": "List identity platforms",
                "operationId": "ListIdentityPlatforms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdentityPlatformsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "identity-platforms"
                ],
                "description": "Create identity platform",
                "operationId": "CreateIdentityPlatform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "identity platform info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdentityPlatformCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/IdentityPlatformResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/identity-platforms/types": {
            "get": {
                "tags": [
                    "identity-platforms"
                ],
                "description": "List SSO Protocol Types",
                "operationId": "LoginSSOTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LoginSsoTypesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/identity-platforms/{identity_platform_id}": {
            "get": {
                "tags": [
                    "identity-platforms"
                ],
                "description": "Get a identity platform",
                "operationId": "GetIdentityPlatform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "identity_platform_id",
                        "description": "identity platform id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdentityPlatformResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "identity-platforms"
                ],
                "description": "Delete identity platform",
                "operationId": "DeleteIdentityPlatform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "identity_platform_id",
                        "description": "identity platform id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "identity-platforms"
                ],
                "description": "Update a identity platform",
                "operationId": "UpdateIdentityPlatform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "identity_platform_id",
                        "description": "identity platform id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "identity platform info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdentityPlatformUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdentityPlatformResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/identity-platforms/{identity_platform_id}:regenerate": {
            "post": {
                "tags": [
                    "identity-platforms"
                ],
                "description": "regenereate a identity platform key",
                "operationId": "RegenerateIdentityKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "identity_platform_id",
                        "description": "identity platform id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdentityPlatformResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/identity-providers/": {
            "get": {
                "tags": [
                    "identity-providers"
                ],
                "description": "list identity provider",
                "operationId": "GetIdentityProviders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IdentityProvidersResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/licenses/": {
            "get": {
                "tags": [
                    "licenses"
                ],
                "description": "List licenses",
                "operationId": "ListLicenses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "active",
                        "description": "filter license by active status",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LicensesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "post": {
                "tags": [
                    "licenses"
                ],
                "description": "Activate product license",
                "operationId": "RegisterLicense",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force activate",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "dry_run",
                        "description": "dry run upload license file",
                        "type": "boolean"
                    },
                    {
                        "in": "formData",
                        "name": "license",
                        "description": "license info",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LicenseResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/licenses/key": {
            "get": {
                "tags": [
                    "licenses"
                ],
                "description": "get license key file",
                "operationId": "DownloadLicenseKey",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "binary",
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/licenses/summary": {
            "get": {
                "tags": [
                    "licenses"
                ],
                "description": "Get licenses sumary",
                "operationId": "GetLicenseSummary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LicenseSummaryResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/licenses/{license_id}": {
            "get": {
                "tags": [
                    "licenses"
                ],
                "description": "get license",
                "operationId": "GetLicense",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "license_id",
                        "description": "the license id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LicenseResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/licenses/{license_id}:disable": {
            "post": {
                "tags": [
                    "licenses"
                ],
                "description": "disable license",
                "operationId": "DisableLicense",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force disable not expired license",
                        "type": "boolean"
                    },
                    {
                        "in": "path",
                        "name": "license_id",
                        "description": "the license id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LicenseResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/luns/": {
            "get": {
                "tags": [
                    "luns"
                ],
                "description": "List luns",
                "operationId": "ListLuns",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "mapping_group_id",
                        "description": "mapping group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LunsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/luns/{lun_id}": {
            "get": {
                "tags": [
                    "luns"
                ],
                "description": "get a lun",
                "operationId": "GetLun",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "lun_id",
                        "description": "lun id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LunResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/mapping-groups/": {
            "get": {
                "tags": [
                    "mapping-groups"
                ],
                "description": "List mapping groups",
                "operationId": "ListMappingGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "access_path_id",
                        "description": "access path id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "client_group_id",
                        "description": "client group id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MappingGroupsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "mapping-groups"
                ],
                "description": "create a mapping group in access path",
                "operationId": "CreateMappingGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "mapping_group",
                        "description": "mapping info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MappingGroupCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MappingGroupResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/MappingGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/mapping-groups/{mapping_group_id}": {
            "get": {
                "tags": [
                    "mapping-groups"
                ],
                "description": "Get mapping group by id",
                "operationId": "GetMappingGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "mapping_group_id",
                        "description": "mapping group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MappingGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "mapping-groups"
                ],
                "description": "Delete mapping group",
                "operationId": "DeleteMappingGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "mapping_group_id",
                        "description": "mapping group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/MappingGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "mapping-groups"
                ],
                "description": "update mapping group",
                "operationId": "UpdateMappingGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "mapping_group_id",
                        "description": "mapping group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "mapping_group",
                        "description": "mapping info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MappingGroupUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MappingGroupResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/MappingGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/mapping-groups/{mapping_group_id}/block-volumes": {
            "post": {
                "tags": [
                    "mapping-groups"
                ],
                "description": "add volumes to mapping group",
                "operationId": "AddVolumes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "mapping_group_id",
                        "description": "mapping group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "block_volume_ids",
                        "description": "block volume ids",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MappingGroupAddVolumesReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MappingGroupResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/MappingGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "mapping-groups"
                ],
                "description": "remove volumes from mapping group",
                "operationId": "RemoveVolumes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "mapping_group_id",
                        "description": "mapping group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "block_volume_ids",
                        "description": "block volume ids",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MappingGroupRemoveVolumesReq"
                        }
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/MappingGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/mapping-groups/{mapping_group_id}/client-group": {
            "patch": {
                "tags": [
                    "mapping-groups"
                ],
                "description": "update client group in mapping group",
                "operationId": "UpdateMappingGroupClientGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "mapping_group_id",
                        "description": "mapping group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "client_group_id",
                        "description": "client group id",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MappingGroupUpdateClientGroupReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MappingGroupResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/MappingGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/menu/": {
            "get": {
                "tags": [
                    "menu"
                ],
                "description": "get the menu info of current user",
                "operationId": "GetMenu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "type",
                        "description": "menu type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MenuResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "menu"
                ],
                "description": "update the latest menu info of current user",
                "operationId": "UpdateMenu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "type",
                        "description": "menu type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MenuResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/menu/{user_id}": {
            "delete": {
                "tags": [
                    "menu"
                ],
                "description": "delete the menu for the user",
                "operationId": "DeleteMenu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "type",
                        "description": "menu type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MenuResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/metadata-clusters/": {
            "get": {
                "tags": [
                    "metadata-clusters"
                ],
                "description": "List all metadata clusters in the cluster",
                "operationId": "ListMetadataClusters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "host_id",
                        "description": "host id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "metadata_cluster_id",
                        "description": "metadata cluster id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MetadataClustersResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "metadata-clusters"
                ],
                "description": "Create metadata cluster on specific disk",
                "operationId": "CreateMetadataCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "metadata cluster info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/metadata-clusters/{metadata_cluster_id}": {
            "get": {
                "tags": [
                    "metadata-clusters"
                ],
                "description": "get a metadata cluster",
                "operationId": "GetMetadataCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "metadata_cluster_id",
                        "description": "metadata cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "metadata-clusters"
                ],
                "description": "delete a metadata cluster",
                "operationId": "DeleteMetadataCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "metadata_cluster_id",
                        "description": "metadata cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "metadata-clusters"
                ],
                "description": "update metadata cluster",
                "operationId": "UpdateMetadataCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "metadata_cluster_id",
                        "description": "metadata cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "metadata cluster info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/metadata-clusters/{metadata_cluster_id}/predictions": {
            "get": {
                "tags": [
                    "metadata-clusters"
                ],
                "description": "get a metadata cluster's prediction",
                "operationId": "GetMetadataClusterPredictions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "metadata_cluster_id",
                        "description": "metadata cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterPredictionsResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/metadata-clusters/{metadata_cluster_id}/samples": {
            "get": {
                "tags": [
                    "metadata-clusters"
                ],
                "description": "get samples of a metadata cluster",
                "operationId": "GetMetadataClusterSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "metadata_cluster_id",
                        "description": "metadata cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/metadata-clusters/{metadata_cluster_id}:add-metadata-services": {
            "post": {
                "tags": [
                    "metadata-clusters"
                ],
                "description": "Add metadata services to cluster",
                "operationId": "AddMetadataServicesToCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "metadata_cluster_id",
                        "description": "metadata cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "metadata services",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterAddServicesReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/metadata-clusters/{metadata_cluster_id}:remove-metadata-services": {
            "post": {
                "tags": [
                    "metadata-clusters"
                ],
                "description": "Remove metadata services from cluster",
                "operationId": "RemoveMetadataServicesFromCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "metadata_cluster_id",
                        "description": "metadata cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "metadata services",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterRemoveServicesReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/metadata-clusters/{metadata_cluster_id}:set-stretched": {
            "patch": {
                "tags": [
                    "metadata-clusters"
                ],
                "description": "set metadata cluster to stretched",
                "operationId": "SetMetadataClusterToStretched",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "metadata_cluster_id",
                        "description": "metadata cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accept",
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/metadata-clusters/{metadata_cluster_id}:update-primary-dc": {
            "patch": {
                "tags": [
                    "metadata-clusters"
                ],
                "description": "update primary datacenter of metadata cluster",
                "operationId": "UpdatePrimaryDc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "metadata_cluster_id",
                        "description": "metadata cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "metadata cluster info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterUpdatePrimaryDcReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accept",
                        "schema": {
                            "$ref": "#/definitions/MetadataClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/metadata-services/": {
            "get": {
                "tags": [
                    "metadata-services"
                ],
                "description": "List all metadata services in the cluster",
                "operationId": "ListMetadataServices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "host_id",
                        "description": "host id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "metadata_cluster_id",
                        "description": "metadata cluster id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MetadataServicesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/metadata-services/{metadata_service_id}": {
            "get": {
                "tags": [
                    "metadata-services"
                ],
                "description": "get a metadata service",
                "operationId": "GetMetadataService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "metadata_service_id",
                        "description": "metadata service id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MetadataServiceResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/metadata-services/{metadata_service_id}/samples": {
            "get": {
                "tags": [
                    "metadata-services"
                ],
                "description": "get samples of a metadata service",
                "operationId": "GetMetadataServiceSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "metadata_service_id",
                        "description": "metadata service id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MetadataServiceSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/network-addresses/": {
            "get": {
                "tags": [
                    "network-addresses"
                ],
                "description": "List network addresses",
                "operationId": "ListNetworkAddresses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "network_interface_id",
                        "description": "network interface id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "host_id",
                        "description": "host id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "description": "network address role",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "vip_group_id",
                        "description": "vip group id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkAddressesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/network-addresses/{network_address_id}": {
            "get": {
                "tags": [
                    "network-addresses"
                ],
                "description": "Get a network address",
                "operationId": "GetNetworkAddress",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "network_address_id",
                        "description": "network address id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkAddressResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/network-diagnoses/": {
            "get": {
                "tags": [
                    "network-diagnoses"
                ],
                "description": "List network diagnoses",
                "operationId": "ListNetworkDiagnoses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkDiagnosesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "network-diagnoses"
                ],
                "description": "Create network diagnosis",
                "operationId": "CreateNetworkDiagnosis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "network diagnosis info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkDiagnosisCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkDiagnosisResp"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/NetworkDiagnosisResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/network-diagnoses/{network_diagnosis_id}": {
            "get": {
                "tags": [
                    "network-diagnoses"
                ],
                "description": "Get network diagnosis",
                "operationId": "GetNetworkDiagnosis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "network_diagnosis_id",
                        "description": "network diagnosis id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkDiagnosisResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "network-diagnoses"
                ],
                "description": "delete network diagnosis",
                "operationId": "DeleteNetworkDiagnosis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "network_diagnosis_id",
                        "description": "network diagnosis id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Not Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/network-diagnoses/{network_diagnosis_id}:stop": {
            "post": {
                "tags": [
                    "network-diagnoses"
                ],
                "description": "stop network diagnosis",
                "operationId": "StopNetworkDiagnosis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "network_diagnosis_id",
                        "description": "network diagnosis id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/NetworkDiagnosisResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/network-diagnosis-items/": {
            "get": {
                "tags": [
                    "network-diagnosis-items"
                ],
                "description": "List network diagnosis items",
                "operationId": "ListNetworkDiagnosisItems",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "networks",
                        "description": "network type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "finished",
                        "description": "diagnosis item finished or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkDiagnosisItemsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/network-interfaces/": {
            "get": {
                "tags": [
                    "network-interfaces"
                ],
                "description": "List network interfaces",
                "operationId": "ListNetworkInterfaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "master_network_interface_id",
                        "description": "master network interface id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "host_id",
                        "description": "host id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "description": "network interface role",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkInterfacesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/network-interfaces/{network_interface_id}": {
            "get": {
                "tags": [
                    "network-interfaces"
                ],
                "description": "Get a network interface",
                "operationId": "GetNetworkInterface",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "network_interface_id",
                        "description": "network interface id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkInterfaceResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/network-interfaces/{network_interface_id}/samples": {
            "get": {
                "tags": [
                    "network-interfaces"
                ],
                "description": "get a network interface's Samples",
                "operationId": "GetNetworkInterfaceSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "network_interface_id",
                        "description": "network interface id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkInterfaceSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/nfs-gateway-bucket-maps/": {
            "get": {
                "tags": [
                    "nfs-gateway-bucket-maps"
                ],
                "description": "List nfs gateway s3 bucket maps",
                "operationId": "ListNFSGatewayS3BucketMaps",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "nfs_gateway_id",
                        "description": "nfs gateway id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "os_bucket_id",
                        "description": "s3 bucket id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayBucketMapsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/nfs-gateways/": {
            "get": {
                "tags": [
                    "nfs-gateways"
                ],
                "description": "List all nfs gateways",
                "operationId": "ListNFSGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "osp_zone_id",
                        "description": "osp zone id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewaysResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "nfs-gateways"
                ],
                "description": "create nfs gateway",
                "operationId": "CreateNFSGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "nfs gateway info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/nfs-gateways/{gateway_id}": {
            "get": {
                "tags": [
                    "nfs-gateways"
                ],
                "description": "show nfs gateway",
                "operationId": "GetNFSGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "nfs gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "nfs-gateways"
                ],
                "description": "start/stop nfs gateway",
                "operationId": "DoNFSGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "nfs gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force stop or no",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "nfs gateway action info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayActionReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "nfs-gateways"
                ],
                "description": "delete nfs gateway",
                "operationId": "DeleteNFSGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "nfs gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "nfs-gateways"
                ],
                "description": "update nfs gateway",
                "operationId": "UpdateNFSGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "nfs gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "nfs gateway info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/nfs-gateways/{gateway_id}/buckets": {
            "get": {
                "tags": [
                    "nfs-gateways"
                ],
                "description": "List nfs gateway bucket maps",
                "operationId": "ListNFSGatewayBucketMaps",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "nfs gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayBucketMapsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/nfs-gateways/{gateway_id}/buckets/{bucket_id}": {
            "get": {
                "tags": [
                    "nfs-gateways"
                ],
                "description": "get nfs gateway bucket map",
                "operationId": "GetNFSGatewayBucketMap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "nfs gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayBucketMapResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "nfs-gateways"
                ],
                "description": "add bucket to nfs gateway",
                "operationId": "CreateNFSGatewayBucketMap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "nfs gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayBucketMapResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "nfs-gateways"
                ],
                "description": "remove bucket from nfs gateway",
                "operationId": "DeleteNFSGatewayBucketMap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "nfs gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or no",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayBucketMapResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "nfs-gateways"
                ],
                "description": "update nfs gateway bucket",
                "operationId": "UpdateNFSGatewayBucketMap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "nfs gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "nfs gateway bucket update info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayBucketMapUpdateReq"
                        }
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force update bucket map",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayBucketMapResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayBucketMapResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/nfs-gateways/{gateway_id}/samples": {
            "get": {
                "tags": [
                    "nfs-gateways"
                ],
                "description": "Get nfs gateway's samples",
                "operationId": "GetNFSGatewaySamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewaySamplesResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/nfs-gateways/{gateway_id}:update-osp-export-config": {
            "post": {
                "tags": [
                    "nfs-gateways"
                ],
                "description": "update osp nfs gateway export config",
                "operationId": "UpdateOspExportConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "nfs gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/NFSGatewayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-bucket-loggings/": {
            "get": {
                "tags": [
                    "os-bucket-loggings"
                ],
                "description": "List os bucket loggings",
                "operationId": "ListOSBucketLoggings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "source_bucket_name",
                        "description": "source bucket name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "target_bucket_name",
                        "description": "target bucket name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSBucketLoggingsResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/": {
            "get": {
                "tags": [
                    "os-buckets"
                ],
                "description": "List object storage buckets",
                "operationId": "ListBuckets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "name of object storage buckets",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "os_policy_id",
                        "description": "The id of policy object storage buckets belong to",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "os_user_id",
                        "description": "The id of user object storage buckets belong to",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "replication_uuid",
                        "description": "The uuid of replication os buckets belong to",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "virtual",
                        "description": "Virtual bucket or not",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "Create os bucket",
                "operationId": "CreateBucket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "bucket info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/samples": {
            "get": {
                "tags": [
                    "os-buckets"
                ],
                "description": "Get samples of multiple object storage buckets",
                "operationId": "BatchGetObjectStorageSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "bucket ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MultiObjectStorageBucketsSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}": {
            "get": {
                "tags": [
                    "os-buckets"
                ],
                "description": "Get object storage bucket",
                "operationId": "GetBucket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-buckets"
                ],
                "description": "delete object storage bucket",
                "operationId": "DeleteBucket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "os-buckets"
                ],
                "description": "Update object storage bucket",
                "operationId": "UpdateBucket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "bucket info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}/lifecycle": {
            "put": {
                "tags": [
                    "os-buckets"
                ],
                "description": "Set object storage lifecycle rules",
                "operationId": "SetObjectStorageLifecycleRules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "lifecyce rules info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageLifecycleSetReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-buckets"
                ],
                "description": "delete object storage lifecycle",
                "operationId": "DeleteObjectStorageLifecycle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}/nfs-clients": {
            "get": {
                "tags": [
                    "os-buckets"
                ],
                "description": "List nfs clients",
                "operationId": "ListObjectStorageBucketNFSClients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketNFSClientsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "create nfs client",
                "operationId": "CreateObjectStorageBucketNFSClients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "nfs client info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketNFSClientsCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RawObjectStorageBucketResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/RawObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-buckets"
                ],
                "description": "delete nfs clients",
                "operationId": "DeleteObjectStorageBucketNFSClients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "nfs client info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketNFSClientsDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RawObjectStorageBucketResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/RawObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}/nfs-clients/{client_id}": {
            "get": {
                "tags": [
                    "os-buckets"
                ],
                "description": "show nfs client",
                "operationId": "GetObjectStorageBucketNFSClient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "client_id",
                        "description": "nfs client id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketNFSClientResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "os-buckets"
                ],
                "description": "update nfs client",
                "operationId": "UpdateObjectStorageBucketNFSClient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "client_id",
                        "description": "nfs client id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "nfs client info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketNFSClientUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketNFSClientResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketNFSClientResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}/origin_pull_samples": {
            "get": {
                "tags": [
                    "os-buckets"
                ],
                "description": "get an os bucket's origin pull Samples",
                "operationId": "GetOSBucketOriginPullSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "origin_mode",
                        "description": "origin mode",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSBucketOriginPullSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}/samples": {
            "get": {
                "tags": [
                    "os-buckets"
                ],
                "description": "get an object storage bucket's Samples",
                "operationId": "GetObjectStorageBucketSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:add-custom-labels": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "add object storage bucket custom labels",
                "operationId": "AddCustomLabels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "bucket custom labels info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketCustomLabelsAddReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:add-os-replication-paths": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "add os replication paths for os bucket",
                "operationId": "AddOSReplicationPaths",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "replication paths info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketAddReplicationPathsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:add-os-replication-zones": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "add os replication zones for os bucket",
                "operationId": "AddOSReplicationZones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "replication zones info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketAddReplicationZonesReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:cancel": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "cancel delete bucket task",
                "operationId": "CancelDeleteBucket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:remove-custom-labels": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "remove object storage bucket custom labels",
                "operationId": "RemoveCustomLabels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "object storage bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "custom labels info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketCustomLabelsRemoveReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:remove-os-bucket-loggings": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "Remove os bucket loggings of os bucket",
                "operationId": "RemoveOSBucketLoggings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "os bucket loggings info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketRemoveLoggingsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:remove-os-replication-paths": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "remove os replication paths for os bucket",
                "operationId": "RemoveOSReplicationPaths",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "replication paths info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketRemoveReplicationPathsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:remove-os-replication-zones": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "remove os replication zones for os bucket",
                "operationId": "RemoveOSReplicationZones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete os replication zone even if target zone is dead",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "replication zones info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketRemoveReplicationZonesReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:set-access-logging": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "Set access logging of os bucket",
                "operationId": "SetAccessLogging",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "access logging info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketSetAccessLoggingReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:set-bucket-policy": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "set object storage bucket policy",
                "operationId": "SetOSBucketPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "bucket policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketPolicySetReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:set-metadata-search": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "set object storage bucket metadata search",
                "operationId": "SetMetadataSearch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "object storage bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "bucket metadata search info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketMetadataSearchSetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketsResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:set-object-storage-class": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "Set bucket object match storage class",
                "operationId": "SetObjectStorageClass",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "object storage class info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketSetObjectStorageClassReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:suspend-access-logging": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "suspend access logging for os bucket",
                "operationId": "SuspendAccessLoggings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:suspend-os-replication-paths": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "suspend os replication paths for os bucket",
                "operationId": "SuspendOSReplicationPaths",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "replication paths info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketUpdateReplicationPathsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:switch-owner-os-zone": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "Switch owner zone of os bucket",
                "operationId": "SwitchOwnerOSZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force to switch even if old owner zone is dead",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "new owner os zone info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketSwitchOwnerOSZoneReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:unset-access-logging": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "Unset access logging of os bucket",
                "operationId": "UnsetAccessLogging",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:unset-bucket-policy": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "unset object storage bucket policy",
                "operationId": "UnsetOSBucketPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:unsuspend-access-logging": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "unsuspend access logging for os bucket",
                "operationId": "UnsuspendAccessLogging",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:unsuspend-os-replication-paths": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "unsuspend os replication paths for os bucket",
                "operationId": "UnsuspendOSReplicationPaths",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "replication paths info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketUpdateReplicationPathsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-buckets/{bucket_id}:update-custom-labels": {
            "post": {
                "tags": [
                    "os-buckets"
                ],
                "description": "update object storage bucket custom labels",
                "operationId": "UpdateCustomLabels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bucket_id",
                        "description": "object storage bucket id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "custom labels info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBucketCustomLabelsUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageBucketResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-builtin-blu-rays/": {
            "get": {
                "tags": [
                    "os-builtin-blu-rays"
                ],
                "description": "List os builtin blu rays",
                "operationId": "ListOSBuiltinBluRays",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSBuiltinBluRaysResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-builtin-blu-rays"
                ],
                "description": "Create an os builtin blu ray",
                "operationId": "CreateOSBuiltinBluRay",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "builtin blu ray info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBuiltinBluRayCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSBuiltinBluRayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-builtin-blu-rays/{builtin_blu_ray_id}": {
            "get": {
                "tags": [
                    "os-builtin-blu-rays"
                ],
                "description": "Get an os builtin blu ray",
                "operationId": "GetOSBuiltinBluRay",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "builtin_blu_ray_id",
                        "description": "builtin blu ray id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSBuiltinBluRayResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-builtin-blu-rays"
                ],
                "description": "Delete an os builtin blu ray",
                "operationId": "DeleteOSBuiltinBluRay",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "builtin_blu_ray_id",
                        "description": "builtin blu ray id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "os-builtin-blu-rays"
                ],
                "description": "update os builtin blu ray",
                "operationId": "UpdateOSBuiltinBluRay",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "builtin_blu_ray_id",
                        "description": "builtin blu ray id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "builtin blu ray info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSBuiltinBluRayUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSBuiltinBluRayResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSBuiltinBluRayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-custom-labels/": {
            "get": {
                "tags": [
                    "os-custom-labels"
                ],
                "description": "List object storage custom labels",
                "operationId": "ListOSCustomLabels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "description": "label category: meta, default, tagging",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSCustomLabelsResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-custom-labels/{os_custom_label_id}": {
            "get": {
                "tags": [
                    "os-custom-labels"
                ],
                "description": "Get object storage custom label",
                "operationId": "GetOSCustomLabel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "os_custom_label_id",
                        "description": "os custom label id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSCustomLabelResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/os-external-storage-classes/": {
            "get": {
                "tags": [
                    "os-external-storage-classes"
                ],
                "description": "List os external storage classes",
                "operationId": "ListOSExternalStorageClasses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "os_policy_id",
                        "description": "os policy id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "general_status",
                        "description": "query records with active or error status",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSExternalStorageClassesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-external-storage-classes"
                ],
                "description": "Create os external storage class",
                "operationId": "CreateExternalStorageClass",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "external storage class info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSExternalStorageClassCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSExternalStorageClassResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-external-storage-classes/{external_storage_class_id}": {
            "get": {
                "tags": [
                    "os-external-storage-classes"
                ],
                "description": "Get a os external storage class",
                "operationId": "GetOSExternalStorageClass",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "external_storage_class_id",
                        "description": "external storage class id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSExternalStorageClassResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-external-storage-classes"
                ],
                "description": "Delete an os external storage class",
                "operationId": "DeleteOSExternalStorageClass",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "external_storage_class_id",
                        "description": "external storage class id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSExternalStorageClassResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "os-external-storage-classes"
                ],
                "description": "update os external storage class",
                "operationId": "UpdateOSExternalStorageClass",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "external_storage_class_id",
                        "description": "external storage class id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "external storage class info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSExternalStorageClassUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSExternalStorageClassResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSExternalStorageClassResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-external-storage-platform-types/": {
            "get": {
                "tags": [
                    "os-external-storage-platform-types"
                ],
                "description": "List os external storage platform types",
                "operationId": "ListOSExternalStoragePlatformTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "platform",
                        "description": "platform",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "platform_type",
                        "description": "platform type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSExternalStoragePlatformTypesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-external-storage-platform-types"
                ],
                "description": "Create os external storage platform type",
                "operationId": "CreateOSExternalStoragePlatformType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "external storage platform type info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSExternalStoragePlatformTypeCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSExternalStoragePlatformTypeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-external-storage-platform-types/{external_storage_platform_type_id}": {
            "get": {
                "tags": [
                    "os-external-storage-platform-types"
                ],
                "description": "Get an os external storage platform type info",
                "operationId": "GetOSExternalStoragePlatformType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "external_storage_platform_type_id",
                        "description": "external storage platform type id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSExternalStoragePlatformTypeResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-external-storage-platform-validators/": {
            "post": {
                "tags": [
                    "os-external-storage-platform-validators"
                ],
                "description": "Create os external storage platform validator",
                "operationId": "CreateOSExStoragePlatformValidator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "external storage platform validator info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSExStoragePlatformValidatorCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSExStoragePlatformValidatorResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/os-external-storage-platform-validators/{validator_id}": {
            "get": {
                "tags": [
                    "os-external-storage-platform-validators"
                ],
                "description": "Get a os external storage platform validator",
                "operationId": "GetOSExStoragePlatformValidator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "validator_id",
                        "description": "external storage platform validator id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSExStoragePlatformValidatorResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-gateways/": {
            "get": {
                "tags": [
                    "os-gateways"
                ],
                "description": "List s3 gateways",
                "operationId": "ListGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageGatewaysResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-gateways"
                ],
                "description": "Create s3 gateway",
                "operationId": "CreateGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateway info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageGatewayCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageGatewayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-gateways/{gateway_id}": {
            "get": {
                "tags": [
                    "os-gateways"
                ],
                "description": "Get s3 gateway",
                "operationId": "GetGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageGatewayResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "os-gateways"
                ],
                "description": "Update s3 gateway",
                "operationId": "UpdateGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateway info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageGatewayUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageGatewayResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageGatewayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-gateways"
                ],
                "description": "Delete s3 gateway",
                "operationId": "DeleteGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageGatewayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/os-gateways/{gateway_id}/samples": {
            "get": {
                "tags": [
                    "os-gateways"
                ],
                "description": "Get s3 gateway's samples",
                "operationId": "GetGatewaySamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageGatewaySamplesResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/os-keys/": {
            "get": {
                "tags": [
                    "os-keys"
                ],
                "description": "List object storage keys",
                "operationId": "ListKeys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "description": "object storage user id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageKeysResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-keys"
                ],
                "description": "Create new object storage key",
                "operationId": "CreateKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "key info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageKeyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageKeyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-keys/{key_id}": {
            "get": {
                "tags": [
                    "os-keys"
                ],
                "description": "get object storage key",
                "operationId": "GetKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "key_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageKeyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-keys"
                ],
                "description": "Delete object storage key",
                "operationId": "DeleteKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "key_id",
                        "description": "key id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageKeyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "os-keys"
                ],
                "description": "Update object storage key",
                "operationId": "UpdateKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "key_id",
                        "description": "key id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "key info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageKeyUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageKeyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-lifecycles/": {
            "get": {
                "tags": [
                    "os-lifecycles"
                ],
                "description": "List object storage lifecycles",
                "operationId": "ListLifecycles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageLifecyclesResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-lifecycles/{lifecycle_id}": {
            "get": {
                "tags": [
                    "os-lifecycles"
                ],
                "description": "Get object storage lifecycle",
                "operationId": "GetLifecycle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "lifecycle_id",
                        "description": "lifecycle id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageLifecycleResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-objects/_search": {
            "post": {
                "tags": [
                    "os-objects"
                ],
                "description": "List object storage objects by search",
                "operationId": "ListOSObjectsBySearch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-objects/_sql": {
            "post": {
                "tags": [
                    "os-objects"
                ],
                "description": "List object storage objects by sql",
                "operationId": "ListOSObjectsBySQL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-objects/report/_sql": {
            "post": {
                "tags": [
                    "os-objects"
                ],
                "description": "Download object storage objects report by sql",
                "operationId": "ReportOSObjectsBySQL",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "sql",
                        "description": "select statement",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "os_buckets",
                        "description": "name of buckets joined by colon",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "binary",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-origin-pull-rules/": {
            "get": {
                "tags": [
                    "os-origin-pull-rules"
                ],
                "description": "List os origin pull rules",
                "operationId": "ListOSOriginPullRules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "bucket_id",
                        "description": "bucket id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "s3_lb_group_id",
                        "description": "s3 lb group id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSOriginPullRulesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-origin-pull-rules"
                ],
                "description": "Create os origin pull rule",
                "operationId": "CreateOSOriginPullRule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "origin pull rule info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSOriginPullRuleCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSOriginPullRuleResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-origin-pull-rules/{rule_id}": {
            "get": {
                "tags": [
                    "os-origin-pull-rules"
                ],
                "description": "Get an os origin pull rule",
                "operationId": "GetOSOriginPullRule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "rule_id",
                        "description": "rule id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSOriginPullRuleResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-origin-pull-rules"
                ],
                "description": "Delete an os origin pull rule",
                "operationId": "DeleteOSOriginPullRule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "rule_id",
                        "description": "origin pull rule id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSOriginPullRuleResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "os-origin-pull-rules"
                ],
                "description": "update os origin pull rule",
                "operationId": "UpdateOSOriginPullRule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "rule_id",
                        "description": "origin pull rule id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "origin pull rule info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSOriginPullRuleUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSOriginPullRuleResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSOriginPullRuleResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/os-policies/": {
            "get": {
                "tags": [
                    "os-policies"
                ],
                "description": "List object storage policies",
                "operationId": "ListPolicies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStoragePoliciesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-policies"
                ],
                "description": "Create object storage policy",
                "operationId": "CreatePolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStoragePolicyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStoragePolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-policies/{policy_id}": {
            "get": {
                "tags": [
                    "os-policies"
                ],
                "description": "Get object storage policy",
                "operationId": "GetPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStoragePolicyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-policies"
                ],
                "description": "Delete object storage policy",
                "operationId": "DeletePolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStoragePolicyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "os-policies"
                ],
                "description": "Update object storage policy",
                "operationId": "UpdatePolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_id",
                        "description": "policy id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "policy info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStoragePolicyUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStoragePolicyResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStoragePolicyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-remote-policies/": {
            "get": {
                "tags": [
                    "os-remote-policies"
                ],
                "description": "List os remote policies",
                "operationId": "ListOSRemotePolicies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "marker",
                        "description": "paging param",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "zone_uuid",
                        "description": "zone uuid",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSRemotePoliciesResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-remote-policies/{policy_uuid}": {
            "get": {
                "tags": [
                    "os-remote-policies"
                ],
                "description": "Get a os remote policy",
                "operationId": "GetOSRemotePolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "policy_uuid",
                        "description": "policy uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSRemotePolicyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/os-replication-paths/": {
            "get": {
                "tags": [
                    "os-replication-paths"
                ],
                "description": "List os replication paths",
                "operationId": "ListOSReplicationPaths",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "marker",
                        "description": "paging param",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "replication_uuid",
                        "description": "os replication uuid",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "allow_unknown_zone",
                        "description": "allow has nil zone result(default true)",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSReplicationPathsResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-replication-paths/{path_uuid}": {
            "get": {
                "tags": [
                    "os-replication-paths"
                ],
                "description": "Get a os replication path",
                "operationId": "GetOSReplicationPath",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "path_uuid",
                        "description": "replication path uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSReplicationPathResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-replication-zones/": {
            "get": {
                "tags": [
                    "os-replication-zones"
                ],
                "description": "List os replication zones",
                "operationId": "ListOSReplicationZones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "marker",
                        "description": "paging param",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "replication_uuid",
                        "description": "os replication uuid",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "os_zone_uuid",
                        "description": "os zone uuid",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSReplicationZoneRecordsResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-replication-zones"
                ],
                "description": "Create a os replication zone",
                "operationId": "CreateOSReplicationZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "os replication zone info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSReplicationZoneCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSReplicationZoneResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-replication-zones/{zone_uuid}": {
            "get": {
                "tags": [
                    "os-replication-zones"
                ],
                "description": "Get a os replication zone",
                "operationId": "GetOSReplicationZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "zone_uuid",
                        "description": "os replication zone uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSReplicationZoneRecordResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-replication-zones"
                ],
                "description": "Delete a os replication zone",
                "operationId": "DeleteOSReplicationZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "zone_uuid",
                        "description": "os replication zone uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSReplicationZoneResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "os-replication-zones"
                ],
                "description": "Update an os replication zone",
                "operationId": "UpdateOSReplicationZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "zone_uuid",
                        "description": "os replication zone uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSReplicationZoneResp"
                        }
                    },
                    "202": {
                        "description": "Accept",
                        "schema": {
                            "$ref": "#/definitions/OSReplicationZoneResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-replication-zones/{zone_uuid}/samples": {
            "get": {
                "tags": [
                    "os-replication-zones"
                ],
                "description": "get an os replication zone's samples",
                "operationId": "GetOSReplicationZoneSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "zone_uuid",
                        "description": "os replication zone uuid",
                        "required": true,
                        "type": "string",
                        "default": "true"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSReplicationZoneSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-samples/": {
            "get": {
                "tags": [
                    "os-samples"
                ],
                "description": "Get os samples",
                "operationId": "GetOSSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "time",
                        "description": "query time(url encode RFC3339)",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSSampleResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-samples/{user_name}": {
            "get": {
                "tags": [
                    "os-samples"
                ],
                "description": "Get os samples by user name",
                "operationId": "GetOSSamplesByUserName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_name",
                        "description": "os user name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "time",
                        "description": "query time(url encode RFC3339)",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSSampleResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-samples/{user_name}/{bucket_name}": {
            "get": {
                "tags": [
                    "os-samples"
                ],
                "description": "get os samples by os bucket name",
                "operationId": "GetOSSamplesByBucketName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_name",
                        "description": "os user name",
                        "required": true,
                        "type": "string",
                        "default": "true"
                    },
                    {
                        "in": "path",
                        "name": "bucket_name",
                        "description": "os bucket name",
                        "required": true,
                        "type": "string",
                        "default": "true"
                    },
                    {
                        "in": "query",
                        "name": "time",
                        "description": "query time(url encode RFC3339)",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSSampleResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-search-engines/": {
            "get": {
                "tags": [
                    "os-search-engines"
                ],
                "description": "List OS search engine",
                "operationId": "ListOSSearchEngines",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSSearchEnginesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-search-engines"
                ],
                "description": "Create OS search engine",
                "operationId": "CreateOSSearchEngine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "OS search engine info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSSearchEngineCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSSearchEngineResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/os-search-engines/{os_search_engine_id}": {
            "get": {
                "tags": [
                    "os-search-engines"
                ],
                "description": "Get a OS search engine",
                "operationId": "GetOSSearchEngine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "os_search_engine_id",
                        "description": "OS search engine id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSSearchEngineResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-search-engines"
                ],
                "description": "delete OS search engine",
                "operationId": "DeleteOSSearchEngine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "os_search_engine_id",
                        "description": "OS search engine id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSSearchEngineResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "os-search-engines"
                ],
                "description": "change OS search engine falvor or data size",
                "operationId": "ChangeOSSearchEngine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "os_search_engine_id",
                        "description": "OS search engine id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "os search gateways info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSSearchEngineUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSSearchEngineResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-search-engines/{os_search_engine_id}/samples": {
            "get": {
                "tags": [
                    "os-search-engines"
                ],
                "description": "get an object storage search engine's samples",
                "operationId": "GetOSSearchEngineSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "os_search_engine_id",
                        "description": "OS search engine id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSSearchEngineSamplesResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-search-engines/{os_search_engine_id}:add-os-search-gateways": {
            "post": {
                "tags": [
                    "os-search-engines"
                ],
                "description": "Create new OS Search gateways on OS search engine",
                "operationId": "AddOSSearchGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "os_search_engine_id",
                        "description": "OS search engine id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "os search gateways info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSSearchEngineAddGatewaysReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSSearchEngineResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-search-engines/{os_search_engine_id}:remove-os-search-gateways": {
            "post": {
                "tags": [
                    "os-search-engines"
                ],
                "description": "remove OS search gateways from OS search engine",
                "operationId": "RemoveOSSearchGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "os_search_engine_id",
                        "description": "OS search engine id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "os search gateways info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSSearchEngineRemoveGatewaysReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSSearchEngineResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-search-engines/{os_search_engine_id}:start": {
            "post": {
                "tags": [
                    "os-search-engines"
                ],
                "description": "start OS search gateways from OS search engine",
                "operationId": "StartOSSearchEngine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "os_search_engine_id",
                        "description": "OS search engine id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSSearchEngineResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/os-search-engines/{os_search_engine_id}:stop": {
            "post": {
                "tags": [
                    "os-search-engines"
                ],
                "description": "stop OS search gateways from OS search engine",
                "operationId": "StopOSSearchEngine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "os_search_engine_id",
                        "description": "OS search engine id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSSearchEngineResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-search-gateways/": {
            "get": {
                "tags": [
                    "os-search-gateways"
                ],
                "description": "List OS Search Gateways",
                "operationId": "ListOSSearchGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "os_search_engine_id",
                        "description": "os search engine id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSSearchGatewaysResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-search-gateways/{gateway_id}": {
            "get": {
                "tags": [
                    "os-search-gateways"
                ],
                "description": "Get OS Search Gateway",
                "operationId": "GetOSSearchGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "os search gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSSearchGatewayResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/os-search-gateways/{gateway_id}/samples": {
            "get": {
                "tags": [
                    "os-search-gateways"
                ],
                "description": "get a os search gateway's samples",
                "operationId": "GetOSSearchGatewaySamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "gateway_id",
                        "description": "os search gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSSearchGatewaySamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-storage-classes/": {
            "get": {
                "tags": [
                    "os-storage-classes"
                ],
                "description": "List os storage classes",
                "operationId": "ListOSStorageClasses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "os_policy_id",
                        "description": "os policy id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSStorageClassesResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-storage-classes"
                ],
                "description": "Create os storage class",
                "operationId": "CreateOSStorageClass",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "storage class info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSStorageClassCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSStorageClassResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-storage-classes/{storage_class_id}": {
            "get": {
                "tags": [
                    "os-storage-classes"
                ],
                "description": "Get an os storage class",
                "operationId": "GetOSStorageClass",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "storage_class_id",
                        "description": "storage class id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSStorageClassResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-storage-classes"
                ],
                "description": "Delete an os storage class",
                "operationId": "DeleteOSStorageClass",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "storage_class_id",
                        "description": "storage class id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSStorageClassResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "os-storage-classes"
                ],
                "description": "update storage class",
                "operationId": "UpdateOSStorageClass",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "storage_class_id",
                        "description": "storage class id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "storage class info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSStorageClassUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSStorageClassResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OSStorageClassResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-users/": {
            "get": {
                "tags": [
                    "os-users"
                ],
                "description": "List object storage users",
                "operationId": "ListObjectStorageUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageUsersResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-users"
                ],
                "description": "create object storage user",
                "operationId": "CreateObjectStorageUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "user info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageUserCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageUserResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-users/{user_id}": {
            "get": {
                "tags": [
                    "os-users"
                ],
                "description": "get object storage user",
                "operationId": "GetObjectStorageUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageUserResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-users"
                ],
                "description": "delete object storage user",
                "operationId": "DeleteObjectStorageUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageUserResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "os-users"
                ],
                "description": "update object storage user",
                "operationId": "UpdateObjectStorageUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "user info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageUserUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageUserResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageUserResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-users/{user_id}/samples": {
            "get": {
                "tags": [
                    "os-users"
                ],
                "description": "get an object storage user's Samples",
                "operationId": "GetObjectStorageUserSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageUserSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-zone-locks/": {
            "get": {
                "tags": [
                    "os-zone-locks"
                ],
                "description": "List os zone locks.",
                "operationId": "ListOSZoneLocks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "all",
                        "description": "show all zone locks",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSZoneLocksResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-zone-locks"
                ],
                "description": "Create a os zone lock.",
                "operationId": "CreateOSZoneLock",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "os zone lock info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSZoneLockCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSZoneLockResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-zone-locks/{lock_uuid}": {
            "get": {
                "tags": [
                    "os-zone-locks"
                ],
                "description": "Get a os zone lock.",
                "operationId": "GetOSZoneLock",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "lock_uuid",
                        "description": "os zone lock uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSZoneLockResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-zone-locks"
                ],
                "description": "Delete a os zone lock.",
                "operationId": "DeleteOSZoneLock",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "lock_uuid",
                        "description": "os zone lock uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/os-zone-locks/{lock_uuid}:refresh": {
            "post": {
                "tags": [
                    "os-zone-locks"
                ],
                "description": "Refresh a os zone lock.",
                "operationId": "RefreshOSZoneLock",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "lock_uuid",
                        "description": "os zone lock uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSZoneLockResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-zone-pairs/": {
            "get": {
                "tags": [
                    "os-zone-pairs"
                ],
                "description": "list os zone pairs",
                "operationId": "ListOSZonePairs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "min_clock_diff_abs",
                        "description": "min clock diff absolute value for zone pairs",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSZonePairsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-zone-periods/": {
            "get": {
                "tags": [
                    "os-zone-periods"
                ],
                "description": "List os zone periods.",
                "operationId": "ListOSZonePeriods",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSZonePeriodsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/os-zone-periods/{period_uuid}": {
            "get": {
                "tags": [
                    "os-zone-periods"
                ],
                "description": "Get a os zone period.",
                "operationId": "GetOSZonePeriod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "period_uuid",
                        "description": "os zone period uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSZonePeriodResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-zone-translogs/": {
            "get": {
                "tags": [
                    "os-zone-translogs"
                ],
                "description": "List os zone translogs",
                "operationId": "ListOSZoneTranslogs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "epoch_uuid",
                        "description": "paging param",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSZoneTranslogsResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-zone-translogs/{translog_uuid}": {
            "get": {
                "tags": [
                    "os-zone-translogs"
                ],
                "description": "Get a os zone translog",
                "operationId": "GetOSZoneTranslog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "translog_uuid",
                        "description": "translog uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OSZoneTranslogResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-zones/": {
            "get": {
                "tags": [
                    "os-zones"
                ],
                "description": "List object storage zones",
                "operationId": "ListObjectStorageZones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "local",
                        "description": "local or non-local zones",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "master",
                        "description": "master or non-master zones",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "name of zone",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageZonesRecordResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-zones"
                ],
                "description": "Create a object storage zone",
                "operationId": "CreateObjectStorageZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "zone info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageZoneCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageZoneResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/os-zones/{zone_uuid}": {
            "get": {
                "tags": [
                    "os-zones"
                ],
                "description": "Get object storage zone",
                "operationId": "GetObjectStorageZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "zone_uuid",
                        "description": "object storage zone uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageZoneRecordResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "os-zones"
                ],
                "description": "update os zone pairs",
                "operationId": "UpdateOSZonesClockDiff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "zone_uuid",
                        "description": "os zone uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "zone pairs info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OSZonePairsUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageZoneResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "os-zones"
                ],
                "description": "Delete a object storage zone",
                "operationId": "DeleteObjectStorageZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "zone_uuid",
                        "description": "os zone uuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "delete os zone forcefully or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageZoneResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/os-zones/{zone_uuid}/samples": {
            "get": {
                "tags": [
                    "os-zones"
                ],
                "description": "get an object storage zone's Samples",
                "operationId": "GetObjectStorageZoneSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "zone_uuid",
                        "description": "object storage zone uuid",
                        "required": true,
                        "type": "string",
                        "default": "true"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObjectStorageZoneSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osd-groups/": {
            "get": {
                "tags": [
                    "osd-groups"
                ],
                "description": "List osd groups",
                "operationId": "ListOsdGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OsdGroupsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osd-groups/{group_id}": {
            "get": {
                "tags": [
                    "osd-groups"
                ],
                "description": "Get osd group",
                "operationId": "GetOsdGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "osd group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OsdGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osd-groups/{group_id}/samples": {
            "get": {
                "tags": [
                    "osd-groups"
                ],
                "description": "get a osd group's samples",
                "operationId": "GetOsdGroupSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "osd group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OsdGroupSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osd-groups/{group_id}:add-osds": {
            "post": {
                "tags": [
                    "osd-groups"
                ],
                "description": "Add osds to osd grouop",
                "operationId": "AddOsdsToOsdGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "osd group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "osd ids",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OsdGroupOsdsUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OsdGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osd-groups/{group_id}:disable-device-type-check": {
            "post": {
                "tags": [
                    "osd-groups"
                ],
                "description": "Disable device type check when add osd",
                "operationId": "DisableDeviceTypeCheck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "osd group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OsdGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osd-groups/{group_id}:enable-device-type-check": {
            "post": {
                "tags": [
                    "osd-groups"
                ],
                "description": "Enable device type check when add osd",
                "operationId": "EnableDeviceTypeCheck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "osd group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OsdGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osd-groups/{group_id}:remove-osds": {
            "post": {
                "tags": [
                    "osd-groups"
                ],
                "description": "Remove multiple osds from a osd group",
                "operationId": "RemoveOsdsFromOsdGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "osd group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "remove osd ids",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OsdGroupOsdsUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OsdGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osd-groups/{group_id}:reweight": {
            "post": {
                "tags": [
                    "osd-groups"
                ],
                "description": "Reweight pools of osd group",
                "operationId": "ReweightOsdGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "osd group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OsdGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osd-groups/{group_id}:set-osd-full-ratio": {
            "post": {
                "tags": [
                    "osd-groups"
                ],
                "description": "Set osd full ratio of osd group",
                "operationId": "SetOsdFullRatio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "osd group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "osds full ratio",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SetOsdFullRatioReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OsdGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osd-groups/{group_id}:set-qos": {
            "post": {
                "tags": [
                    "osd-groups"
                ],
                "description": "Set osd group's qos",
                "operationId": "SetOsdGroupQos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "osd group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "qos info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OsdGroupSetQosReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OsdGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osds/": {
            "get": {
                "tags": [
                    "osds"
                ],
                "description": "List all osds in the cluster",
                "operationId": "ListOsds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "host_id",
                        "description": "host id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pool_id",
                        "description": "pool id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "bind_pool_id",
                        "description": "bind pool id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "osd_group_id",
                        "description": "osd group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "osd type: HDD, SSD, Hybrid",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "description": "osd role: index or data",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "status_class",
                        "description": "osd status class: active, warning, error, offline, doing",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "with_compound",
                        "description": "with compound osd",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "with_hybrid",
                        "description": "with hybrid osd",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "cache_disk_id",
                        "description": "cache disk id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OsdsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "osds"
                ],
                "description": "Create osd service on specific disk",
                "operationId": "CreateOsd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "osd info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OsdCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OsdResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osds/overview": {
            "get": {
                "tags": [
                    "osds"
                ],
                "description": "Get osd overview in the cluster",
                "operationId": "GetOsdsOverview",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OsdOverviewResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osds/{osd_id}": {
            "get": {
                "tags": [
                    "osds"
                ],
                "description": "get an osd",
                "operationId": "GetOsd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osd_id",
                        "description": "osd id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OsdResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "osds"
                ],
                "description": "remove an osd from cluster",
                "operationId": "DeleteOsd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osd_id",
                        "description": "osd id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OsdResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osds/{osd_id}/chunks": {
            "get": {
                "tags": [
                    "osds"
                ],
                "description": "get chunks of and osd",
                "operationId": "GetChunks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osd_id",
                        "description": "The id of the osd",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ChunksResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osds/{osd_id}/predictions": {
            "get": {
                "tags": [
                    "osds"
                ],
                "description": "get a osd's prediction",
                "operationId": "GetOsdPredictions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osd_id",
                        "description": "osd id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OsdPredictionsResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/osds/{osd_id}/samples": {
            "get": {
                "tags": [
                    "osds"
                ],
                "description": "get a osd's samples",
                "operationId": "GetOsdSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osd_id",
                        "description": "osd id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OsdSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osds/{osd_id}:activate": {
            "post": {
                "tags": [
                    "osds"
                ],
                "description": "Try to activate osd",
                "operationId": "ActivateOsd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osd_id",
                        "description": "osd id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OsdResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osds/{osd_id}:maintain": {
            "post": {
                "tags": [
                    "osds"
                ],
                "description": "Put osd in maintained status",
                "operationId": "MaintainOsd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osd_id",
                        "description": "osd id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OsdResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osds/{osd_id}:rebuild": {
            "post": {
                "tags": [
                    "osds"
                ],
                "description": "rebuild an osd from cluster pool",
                "operationId": "RebuildOsd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osd_id",
                        "description": "osd id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "osd info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OsdRebuildReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OsdResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osds/{osd_id}:switch-role": {
            "post": {
                "tags": [
                    "osds"
                ],
                "description": "Switch osd role to compound",
                "operationId": "SwitchOsdRole",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osd_id",
                        "description": "osd id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OsdResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OsdResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osds/{osd_id}:unmaintain": {
            "post": {
                "tags": [
                    "osds"
                ],
                "description": "Put osd out of maintained status",
                "operationId": "UnmaintainOsd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osd_id",
                        "description": "osd id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OsdResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osds/{osd_id}:unset-isolation": {
            "post": {
                "tags": [
                    "osds"
                ],
                "description": "Unset osd in isolation status",
                "operationId": "UnsetOsdIsolation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osd_id",
                        "description": "osd id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OsdResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osds/{osd_id}:update-numa-node": {
            "post": {
                "tags": [
                    "osds"
                ],
                "description": "Update osd numa node",
                "operationId": "UpdateOsdNumaNode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osd_id",
                        "description": "osd id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "osd numa node",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OsdUpdateNumaNodeReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OsdResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/osds/{osd_id}:update-osp-partition-type": {
            "post": {
                "tags": [
                    "osds"
                ],
                "description": "Update osp partition type for osd",
                "operationId": "UpdateOsdOspPartitionType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osd_id",
                        "description": "osd id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "osp partition type",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateOspPartitionTypeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OsdResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osp-gateways/": {
            "get": {
                "tags": [
                    "osp-gateways"
                ],
                "description": "List osp gateways",
                "operationId": "ListOspGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "osp_zone_id",
                        "description": "osp zone id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "gateway_name",
                        "description": "gateway name",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OspGatewaysResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "osp-gateways"
                ],
                "description": "Create osp gateway",
                "operationId": "CreateOspGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateway info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OspGatewayCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OspGatewayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osp-gateways/:restart": {
            "post": {
                "tags": [
                    "osp-gateways"
                ],
                "description": "Restart osp gateways",
                "operationId": "RestartOspGateways",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osp-gateways/osp_zone_stats": {
            "get": {
                "tags": [
                    "osp-gateways"
                ],
                "description": "calculate osp gateways stat by zone",
                "operationId": "GetOspGatewaysStatSumByZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "osp_zone_id",
                        "description": "osp zone id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OspZoneStatResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osp-gateways/{osp_gateway_id}": {
            "get": {
                "tags": [
                    "osp-gateways"
                ],
                "description": "Get osp gateway",
                "operationId": "GetOspGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osp_gateway_id",
                        "description": "osp gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OspGatewayResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "osp-gateways"
                ],
                "description": "Delete osp gateway or gateways",
                "operationId": "DeleteOspGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osp_gateway_id",
                        "description": "osp gateway id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OspGatewayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osp-gateways/{osp_gateway_id}/samples": {
            "get": {
                "tags": [
                    "osp-gateways"
                ],
                "description": "Get osp gateway's samples",
                "operationId": "GetOspGatewaySamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osp_gateway_id",
                        "description": "osp gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OspGatewaySamplesResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/osp-gateways/{osp_gateway_id}:restart": {
            "post": {
                "tags": [
                    "osp-gateways"
                ],
                "description": "Restart osp gateway",
                "operationId": "RestartOspGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osp_gateway_id",
                        "description": "osp gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OspGatewayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osp-gateways/{osp_gateway_id}:start": {
            "post": {
                "tags": [
                    "osp-gateways"
                ],
                "description": "Start osp gateway",
                "operationId": "StartOspGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osp_gateway_id",
                        "description": "osp gateway id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OspGatewayResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OspGatewayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/osp-gateways/{osp_gateway_id}:stop": {
            "post": {
                "tags": [
                    "osp-gateways"
                ],
                "description": "Stop osp gateway or gateways",
                "operationId": "StopOspGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "osp_gateway_id",
                        "description": "osp gateway id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OspGatewayResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OspGatewayResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osp-metadata-clusters/": {
            "get": {
                "tags": [
                    "osp-metadata-clusters"
                ],
                "description": "Lists osp metadata clusters",
                "operationId": "ListOspMetadataClusters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "The id of osp metadata cluster's cluster",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "object_storage_id",
                        "description": "The id of osp metadata cluster's object storage",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OspMetadataClustersResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "osp-metadata-clusters"
                ],
                "description": "Create new osp metadata cluster",
                "operationId": "CreateOspMetadataCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "osp metadata cluster info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OspMetadataClusterCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OspMetadataClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osp-metadata-clusters/{id}": {
            "get": {
                "tags": [
                    "osp-metadata-clusters"
                ],
                "description": "Returns info a osp metadata cluster",
                "operationId": "GetOspMetadataCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "osp metadata cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OspMetadataClusterResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "osp-metadata-clusters"
                ],
                "description": "Delete osp metadata cluster",
                "operationId": "DeleteOspMetadataCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "osp metadata cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OspMetadataClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "osp-metadata-clusters"
                ],
                "description": "Update osp metadata cluster",
                "operationId": "UpdateOspMetadataCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "osp metadata cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "osp metadata cluster info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OspMetadataClusterUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OspMetadataClusterResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/OspMetadataClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osp-metadata-clusters/{id}/samples": {
            "get": {
                "tags": [
                    "osp-metadata-clusters"
                ],
                "description": "Get osp metadata cluster's samples",
                "operationId": "GetOspMetadataClusterSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "osp metadata cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OspMetadataClusterSamplesResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osp-metadata-servers/": {
            "get": {
                "tags": [
                    "osp-metadata-servers"
                ],
                "description": "Lists osp metadata servers",
                "operationId": "ListOspMetadataServers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "The id of osp metadata server's cluster",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "osp_metadata_cluster_id",
                        "description": "The id of osp metadata server's metadata cluster",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OspMetadataServersResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/osp-metadata-servers/{id}": {
            "get": {
                "tags": [
                    "osp-metadata-servers"
                ],
                "description": "Returns info of a osp metadata server",
                "operationId": "GetOspMetadataServer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "osp metadata server id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OspMetadataServerResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/osp-metadata-servers/{id}/samples": {
            "get": {
                "tags": [
                    "osp-metadata-servers"
                ],
                "description": "Get osp metadata server's samples",
                "operationId": "GetOspMetadataServerSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "osp metadata server id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OspMetadataServerSamplesResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/partitions/": {
            "get": {
                "tags": [
                    "partitions"
                ],
                "description": "List partitions",
                "operationId": "ListPartitions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "host_id",
                        "description": "host id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "partition type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "disk_id",
                        "description": "disk id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PartitionsResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/partitions/{partition_id}": {
            "get": {
                "tags": [
                    "partitions"
                ],
                "description": "Get a partition info",
                "operationId": "GetPartition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "partition_id",
                        "description": "partition id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PartitionResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/partitions/{partition_id}:update-osp-partition-type": {
            "post": {
                "tags": [
                    "partitions"
                ],
                "description": "Update partition type for osp partition",
                "operationId": "UpdatePartitionOspPartitionType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "partition_id",
                        "description": "partition id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "osp partition type",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateOspPartitionTypeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OsdResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/placement-nodes/": {
            "get": {
                "tags": [
                    "placement-nodes"
                ],
                "description": "List placement nodes",
                "operationId": "ListPlacementNodes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "filter placement nodes by type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "parent_id",
                        "description": "filter placement nodes by parent",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PlacementNodesResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "placement-nodes"
                ],
                "description": "Create placement node",
                "operationId": "CreatePlacementNode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "placement node info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PlacementNodeCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/PlacementNodeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/placement-nodes/:topology-from-osd": {
            "post": {
                "tags": [
                    "placement-nodes"
                ],
                "description": "Get topology from osds",
                "operationId": "GetTopologyFromOsds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "osds",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TopologyFromOsdReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PlacementNodeTopologyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/placement-nodes/{placement_node_id}": {
            "get": {
                "tags": [
                    "placement-nodes"
                ],
                "description": "Get placement node",
                "operationId": "GetPlacementNode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "placement_node_id",
                        "description": "placement node id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PlacementNodeResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "placement-nodes"
                ],
                "description": "delete placement node",
                "operationId": "DeletePlacementNode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "placement_node_id",
                        "description": "placement node id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "placement-nodes"
                ],
                "description": "update placement node",
                "operationId": "UpdatePlacementNode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "placement_node_id",
                        "description": "the placement node id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "the placement node info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PlacementNodeUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PlacementNodeResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/placement-nodes/{placement_node_id}/topology": {
            "get": {
                "tags": [
                    "placement-nodes"
                ],
                "description": "Get subtree topology of placement node",
                "operationId": "GetPlacementNodeTopology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "placement_node_id",
                        "description": "placement node id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "osd_type",
                        "description": "osd type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "osd_role",
                        "description": "osd role",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "with_compound",
                        "description": "with compound osd",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "with_hybrid",
                        "description": "with hybrid osd",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PlacementNodeTopologyResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/": {
            "get": {
                "tags": [
                    "pools"
                ],
                "description": "List pools",
                "operationId": "ListPools",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "all",
                        "description": "show all pools",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "protection_domain_id",
                        "description": "protection domain id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "compound_osd_only",
                        "description": "filter pool with only compound osds",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "osd_group_id",
                        "description": "osd group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "pool_type",
                        "description": "filter pool by type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pool_role",
                        "description": "filter pool by role",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pool_mode",
                        "description": "filter pool by pool_mode",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "stretched",
                        "description": "filter stretched pool",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "with_compound",
                        "description": "with compound pool",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "is_cache",
                        "description": "list cache pool",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "os_policy_id",
                        "description": "filter data pool by object storage policy id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "storage_class_id",
                        "description": "filter data pool by os storage class id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "storage_class_pool_type",
                        "description": "storage class pool type(active inactive) to query",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "osp_data_backend_id",
                        "description": "osp data backend id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "osp_cluster_id",
                        "description": "osp cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "Create pool",
                "operationId": "CreatePool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "the pool info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PoolCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/:add-pools-to-osp-data-backend": {
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "Adds pools to osp data backend",
                "operationId": "AddPoolsToOspDataBackend",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "pool info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OspDataBackendPoolsOperateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/TaskIDResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/:calc-capacity": {
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "calculate pool capacity",
                "operationId": "CalcCapacity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "pool info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PoolCapacityReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolCapacityResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/:check-full": {
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "checks if pools are full",
                "operationId": "CheckFull",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "pool ids",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PoolFullCheckReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolFullCheckResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/pools/:remove-pools-from-osp-data-backend": {
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "Remove pools from osp data backend",
                "operationId": "RemovePoolsFromOspDataBackend",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "pool info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OspDataBackendPoolsOperateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/TaskIDResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/{pool_id}": {
            "get": {
                "tags": [
                    "pools"
                ],
                "description": "get pool",
                "operationId": "GetPool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "pools"
                ],
                "description": "Delete pool",
                "operationId": "DeletePool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "pools"
                ],
                "description": "update pool info",
                "operationId": "UpdatePool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "pool info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PoolUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/pools/{pool_id}/osds": {
            "put": {
                "tags": [
                    "pools"
                ],
                "description": "Add osds to pool",
                "operationId": "AddOsdsToPool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "osd infos",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OsdsAddReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "pools"
                ],
                "description": "Remove multiple osds from a pool",
                "operationId": "RemoveOsdsFromPool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "osd infos",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OsdsRemoveReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/{pool_id}/predictions": {
            "get": {
                "tags": [
                    "pools"
                ],
                "description": "get a pool's prediction",
                "operationId": "GetPoolPredictions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolPredictionsResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/{pool_id}/samples": {
            "get": {
                "tags": [
                    "pools"
                ],
                "description": "get pool's samples",
                "operationId": "GetPoolSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/{pool_id}/topology": {
            "get": {
                "tags": [
                    "pools"
                ],
                "description": "get pool topology",
                "operationId": "GetPoolTopology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolTopologyResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/{pool_id}:disable-device-type-check": {
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "Disable device type check when add osd",
                "operationId": "DisablePoolDeviceTypeCheck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/{pool_id}:disable-numa": {
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "Disable pool numa",
                "operationId": "DisablePoolNuma",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/{pool_id}:enable-device-type-check": {
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "Enable device type check when add osd",
                "operationId": "EnablePoolDeviceTypeCheck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/{pool_id}:enable-numa": {
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "Enable pool numa",
                "operationId": "EnablePoolNuma",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/{pool_id}:initialize": {
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "initialize an empty pool",
                "operationId": "InitializeEmptyPool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "the pool info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmptyPoolInitializeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/pools/{pool_id}:reweight": {
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "Reweight a pool",
                "operationId": "ReweightPool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/{pool_id}:switch-role": {
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "Switch pool role to compound",
                "operationId": "SwitchPoolRole",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/pools/{pool_id}:update-ec-crush-rule": {
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "update crush rule with EC pool",
                "operationId": "UpdateECPoolCrushRule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "crush rule info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ECPoolUpdateCrushRuleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PoolResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/pools/{pool_id}:update-gc-policy-plan": {
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "update pool gc policy plan",
                "operationId": "UpdatePoolGCPolicyPlan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "pool_id",
                        "description": "pool id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "pool gc policy plan",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PoolGCPolicyPlan"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/protection-domains/": {
            "get": {
                "tags": [
                    "protection-domains"
                ],
                "description": "List protection domains",
                "operationId": "ListProtectionDomains",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ProtectionDomainRecordsResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/protection-domains/{protection_domain_id}": {
            "get": {
                "tags": [
                    "protection-domains"
                ],
                "description": "get protection domain",
                "operationId": "GetProtectionDomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "protection_domain_id",
                        "description": "protection domain id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ProtectionDomainRecordResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/rbd-clients/": {
            "get": {
                "tags": [
                    "rbd-clients"
                ],
                "description": "List rbd clients by filter",
                "operationId": "ListRBDClients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "filter by rbdc type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RBDClientsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "rbd-clients"
                ],
                "description": "check env and install packages",
                "operationId": "CreateRBDC",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "rbdc info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RBDClientCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/RBDClientResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/rbd-clients/:validate-host": {
            "post": {
                "tags": [
                    "rbd-clients"
                ],
                "description": "validate rbd client host",
                "operationId": "ValidateRBDClientHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "validate rbdc info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RBDClientValidateHostReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RBDClientValidateHostResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/rbd-clients/{rbdc_id}": {
            "get": {
                "tags": [
                    "rbd-clients"
                ],
                "description": "get a rbd client info",
                "operationId": "GetRBDClient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "rbdc_id",
                        "description": "the rbd client id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RBDClientResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "rbd-clients"
                ],
                "description": "delete rbdc",
                "operationId": "DeleteRBDClient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "rbdc_id",
                        "description": "rbdc id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "skip_uninstall",
                        "description": "skip uninstallation for managed rbdc",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/RBDClientResp"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "rbd-clients"
                ],
                "description": "update rbd client info",
                "operationId": "UpdateRBDClient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "rbdc_id",
                        "description": "rbdc id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "rbdc info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RBDClientUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RBDClientResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/regions/": {
            "get": {
                "tags": [
                    "regions"
                ],
                "description": "List regions",
                "operationId": "ListRegions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RegionsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "regions"
                ],
                "description": "Add remote region",
                "operationId": "AddRemoteRegion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "remote region info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegionAccessInfoReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RegionResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/regions/:add-access-info": {
            "post": {
                "tags": [
                    "regions"
                ],
                "description": "Add remote region",
                "operationId": "SetAccessInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RegionResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/regions/:join": {
            "post": {
                "tags": [
                    "regions"
                ],
                "description": "Add remote region",
                "operationId": "JoinRemoteRegion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "remote region info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegionJoinReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RegionResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/regions/:local": {
            "get": {
                "tags": [
                    "regions"
                ],
                "description": "Get local region",
                "operationId": "GetLocalRegion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RegionResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "regions"
                ],
                "description": "update local region info",
                "operationId": "UpdateRegion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "region info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegionUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RegionResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/regions/:remote": {
            "patch": {
                "tags": [
                    "regions"
                ],
                "description": "update remote region info",
                "operationId": "UpdateRemoteRegion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "region info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegionUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RegionResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/regions/{region_id}": {
            "get": {
                "tags": [
                    "regions"
                ],
                "description": "Get region",
                "operationId": "GetRegion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "region_id",
                        "description": "region id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RegionResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/regions/{region_id}/stats-usage-prediction": {
            "get": {
                "tags": [
                    "regions"
                ],
                "description": "Get prediction of stats space usage",
                "operationId": "GetRegionStatsUsagePrediction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "region_id",
                        "description": "region id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RegionStatsPredictionResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/remote-clusters/": {
            "get": {
                "tags": [
                    "remote-clusters"
                ],
                "description": "List remote clusters",
                "operationId": "ListRemoteClusters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fs_id",
                        "description": "fsid of cluster",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RemoteClustersResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "remote-clusters"
                ],
                "description": "Create a remote cluster",
                "operationId": "CreateRemoteCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "remote cluster info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RemoteClusterCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RemoteClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/remote-clusters/{cluster_id}": {
            "get": {
                "tags": [
                    "remote-clusters"
                ],
                "description": "Get remote cluster",
                "operationId": "GetRemoteCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster_id",
                        "description": "remote cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RemoteClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "remote-clusters"
                ],
                "description": "Delete a remote cluster",
                "operationId": "DeleteRemoteCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster_id",
                        "description": "remote cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/RemoteClusterResp"
                        }
                    },
                    "204": {
                        "description": "NoContent"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "remote-clusters"
                ],
                "description": "Update a remote cluster",
                "operationId": "UpdateRemoteCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster_id",
                        "description": "remote cluster id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "remote cluster info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RemoteClusterUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RemoteClusterResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/resource-used-relations/related-resources": {
            "get": {
                "tags": [
                    "resource-used-relations"
                ],
                "description": "Get resource related resources info",
                "operationId": "GetResourceRelatedResources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "resource",
                        "description": "resource type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "resource ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResourceRelatedResourcesResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/role-mappings/": {
            "get": {
                "tags": [
                    "role-mappings"
                ],
                "description": "List role mappings",
                "operationId": "ListRoleMappings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "identity_platform_id",
                        "description": "identity platform id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RoleMappingsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "role-mappings"
                ],
                "description": "Create role mapping",
                "operationId": "CreateRoleMapping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "role mapping info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RoleMappingCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/RoleMappingResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/role-mappings/{role_mapping_id}": {
            "get": {
                "tags": [
                    "role-mappings"
                ],
                "description": "Get a role mapping",
                "operationId": "GetRoleMapping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_mapping_id",
                        "description": "role mapping id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RoleMappingResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "role-mappings"
                ],
                "description": "Delete role mapping",
                "operationId": "DeleteRoleMapping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_mapping_id",
                        "description": "role mapping id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "role-mappings"
                ],
                "description": "Update a role mapping",
                "operationId": "UpdateRoleMapping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_mapping_id",
                        "description": "role mapping id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "role mapping info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RoleMappingUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RoleMappingResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/s3-load-balancer-groups/": {
            "get": {
                "tags": [
                    "s3-load-balancer-groups"
                ],
                "description": "List s3 load balancer groups",
                "operationId": "ListS3LoadBalancerGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "osp_zone_id",
                        "description": "osp zone id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerGroupsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "s3-load-balancer-groups"
                ],
                "description": "Create a s3 load balancer group",
                "operationId": "CreateS3LoadBalancerGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "s3 load balancer group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerGroupCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/s3-load-balancer-groups/register-service": {
            "post": {
                "tags": [
                    "s3-load-balancer-groups"
                ],
                "description": "Register s3 load balancer service",
                "operationId": "RegisterS3LoadBalancerService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "register s3 load balancer service info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerRegisterServiceReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerServiceResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/s3-load-balancer-groups/remove-service": {
            "delete": {
                "tags": [
                    "s3-load-balancer-groups"
                ],
                "description": "Remove s3 load balancer service",
                "operationId": "RemoveS3LoadBalancerService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "remove s3 load balancer service info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerRemoveServiceReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerServiceResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/s3-load-balancer-groups/{group_id}": {
            "get": {
                "tags": [
                    "s3-load-balancer-groups"
                ],
                "description": "Get s3 load balancer group",
                "operationId": "GetS3LoadBalancerGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "s3 load balancer group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "s3-load-balancer-groups"
                ],
                "description": "Delete s3 load balancer group",
                "operationId": "DeleteS3LoadBalancerGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "s3 load balancer group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "forcedly delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "s3-load-balancer-groups"
                ],
                "description": "Update a s3 load balancer group",
                "operationId": "UpdateS3LoadBalancerGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "s3 load balancer group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "s3 load balancer group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerGroupUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/s3-load-balancer-groups/{group_id}/s3-load-balancers": {
            "put": {
                "tags": [
                    "s3-load-balancer-groups"
                ],
                "description": "add load balancers to group",
                "operationId": "AddS3LoadBalancersToGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "load balancer ids to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancersAddReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "s3-load-balancer-groups"
                ],
                "description": "remove load balancers from group",
                "operationId": "RemoveS3LoadBalancersFromGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "forcedly remove or not",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "load balancer ids to remove",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancersRemoveReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/s3-load-balancer-groups/{group_id}:redeploy": {
            "post": {
                "tags": [
                    "s3-load-balancer-groups"
                ],
                "description": "Redeploy a s3 load balancer group",
                "operationId": "RedeployS3LoadBalancerGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "description": "s3 load balancer group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "reload_keepalived",
                        "description": "reload keepalived",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/s3-load-balancers/": {
            "get": {
                "tags": [
                    "s3-load-balancers"
                ],
                "description": "List s3 load balancers",
                "operationId": "ListS3LoadBalancers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "group_id",
                        "description": "s3 load balancer group id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "osp_zone_id",
                        "description": "osp zone id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "host_id",
                        "description": "host id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancersResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/s3-load-balancers/samples": {
            "get": {
                "tags": [
                    "s3-load-balancers"
                ],
                "description": "Get samples of multiple s3 load balancers",
                "operationId": "BatchGetS3LoadBalancerSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MultiS3LoadBalancersSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/s3-load-balancers/{load_balancer_id}": {
            "get": {
                "tags": [
                    "s3-load-balancers"
                ],
                "description": "Get s3 load balancer",
                "operationId": "GetS3LoadBalancer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "load_balancer_id",
                        "description": "s3 load balancer id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/s3-load-balancers/{s3_load_balancer_id}/samples": {
            "get": {
                "tags": [
                    "s3-load-balancers"
                ],
                "description": "get a s3 load balancer's samples",
                "operationId": "GetS3LoadBalancerSamples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "s3_load_balancer_id",
                        "description": "s3 load balancer id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "duration_begin",
                        "description": "duration begin timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "duration_end",
                        "description": "duration end timestamp",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "period",
                        "description": "samples period",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/S3LoadBalancerSamplesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/search-capabilities/": {
            "get": {
                "tags": [
                    "search-capabilities"
                ],
                "description": "search capabilites",
                "operationId": "SearchCapabilites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK {object} controllers.SearchCapabilitiesResp OK"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/search/{type}": {
            "get": {
                "tags": [
                    "search"
                ],
                "description": "search objects",
                "operationId": "Search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "description": "object type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SourcesResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/security-ssh/": {
            "get": {
                "tags": [
                    "security-ssh"
                ],
                "description": "List ssh configs",
                "operationId": "ListSSHConfigs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SecuritySSHConfigResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/security-ssh/validation": {
            "post": {
                "tags": [
                    "security-ssh"
                ],
                "description": "Create ssh validation",
                "operationId": "CreateSSHValidation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "ssh validation info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SecuritySSHValidationReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SecuritySSHValidationResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/security-ssh/{config_id}": {
            "patch": {
                "tags": [
                    "security-ssh"
                ],
                "description": "Update ssh validation",
                "operationId": "UpdateSSHConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "config_id",
                        "description": "security ssh config id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "ssh validation info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SecuritySSHConfigReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/SecuritySSHConfigResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/services/": {
            "get": {
                "tags": [
                    "services"
                ],
                "description": "List all services by host",
                "operationId": "ListServices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "host_id",
                        "description": "host id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "host_ids",
                        "description": "host comma seperate ids",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "service type",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ServicesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/services/{service_id}": {
            "get": {
                "tags": [
                    "services"
                ],
                "description": "get a service",
                "operationId": "GetService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "service_id",
                        "description": "service id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ServiceResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/settings/": {
            "get": {
                "tags": [
                    "settings"
                ],
                "description": "list settings",
                "operationId": "GetSettings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SettingResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/snmp/": {
            "get": {
                "tags": [
                    "snmp"
                ],
                "description": "get snmp info",
                "operationId": "GetSnmp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SnmpResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "snmp"
                ],
                "description": "set snmp",
                "operationId": "SetSnmp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "snmp info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnmpSetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SnmpResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/snmp/mib": {
            "get": {
                "tags": [
                    "snmp"
                ],
                "description": "download snmp mib file",
                "operationId": "DownloadMib",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/ssl-certificates/": {
            "get": {
                "tags": [
                    "ssl-certificates"
                ],
                "description": "List certificates",
                "operationId": "ListSSLCertificates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SSLCertificatesResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ssl-certificates"
                ],
                "description": "Create ssl certificate",
                "operationId": "CreateSSLCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "ssl certificate info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SSLCertificateCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SSLCertificateResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/ssl-certificates/{certificate_id}": {
            "get": {
                "tags": [
                    "ssl-certificates"
                ],
                "description": "Get certificates",
                "operationId": "GetSSLCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "certificate_id",
                        "description": "certificate id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SSLCertificateResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ssl-certificates"
                ],
                "description": "Delete ssl certificate",
                "operationId": "DeleteSSLCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "certificate_id",
                        "description": "certificate id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SSLCertificateResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "ssl-certificates"
                ],
                "description": "Update ssl certificate",
                "operationId": "UpdateSSLCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "certificate_id",
                        "description": "certificate id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "ssl certificate info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SSLCertificateUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SSLCertificateResp"
                        }
                    },
                    "202": {
                        "description": "Accept",
                        "schema": {
                            "$ref": "#/definitions/SSLCertificateResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/system-logs/": {
            "get": {
                "tags": [
                    "system-logs"
                ],
                "description": "List system logs",
                "operationId": "ListSystemLogs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "host_id",
                        "description": "The id of host system logs belong to",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "catalog",
                        "description": "The name of catalog system logs belong to",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SystemLogsResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/system-logs/archive": {
            "get": {
                "tags": [
                    "system-logs"
                ],
                "description": "download system logs",
                "operationId": "DownloadSystemLogs",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "binary",
                            "type": "string"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/targets/": {
            "get": {
                "tags": [
                    "targets"
                ],
                "description": "List all targets in the cluster",
                "operationId": "ListTargets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "host_id",
                        "description": "host id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "access_path_id",
                        "description": "access path id",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TargetsResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "targets"
                ],
                "description": "Create target",
                "operationId": "CreateTarget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "target",
                        "description": "target info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TargetCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/TargetResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/targets/{target_id}": {
            "delete": {
                "tags": [
                    "targets"
                ],
                "description": "delete target",
                "operationId": "DeleteTarget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "target_id",
                        "description": "target id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "force",
                        "description": "force delete or not",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/TargetResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/targets/{target_id}:add-gateway-ips": {
            "post": {
                "tags": [
                    "targets"
                ],
                "description": "Add gateway ips to target",
                "operationId": "AddTargetGatewayIPs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "target_id",
                        "description": "target id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "gateway ips info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TargetAddGatewayIPsReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/TargetResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/tasks/": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "description": "List tasks by fileter",
                "operationId": "ListTasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "status",
                        "description": "task status",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "task type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "host_id",
                        "description": "host running the task",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TasksResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/tasks/{task_id}": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "description": "get a task info",
                "operationId": "GetTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_id",
                        "description": "the task id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TaskResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/trash-resources/": {
            "get": {
                "tags": [
                    "trash-resources"
                ],
                "description": "List trash resources",
                "operationId": "ListTrashResources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cluster_id",
                        "description": "cluster id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "the type of trash resources",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TrashResourcesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/trash-resources/{trash_resource_id}": {
            "get": {
                "tags": [
                    "trash-resources"
                ],
                "description": "get a trash resource",
                "operationId": "GetTrashResource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "trash_resource_id",
                        "description": "trash resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TrashResourceResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "trash-resources"
                ],
                "description": "Delete trash resource",
                "operationId": "DeleteTrashResource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "trash_resource_id",
                        "description": "trash resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/TrashResourceResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/trash-resources/{trash_resource_id}:restore": {
            "post": {
                "tags": [
                    "trash-resources"
                ],
                "description": "Restore trash resource",
                "operationId": "RestoreTrashResource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "trash_resource_id",
                        "description": "trash resource id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/TrashResourceResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/trashes/": {
            "get": {
                "tags": [
                    "trashes"
                ],
                "description": "List trashes",
                "operationId": "ListTrashes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "the type of trash",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "query param of search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "sort param of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TrashesResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/trashes/{trash_id}": {
            "get": {
                "tags": [
                    "trashes"
                ],
                "description": "get a trash",
                "operationId": "GetTrash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "trash_id",
                        "description": "trash id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TrashResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "trashes"
                ],
                "description": "Update trash info",
                "operationId": "UpdateTrash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "trash_id",
                        "description": "trash id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "trash info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TrashUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TrashResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/TrashResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/trashes/{trash_id}:cleanup": {
            "post": {
                "tags": [
                    "trashes"
                ],
                "description": "Cleanup trash",
                "operationId": "CleanupTrash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "trash_id",
                        "description": "trash id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TrashResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/TrashResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/users/": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "List users",
                "operationId": "ListUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "user name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "description": "user email",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "all",
                        "description": "show all users",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UsersResp"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "users"
                ],
                "description": "create user",
                "operationId": "CreateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "user info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/UserResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/users/{user_id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "get a user",
                "operationId": "GetUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "description": "delete user",
                "operationId": "DeleteUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "users"
                ],
                "description": "update user info",
                "operationId": "UpdateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "user info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/users/{user_id}/password": {
            "put": {
                "tags": [
                    "users"
                ],
                "description": "change user password",
                "operationId": "ChangePassword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "update info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangePasswordReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/users/{user_id}/settings": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "update user info",
                "operationId": "GetUserSettings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserSettings"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "users"
                ],
                "description": "update user info",
                "operationId": "UpdateUserSettings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "user id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "user settings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserSettings"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/version/": {
            "get": {
                "tags": [
                    "version"
                ],
                "description": "show version",
                "operationId": "GetVersion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VersionResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/vip-groups/": {
            "get": {
                "tags": [
                    "vip-groups"
                ],
                "description": "List vip groups",
                "operationId": "ListVIPGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "resource_type",
                        "description": "resource type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resource_id",
                        "description": "resource id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VIPGroupResps"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "vip-groups"
                ],
                "description": "Create a vip group",
                "operationId": "CreateVIPGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vip_group",
                        "description": "vip group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VIPGroupCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VIPGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/vip-groups/{vip_group_id}": {
            "get": {
                "tags": [
                    "vip-groups"
                ],
                "description": "Get a vip group",
                "operationId": "GetVIPGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vip_group_id",
                        "description": "vip group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VIPGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "vip-groups"
                ],
                "description": "Delete a vip group",
                "operationId": "DeleteVIPGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vip_group_id",
                        "description": "vip group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VIPGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "vip-groups"
                ],
                "description": "Update a vip group",
                "operationId": "UpdateVIPGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vip_group_id",
                        "description": "vip group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "vip_group",
                        "description": "vip group info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VIPGroupUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VIPGroupResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/vip-groups/{vip_group_id}:redeploy": {
            "post": {
                "tags": [
                    "vip-groups"
                ],
                "description": "Redeploy a vip group",
                "operationId": "RedeployVIPGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vip_group_id",
                        "description": "vip group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VIPGroupResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/vip-instances/": {
            "get": {
                "tags": [
                    "vip-instances"
                ],
                "description": "List vip instances",
                "operationId": "ListVIPInstances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "vip_id",
                        "description": "vip id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VIPInstancesResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/vip-instances/{vip_instance_id}": {
            "get": {
                "tags": [
                    "vip-instances"
                ],
                "description": "Get a vip group",
                "operationId": "GetVIPInstance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vip_instance_id",
                        "description": "vip group id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VIPInstanceResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/vips/": {
            "get": {
                "tags": [
                    "vips"
                ],
                "description": "List vips",
                "operationId": "ListVIPs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "vip_group_id",
                        "description": "vip_group id",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VIPsResp"
                        }
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "vips"
                ],
                "description": "Create a vip",
                "operationId": "CreateVIP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vip",
                        "description": "vip info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VIPCreateReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VIPResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/vips/{vip_id}": {
            "get": {
                "tags": [
                    "vips"
                ],
                "description": "Get a vip",
                "operationId": "GetVIP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vip_id",
                        "description": "vip id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VIPResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "vips"
                ],
                "description": "Delete a vip",
                "operationId": "DeleteVIP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vip_id",
                        "description": "vip id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/VIPResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "vips"
                ],
                "description": "Update a vip",
                "operationId": "UpdateVIP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vip_id",
                        "description": "vip id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VIPResp"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/virtual-machines/": {
            "get": {
                "tags": [
                    "virtual-machines"
                ],
                "description": "List virtual machines",
                "operationId": "ListVirtualMachines",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VirtualMachinesResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/virtual-machines/{virtual_machine_id}": {
            "get": {
                "tags": [
                    "virtual-machines"
                ],
                "description": "Get virtual machine",
                "operationId": "GetVirtualMachine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "virtual_machine_id",
                        "description": "virtual machine id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VirtualMachineResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "virtual-machines"
                ],
                "description": "Update virtual machine",
                "operationId": "UpdateVirtualMachine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "virtual_machine_id",
                        "description": "virtual machine id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "cpu_num",
                        "description": "new cpu number",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VirtualMachineResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/vm-flavors/": {
            "get": {
                "tags": [
                    "vm-flavors"
                ],
                "description": "List vm flavors",
                "operationId": "ListVMFlavors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "paging param",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VMFlavorsResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInHeader": []
                    },
                    {
                        "tokenInQuery": []
                    }
                ]
            }
        },
        "/vm-flavors/{vm_flavor_id}": {
            "get": {
                "tags": [
                    "vm-flavors"
                ],
                "description": "Get vm flavor",
                "operationId": "GetVMFlavor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vm_flavor_id",
                        "description": "vm flavor id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VMFlavorResp"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        },
        "/volume-dp-block-backup-policy-mappings/": {
            "get": {
                "tags": [
                    "volume-dp-block-backup-policy-mappings"
                ],
                "description": "List volume dp block backup policy mapping",
                "operationId": "ListVolumeDpBlockBackupPolicyMappings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "block_volume_id",
                        "description": "show mappings of specific block volume",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "dp_block_backup_policy_id",
                        "description": "show mappings of specific block volume",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VolumeDpBlockBackupPolicyMappingsResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                },
                "security": [
                    {
                        "tokenInQuery": []
                    },
                    {
                        "tokenInHeader": []
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "tokenInHeader": {
            "type": "apiKey",
            "description": "auth by token",
            "name": "Xms-Auth-Token",
            "in": "header"
        },
        "tokenInQuery": {
            "type": "apiKey",
            "description": "auth by token",
            "name": "token",
            "in": "query"
        }
    },
    "tags": [
        {
            "name": "cluster",
            "description": "ClusterController API /cluster\n"
        },
        {
            "name": "clusters",
            "description": "ClustersController provides API for cluster\n"
        },
        {
            "name": "hosts",
            "description": "HostController Host Management\n"
        },
        {
            "name": "host-validators",
            "description": "HostValidatorController Host Validator Management\n"
        },
        {
            "name": "host-maintain-validators",
            "description": "HostMaintainValidatorController Host Validator Management\n"
        },
        {
            "name": "host-initializations",
            "description": "HostInitializationController provides API for host initialization\n"
        },
        {
            "name": "disks",
            "description": "DiskController Disk Management\n"
        },
        {
            "name": "network-interfaces",
            "description": "NetworkInterfaceController Network Interface Management\n"
        },
        {
            "name": "network-addresses",
            "description": "NetworkAddressController Network Address Management\n"
        },
        {
            "name": "network-diagnoses",
            "description": "NetworkDiagnosisController provides API for network diagnosis\n"
        },
        {
            "name": "network-diagnosis-items",
            "description": "NetworkDiagnosisItemController provides API for network diagnosis item\n"
        },
        {
            "name": "pools",
            "description": "PoolController Operations about Pools\n"
        },
        {
            "name": "chunks",
            "description": "ChunkController Chunk Management\n"
        },
        {
            "name": "osds",
            "description": "OsdController Osd Management\n"
        },
        {
            "name": "partitions",
            "description": "PartitionController API /partitions.\n"
        },
        {
            "name": "osd-groups",
            "description": "OsdGroupController API /osd-groups\n"
        },
        {
            "name": "block-volumes",
            "description": "BlockVolumeController Operations about Block\n+X:license:constraints=license.FunctionBlockStorage\n"
        },
        {
            "name": "block-snapshots",
            "description": "BlockSnapshotController Operations about Block Snapshot\n+X:license:constraints=license.FunctionBlockStorage\n"
        },
        {
            "name": "block-consistent-snapshots",
            "description": "BlockConsistentSnapshotController Operations about block consistent snapshot\n+X:license:constraints=license.FunctionBlockStorage\n"
        },
        {
            "name": "client-groups",
            "description": "ClientGroupController Operations about client group\n"
        },
        {
            "name": "client-codes",
            "description": "ClientCodeController Operations about client code\n"
        },
        {
            "name": "clients",
            "description": "ClientController API /clients\n"
        },
        {
            "name": "access-paths",
            "description": "AccessPathController Operations able access paths\n+X:license:constraints=license.FunctionBlockStorage\n"
        },
        {
            "name": "targets",
            "description": "TargetController Operations able targets\n"
        },
        {
            "name": "mapping-groups",
            "description": "MappingGroupController Operations able mapping groups\n"
        },
        {
            "name": "luns",
            "description": "LunController Operations on luns\n"
        },
        {
            "name": "client-lun-mappings",
            "description": "ClientLunMappingController API /client-lun-mappings\n"
        },
        {
            "name": "alerts",
            "description": "AlertController Operations about alert\n"
        },
        {
            "name": "alert-infos",
            "description": "AlertInfoController Operations about alert\n"
        },
        {
            "name": "alert-info-groups",
            "description": "AlertInfoGroupController Operations about alert info group\n"
        },
        {
            "name": "alert-info-root",
            "description": "AlertInfoRootController Operations about all alerts\n"
        },
        {
            "name": "alert-rules",
            "description": "AlertRuleController Operations about alert rule\n"
        },
        {
            "name": "alert-rule-groups",
            "description": "AlertRuleGroupController controls alert rule group\n"
        },
        {
            "name": "alert-groups",
            "description": "AlertGroupController Operations about alert group\n"
        },
        {
            "name": "licenses",
            "description": "LicenseController Operations about Install\n"
        },
        {
            "name": "protection-domains",
            "description": "ProtectionDomainController Protection Domain Management\n"
        },
        {
            "name": "placement-nodes",
            "description": "PlacementNodeController provides API for placement node\n"
        },
        {
            "name": "users",
            "description": "UserController Manage users\n"
        },
        {
            "name": "auth",
            "description": "AuthController Manage authentication and authorization\n"
        },
        {
            "name": "access-tokens",
            "description": "AccessTokenController Manage users\n"
        },
        {
            "name": "services",
            "description": "ServiceController Disk Management\n"
        },
        {
            "name": "snmp",
            "description": "SnmpController Operations able snmp\n"
        },
        {
            "name": "applications",
            "description": "ApplicationController provides API for application\n"
        },
        {
            "name": "action-logs",
            "description": "ActionLogController Operations about ActionLog\n"
        },
        {
            "name": "error-records",
            "description": "ErrorRecordController handles errors\n"
        },
        {
            "name": "event-logs",
            "description": "EventLogController Operations about EventLog\n"
        },
        {
            "name": "confs",
            "description": "ConfController Operations about Config\n"
        },
        {
            "name": "conf-types",
            "description": "ConfTypeController API /v1/conf-types\n"
        },
        {
            "name": "email-groups",
            "description": "EmailGroupController Operations about Email\n"
        },
        {
            "name": "version",
            "description": "VersionController Operations about Version\n"
        },
        {
            "name": "nfs-gateways",
            "description": "NFSGatewayController provides API for object storage nfs gateway\n+X:license:constraints=license.ProtocolOSNFS\n"
        },
        {
            "name": "nfs-gateway-bucket-maps",
            "description": "NFSGatewayBucketMapController provides API for object storage nfs gateway s3 bucket map\n+X:license:constraints=license.ProtocolOSNFS\n"
        },
        {
            "name": "os-users",
            "description": "ObjectStorageUserController provides API for object storage user\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-keys",
            "description": "ObjectStorageKeyController provides API for object storage key\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-policies",
            "description": "ObjectStoragePolicyController provides API for object storage policy\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-storage-classes",
            "description": "OSStorageClassController API /os-storage-classes.\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-external-storage-classes",
            "description": "OSExternalStorageClassController API /os-extertal-storage-classes.\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-buckets",
            "description": "ObjectStorageBucketController provides API for object storage bucket\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-bucket-loggings",
            "description": "OSBucketLoggingController API /os-bucket-loggings.\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-custom-labels",
            "description": "OSCustomLabelController provides API for object storage custom label\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-lifecycles",
            "description": "ObjectStorageLifecycleController provides API for object storage lifecycle\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-gateways",
            "description": "ObjectStorageGatewayController provides API for s3 gateway\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-zones",
            "description": "ObjectStorageZoneController API /os-zones\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-zone-periods",
            "description": "OSZonePeriodController API /os-zone-periods\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-zone-translogs",
            "description": "OSZoneTranslogController API /os-zone-translogs\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-zone-locks",
            "description": "OSZoneLockController API /os-zone-locks\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-remote-policies",
            "description": "OSRemotePolicyController API /os-remote-policies\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-replication-zones",
            "description": "OSReplicationZoneController API /os-replication-zones.\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-replication-paths",
            "description": "OSReplicationPathController API /os-replication-paths.\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-search-engines",
            "description": "OSSearchEngineController provides APIs for OS search engine\n+X:license:constraints=license.FunctionObjectStorage,license.FunctionOSObjectSearch\n"
        },
        {
            "name": "os-search-gateways",
            "description": "OSSearchGatewayController provides API for os search gateways\n+X:license:constraints=license.FunctionObjectStorage,license.FunctionOSObjectSearch\n"
        },
        {
            "name": "os-objects",
            "description": "OSObjectController Object Storage Object Management\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-zone-pairs",
            "description": "OSZonePairsController API /os-zone-pairs\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-samples",
            "description": "OSSampleController API /os-samples\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-origin-pull-rules",
            "description": "OSOriginPullRuleController API /os-origin-pull-rules.\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-builtin-blu-rays",
            "description": "OSBuiltinBluRayController API /os-builtin-blu-rays.\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "vm-flavors",
            "description": "VMFlavorController API /vm-flavors\n"
        },
        {
            "name": "virtual-machines",
            "description": "VirtualMachineController API /virtual-machines\n"
        },
        {
            "name": "search",
            "description": "SearchController defines search apis\n"
        },
        {
            "name": "search-capabilities",
            "description": "SearchCapabilityController defines search capability apis\n"
        },
        {
            "name": "system-logs",
            "description": "SystemLogController provides API for system logs\n"
        },
        {
            "name": "dp-gateways",
            "description": "DpGatewayController API /dp-gateways/\n+X:license:constraints=license.FunctionDataProtection\n"
        },
        {
            "name": "dp-block-snapshot-policies",
            "description": "DpBlockSnapshotPolicyController API /dp-block-snapshot-policies\n+X:license:constraints=license.FunctionBSTimedSnapshot,license.FunctionBlockStorage\n"
        },
        {
            "name": "dp-block-backup-policies",
            "description": "DpBlockBackupPolicyController API /dp-block-backup-policies\n+X:license:constraints=license.FunctionBSSnapshotBackup,license.FunctionBlockStorage\n"
        },
        {
            "name": "volume-dp-block-backup-policy-mappings",
            "description": "VolumeDpBlockBackupPolicyMappingController API /volume-dp-block-backup-policy-mappings\n+X:license:constraints=license.FunctionBSSnapshotBackup\n"
        },
        {
            "name": "dp-block-async-replication-policies",
            "description": "DpBlockAsyncReplicationPolicyController API /dp-block-async-replication-policies\n+X:license:constraints=license.FunctionBSVolumeAsyncReplication,license.FunctionBlockStorage\n"
        },
        {
            "name": "dp-block-async-replication-pairs",
            "description": "DpBlockAsyncReplicationPairController API /dp-block-async-replication-pairs\n+X:license:constraints=license.FunctionBSVolumeAsyncReplication,license.FunctionBlockStorage\n"
        },
        {
            "name": "dp-block-async-replication-jobs",
            "description": "DpBlockAsyncReplicationJobController API /dp-block-async-replication-jobs\n+X:license:constraints=license.FunctionBSVolumeAsyncReplication,license.FunctionBlockStorage\n"
        },
        {
            "name": "dp-volume-group-snapshot-replication-policies",
            "description": "DpVolumeGroupSnapshotReplicationPolicyController API /dp-volume-group-snapshot-replication-policies\n+X:license:constraints=license.FunctionBSConsistentGroupSnapshot\n"
        },
        {
            "name": "dp-volume-group-snapshot-replication-pairs",
            "description": "DpVolumeGroupSnapshotReplicationPairController API /dp-volume-group-snapshot-replication-pairs\n+X:license:constraints=license.FunctionBSConsistentGroupSnapshot\n"
        },
        {
            "name": "dp-volume-group-snapshot-replication-jobs",
            "description": "DpVolumeGroupSnapshotReplicationJobController API /dp-volume-group-snapshot-replication-jobs\n+X:license:constraints=license.FunctionBSConsistentGroupSnapshot\n"
        },
        {
            "name": "dp-block-replication-policies",
            "description": "DpBlockReplicationPolicyController API /dp-block-replication-policies\n+X:license:constraints=license.FunctionBSVolumeSyncReplication,license.FunctionBlockStorage\n"
        },
        {
            "name": "dp-block-snapshot-jobs",
            "description": "DpBlockSnapshotJobController API /dp-block-snapshot-jobs/\n+X:license:constraints=license.FunctionBSTimedSnapshot,license.FunctionBlockStorage\n"
        },
        {
            "name": "dp-block-backup-jobs",
            "description": "DpBlockBackupJobController API /dp-block-backup-jobs/\n+X:license:constraints=license.FunctionBSSnapshotBackup,license.FunctionBlockStorage\n"
        },
        {
            "name": "dp-block-snapshot-recovery-jobs",
            "description": "DpBlockSnapshotRecoveryJobController API /dp-block-snapshot-recovery-jobs\n+X:license:constraints=license.FunctionBSTimedSnapshot,license.FunctionBlockStorage\n"
        },
        {
            "name": "dp-fs-snapshot-policies",
            "description": "DpFSSnapshotPolicyController API /dp-fs-snapshot-policies\n+X:license:constraints=license.FunctionFileStorage,license.FunctionFSTimedSnapshot\n"
        },
        {
            "name": "dp-fs-snapshot-jobs",
            "description": "DpFSSnapshotJobController API /dp-fs-snapshot-jobs/\n+X:license:constraints=license.FunctionFileStorage,license.FunctionFSTimedSnapshot\n"
        },
        {
            "name": "dp-sites",
            "description": "DpSiteController API /dp-sites/\n+X:license:constraints=license.FunctionDataProtection\n"
        },
        {
            "name": "dp-dfs-snapshot-policies",
            "description": "DpDfsSnapshotPolicyController Operations about dp dfs snapshot policy\n+X:license:constraints=license.FunctionGlusterSnapshot,license.FunctionGlusterFileStorage,license.FunctionDataProtection\n"
        },
        {
            "name": "dp-dfs-snapshots",
            "description": "DpDfsSnapshotController Operations about dp dfs snapshot\n+X:license:constraints=license.FunctionGlusterSnapshot,license.FunctionGlusterFileStorage,license.FunctionDataProtection\n"
        },
        {
            "name": "dp-dfs-snapshot-jobs",
            "description": "DpDfsSnapshotJobController API /dp-dfs-snapshot-jobs/\n+X:license:constraints=license.FunctionGlusterSnapshot,license.FunctionGlusterFileStorage,license.FunctionDataProtection\n"
        },
        {
            "name": "host-info",
            "description": "HostInfoController Host Info Management\n"
        },
        {
            "name": "s3-load-balancer-groups",
            "description": "S3LoadBalancerGroupController API\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "s3-load-balancers",
            "description": "S3LoadBalancerController API\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "cloud-platforms",
            "description": "CloudPlatformController Cloud Platform Management\n+X:license:constraints=license.FunctionCloudAware\n"
        },
        {
            "name": "cloud-instances",
            "description": "CloudInstanceController Cloud Instance Management\n+X:license:constraints=license.FunctionCloudAware\n"
        },
        {
            "name": "cloud-volumes",
            "description": "CloudVolumeController Cloud Volume Management\n"
        },
        {
            "name": "cloud-volume-attachments",
            "description": "CloudVolumeAttachmentController Cloud Volume Attachment Management\n"
        },
        {
            "name": "fs-users",
            "description": "FSUserController provides API for file storage user\n+X:license:constraints=license.FunctionFileStorage|license.FunctionGlusterFileStorage|license.FunctionVMFileStorage\n"
        },
        {
            "name": "fs-folders",
            "description": "FSFolderController provides API for file storage folder\n+X:license:constraints=license.FunctionFileStorage\n"
        },
        {
            "name": "fs-quota-trees",
            "description": "FSQuotaTreeController provides API for file storage quota tree\n+X:license:constraints=license.FunctionFSQuota\n"
        },
        {
            "name": "fs-nfs-shares",
            "description": "FSNFSShareController provides API for fs nfs shares\n+X:license:constraints=license.ProtocolFSNFS,license.FunctionFileStorage\n"
        },
        {
            "name": "fs-nfs-share-acls",
            "description": "FSNFSShareACLController provides API for fs nfs shares acl\n+X:license:constraints=license.ProtocolFSNFS,license.FunctionFileStorage\n"
        },
        {
            "name": "fs-user-groups",
            "description": "FSUserGroupController provides APIs for file storage user group\n+X:license:constraints=license.FunctionFileStorage|license.FunctionGlusterFileStorage|license.FunctionVMFileStorage\n"
        },
        {
            "name": "fs-clients",
            "description": "FSClientController provides APIs for file storage client\n+X:license:constraints=license.FunctionFileStorage|license.FunctionGlusterFileStorage|license.FunctionVMFileStorage\n"
        },
        {
            "name": "fs-client-groups",
            "description": "FSClientGroupController provides APIs for file storage client group\n+X:license:constraints=license.FunctionFileStorage|license.FunctionGlusterFileStorage|license.FunctionVMFileStorage\n"
        },
        {
            "name": "fs-active-directories",
            "description": "FSActiveDirectoryController File Storage Active Directory Management\n+X:license:constraints=license.FunctionFileStorage|license.FunctionGlusterFileStorage|license.FunctionVMFileStorage\n"
        },
        {
            "name": "fs-gateway-groups",
            "description": "FSGatewayGroupController provides APIs for file storage gateway group\n+X:license:constraints=license.FunctionFileStorage\n"
        },
        {
            "name": "fs-gateways",
            "description": "FSGatewayController provides APIs for file storage gateway\n+X:license:constraints=license.FunctionFileStorage\n"
        },
        {
            "name": "fs-snapshots",
            "description": "FSSnapshotController provides APIs for file storage snapshot\n+X:license:constraints=license.FunctionFileStorage\n"
        },
        {
            "name": "fs-ldaps",
            "description": "FSLdapController File Storage LDAP Management\n+X:license:constraints=license.FunctionFileStorage|license.FunctionGlusterFileStorage|license.FunctionVMFileStorage\n"
        },
        {
            "name": "fs-smb-shares",
            "description": "FSSMBShareController provides API for fs smb share\n+X:license:constraints=license.FunctionFileStorage,license.ProtocolFSCIFS\n"
        },
        {
            "name": "fs-smb-share-acls",
            "description": "FSSMBShareACLController provides API for fs smb share acl\n+X:license:constraints=license.FunctionFileStorage,license.ProtocolFSCIFS\n"
        },
        {
            "name": "fs-ftp-shares",
            "description": "FSFTPShareController provides API for fs ftp share\n+X:license:constraints=license.ProtocolFSFTP,license.FunctionFileStorage\n"
        },
        {
            "name": "fs-ftp-share-acls",
            "description": "FSFTPShareACLController provides API for fs ftp share acl\n+X:license:constraints=license.ProtocolFSFTP,license.FunctionFileStorage\n"
        },
        {
            "name": "fs-smb-sessions",
            "description": "FSSMBSessionController provides API for fs SMB session\n+X:license:constraints=license.FunctionFileStorage,license.ProtocolFSCIFS\n"
        },
        {
            "name": "fs-nfs-connections",
            "description": "FSNFSConnectionController provides API for fs NFS connection\n+X:license:constraints=license.ProtocolFSNFS,license.FunctionFileStorage\n"
        },
        {
            "name": "fs-ftp-sessions",
            "description": "FSFTPSessionController provides API for fs FTP session\n+X:license:constraints=license.ProtocolFSFTP,license.FunctionFileStorage\n"
        },
        {
            "name": "fc-ports",
            "description": "FCPortController provides API for fc port\n+X:license:constraints=license.ProtocolFC\n"
        },
        {
            "name": "fc-port-client-codes",
            "description": "FCPortClientCodesController provides API for fc port client codes\n+X:license:constraints=license.ProtocolFC\n"
        },
        {
            "name": "crypto-keys",
            "description": "CryptoKeyController API /crypto-keys/\n"
        },
        {
            "name": "identity-platforms",
            "description": "IdentityPlatformController Identity Platform Management\n"
        },
        {
            "name": "identity-providers",
            "description": "IdentityProvidersController SSO Providers Management\n"
        },
        {
            "name": "role-mappings",
            "description": "RoleMappingController Role Mapping Management\n"
        },
        {
            "name": "ssl-certificates",
            "description": "SSLCertificateController API\n"
        },
        {
            "name": "remote-clusters",
            "description": "RemoteClusterController API /remote-clusters\n+X:license:constraints=license.FunctionDataProtection|license.FunctionOSMultiSites\n"
        },
        {
            "name": "emails",
            "description": "EmailController Operations about Email\n"
        },
        {
            "name": "block-volume-groups",
            "description": "VolumeGroupController Operations about volume group\n+X:license:constraints=license.FunctionBlockStorage\n"
        },
        {
            "name": "block-volume-group-snapshots",
            "description": "VolumeGroupSnapshotController Operations about volume group snapshot\n+X:license:constraints=license.FunctionBSConsistentGroupSnapshot\n"
        },
        {
            "name": "tasks",
            "description": "TaskController Task Management\n"
        },
        {
            "name": "host-enc-specs",
            "description": "HostEncSpecController API /host-enc-specs/\n"
        },
        {
            "name": "vip-groups",
            "description": "VIPGroupController API /vip-groups\n"
        },
        {
            "name": "vips",
            "description": "VIPController API /vips\n"
        },
        {
            "name": "vip-instances",
            "description": "VIPInstanceController API /vip-instances\n"
        },
        {
            "name": "trashes",
            "description": "TrashController Operations about Trash\n"
        },
        {
            "name": "trash-resources",
            "description": "TrashResourceController Operations about Trash\n"
        },
        {
            "name": "os-external-storage-platform-validators",
            "description": "OSExStoragePlatformValidatorController provides API for os external storage platform validator\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "os-external-storage-platform-types",
            "description": "OSExternalStoragePlatformTypeController API /os-external-storage-platform-types.\n"
        },
        {
            "name": "domain-user-validators",
            "description": "DomainUserValidatorController Domain User Validator Management\n+X:license:constraints=license.FunctionFailureDomain\n"
        },
        {
            "name": "domain-users",
            "description": "DomainUserController API /domain-user\n"
        },
        {
            "name": "domain-user-groups",
            "description": "DomainUserGroupController API /domain-user-groups\n"
        },
        {
            "name": "block-volume-migration-jobs",
            "description": "BlockVolumeMigrationJobController Operations about block volume migration job\n+X:license:constraints=license.FunctionBlockStorage\n"
        },
        {
            "name": "dfs-gateway-groups",
            "description": "DfsGatewayGroupController provides APIs for dfs gateway group\n+X:license:constraints=license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-gateways",
            "description": "DfsGatewayController provides APIs for dfs gateway\n+X:license:constraints=license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-gateway-network-addresses",
            "description": "DfsGatewayNetworkAddressController provides APIs for dfs gateway\n+X:license:constraints=license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-vips",
            "description": "DfsVIPController provides APIs for dfs vip\n+X:license:constraints=license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-rootfses",
            "description": "DfsRootfsController provides API for dfs rootfs\n+X:license:constraints=license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-tiers",
            "description": "DfsTierController provides API for dfs tier\n+X:license:constraints=license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-storage-policies",
            "description": "DfsPolicyController provides API for dfs Policy\n+X:license:constraints=license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-storage-classes",
            "description": "DfsStorageClassController provides API for dfs storage class\n+X:license:constraints=license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-directories",
            "description": "DfsDirectoryController provides API for dfs directory\n+X:license:constraints=license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-smb-shares",
            "description": "DfsSMBShareController provides API for dfs smb share\n+X:license:constraints=license.FunctionGlusterFileStorage,license.ProtocolFSCIFS\n"
        },
        {
            "name": "dfs-smb-share-acls",
            "description": "DfsSMBShareACLController provides API for dfs smb share acl\n+X:license:constraints=license.FunctionGlusterFileStorage,license.ProtocolFSCIFS\n"
        },
        {
            "name": "dfs-nfs-shares",
            "description": "DfsNFSShareController provides API for dfs nfs shares\n+X:license:constraints=license.FunctionGlusterFileStorage,license.ProtocolFSNFS\n"
        },
        {
            "name": "dfs-nfs-share-acls",
            "description": "DfsNFSShareACLController provides API for dfs nfs shares acl\n+X:license:constraints=license.FunctionGlusterFileStorage,license.ProtocolFSNFS\n"
        },
        {
            "name": "dfs-ftp-shares",
            "description": "DfsFTPShareController provides API for dfs ftp share\n+X:license:constraints=license.FunctionGlusterFileStorage,license.ProtocolFSFTP\n"
        },
        {
            "name": "dfs-ftp-share-acls",
            "description": "DfsFTPShareACLController provides API for dfs ftp share acl\n+X:license:constraints=license.FunctionGlusterFileStorage,license.ProtocolFSFTP\n"
        },
        {
            "name": "dfs-ftp-sessions",
            "description": "DfsFTPSessionController provides API for dfs FTP session\n+X:license:constraints=license.FunctionGlusterFileStorage,license.ProtocolFSFTP\n"
        },
        {
            "name": "dfs-smb-sessions",
            "description": "DfsSMBSessionController provides API for dfs SMB session\n+X:license:constraints=license.FunctionGlusterFileStorage,license.ProtocolFSCIFS\n"
        },
        {
            "name": "dfs-nfs-connections",
            "description": "DfsNFSConnectionController provides API for dfs NFS connection\n+X:license:constraints=license.FunctionGlusterFileStorage,license.ProtocolFSNFS\n"
        },
        {
            "name": "dfs-worms",
            "description": "DfsWormController Operations about dfs worm\n"
        },
        {
            "name": "dfs-trashes",
            "description": "DfsTrashController provides API for dfs trash\n"
        },
        {
            "name": "dfs-gateway-zones",
            "description": "DfsGatewayZoneController provides APIs for dfs gateway zone\n+X:license:constraints=license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-quotas",
            "description": "DfsQuotaController provides API for dfs quota\n+X:license:constraints=license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-qoses",
            "description": "DfsQosController provides API for dfs qos\n+X:license:constraints=license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-qos-policies",
            "description": "DfsQosPolicyController provides API for dfs qos policy\n+X:license:constraints=license.FunctionGlusterSnapshot,license.FunctionGlusterFileStorage,license.FunctionDataProtection\n"
        },
        {
            "name": "dfs-snapshots",
            "description": "DfsSnapshotController Operations about dfs snapshot\n+X:license:constraints=license.FunctionGlusterSnapshot,license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-files",
            "description": "DfsFileController provides API for dfs files\n+X:license:constraints=license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-s3-keys",
            "description": "DfsS3KeyController provides API for dfs s3 key\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "dfs-s3-buckets",
            "description": "DfsS3BucketController provides API for dfs s3 bucket\n+X:license:constraints=license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-s3-bucket-connections",
            "description": "DfsS3BucketConnectionController provides API for dfs s3 connection\n+X:license:constraints=license.license.FunctionGlusterFileStorage\n"
        },
        {
            "name": "dfs-hdfses",
            "description": "DfsHdfsController provides API for dfs hdfs\n"
        },
        {
            "name": "dfs-hdfs-acls",
            "description": "DfsHdfsACLController provides API for dfs hdfs acl\n"
        },
        {
            "name": "dfs-snap-changelist-tasks",
            "description": "DfsSnapChangelistTaskController Operations about dfs snap changelist task\n"
        },
        {
            "name": "dfs-audit-logs",
            "description": "DfsAuditLogController Operations about dfs audit log\n"
        },
        {
            "name": "dfs-path-performances",
            "description": "DfsPathPerformanceController provides API for dfs path performance\n"
        },
        {
            "name": "metadata-services",
            "description": "MetadataServiceController defines the controller for metadata service\n"
        },
        {
            "name": "metadata-clusters",
            "description": "MetadataClusterController defines the controller for metadata cluster\n"
        },
        {
            "name": "cluster-services",
            "description": "ClusterServiceController API /cluster-services\n"
        },
        {
            "name": "dns-gateway-groups",
            "description": "DNSGatewayGroupController API /dns-gateway-groups\n+X:license:constraints=license.FunctionXConnect\n"
        },
        {
            "name": "dns-gateways",
            "description": "DNSGatewayController API /dns-gateway\n+X:license:constraints=license.FunctionXConnect\n"
        },
        {
            "name": "dns-zones",
            "description": "DNSZoneController API /dns-zones\n+X:license:constraints=license.FunctionXConnect\n"
        },
        {
            "name": "dns-load-balance-policies",
            "description": "DNSLoadBalancePolicyController API /dns-load-balance-policies\n+X:license:constraints=license.FunctionXConnect\n"
        },
        {
            "name": "dns-domain-names",
            "description": "DNSDomainNameController API /dns-domain-names\n"
        },
        {
            "name": "ext-compat-configs",
            "description": "ExtCompatConfController is controller for ExtCompatConfig\n"
        },
        {
            "name": "osp-metadata-clusters",
            "description": "OspMetadataClusterController provides API for osp metadata cluster\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "osp-gateways",
            "description": "OspGatewayController provides API for osp gateway\n"
        },
        {
            "name": "regions",
            "description": "RegionController API /regions\n"
        },
        {
            "name": "osp-metadata-servers",
            "description": "OspMetadataServerController provides API for osp metadata server\n+X:license:constraints=license.FunctionObjectStorage\n"
        },
        {
            "name": "resource-used-relations",
            "description": "ResourceUsedRelationController API /resource-used-relations.\n"
        },
        {
            "name": "admin-host-group",
            "description": "AdminHostGroupController API /admin-host-group\n"
        },
        {
            "name": "settings",
            "description": "SettingsController Conf Setting Management\n"
        },
        {
            "name": "menu",
            "description": "MenuController menu Management\n"
        },
        {
            "name": "rbd-clients",
            "description": "RBDClientController defines rbd client controller\n"
        },
        {
            "name": "security-ssh",
            "description": "SecuritySSHController provides API for security ssh\n"
        }
    ],
    "definitions": {
        "AccessPath": {
            "description": "AccessPath defines access path\n+X:model:generate;with_detailed;etcd_lock=with_get; +X:benchmark:",
            "type": "object",
            "title": "AccessPath",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "block_volume_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "chap": {
                    "type": "boolean"
                },
                "client_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "has_alua_volumes": {
                    "type": "boolean"
                },
                "hidden": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "iqn": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nvme_type": {
                    "type": "string"
                },
                "protection_domain": {
                    "$ref": "#/definitions/ProtectionDomain_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "tname": {
                    "type": "string"
                },
                "tsecret": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "vip_group_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AccessPathCreateReq": {
            "type": "object",
            "title": "AccessPathCreateReq",
            "properties": {
                "access_path": {
                    "$ref": "#/definitions/AccessPathCreateReq_AccessPath"
                }
            }
        },
        "AccessPathCreateReq_AccessPath": {
            "type": "object",
            "title": "AccessPathCreateReq_AccessPath",
            "properties": {
                "chap": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "host_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "mapping_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MappingGroupReq"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nvme_type": {
                    "type": "string"
                },
                "protection_domain_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TargetReq"
                    }
                },
                "tname": {
                    "type": "string"
                },
                "tsecret": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "AccessPathResp": {
            "type": "object",
            "title": "AccessPathResp",
            "required": [
                "access_path"
            ],
            "properties": {
                "access_path": {
                    "$ref": "#/definitions/AccessPath"
                }
            }
        },
        "AccessPathUpdateReq": {
            "type": "object",
            "title": "AccessPathUpdateReq",
            "required": [
                "access_path"
            ],
            "properties": {
                "access_path": {
                    "$ref": "#/definitions/AccessPathUpdateReq_AccessPath"
                }
            }
        },
        "AccessPathUpdateReq_AccessPath": {
            "type": "object",
            "title": "AccessPathUpdateReq_AccessPath",
            "properties": {
                "chap": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tname": {
                    "type": "string"
                },
                "tsecret": {
                    "type": "string"
                }
            }
        },
        "AccessPath_Nestview": {
            "type": "object",
            "title": "AccessPath_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "AccessPathsResp": {
            "type": "object",
            "title": "AccessPathsResp",
            "required": [
                "access_paths"
            ],
            "properties": {
                "access_paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccessPath"
                    }
                }
            }
        },
        "AccessToken": {
            "description": "AccessToken used for authentication and authorization",
            "type": "object",
            "title": "AccessToken",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "used": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/User_Nestview"
                }
            }
        },
        "AccessTokenCreateRecord": {
            "description": "AccessTokenCreateRecord defines access token record for creating api response",
            "type": "object",
            "title": "AccessTokenCreateRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/AccessToken"
                },
                {
                    "properties": {
                        "uuid": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "AccessTokenCreateReq": {
            "type": "object",
            "title": "AccessTokenCreateReq",
            "properties": {
                "access_token": {
                    "$ref": "#/definitions/AccessTokenCreateReq_AccessToken"
                }
            }
        },
        "AccessTokenCreateReq_AccessToken": {
            "type": "object",
            "title": "AccessTokenCreateReq_AccessToken",
            "required": [
                "name",
                "roles"
            ],
            "properties": {
                "description": {
                    "description": "description of access token",
                    "type": "string"
                },
                "name": {
                    "description": "name of access token",
                    "type": "string"
                },
                "roles": {
                    "description": "roles of access token",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AccessTokenCreateResp": {
            "type": "object",
            "title": "AccessTokenCreateResp",
            "required": [
                "access_token"
            ],
            "properties": {
                "access_token": {
                    "description": "access token",
                    "$ref": "#/definitions/AccessTokenCreateRecord"
                }
            }
        },
        "AccessTokenResp": {
            "type": "object",
            "title": "AccessTokenResp",
            "properties": {
                "access_token": {
                    "description": "access token",
                    "$ref": "#/definitions/AccessToken"
                }
            }
        },
        "AccessTokenUpdateReq": {
            "type": "object",
            "title": "AccessTokenUpdateReq",
            "properties": {
                "access_token": {
                    "$ref": "#/definitions/AccessTokenUpdateReq_AccessToken"
                }
            }
        },
        "AccessTokenUpdateReq_AccessToken": {
            "type": "object",
            "title": "AccessTokenUpdateReq_AccessToken",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name of access token",
                    "type": "string"
                }
            }
        },
        "AccessTokensResp": {
            "type": "object",
            "title": "AccessTokensResp",
            "required": [
                "access_tokens"
            ],
            "properties": {
                "access_tokens": {
                    "description": "access tokens",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccessToken"
                    }
                }
            }
        },
        "ActionLog": {
            "description": "ActionLog defines a user action +X:model:generate; +X:benchmark:",
            "type": "object",
            "title": "ActionLog",
            "properties": {
                "action": {
                    "type": "string"
                },
                "client_ip": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "finish": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "new_data": {
                    "type": "object"
                },
                "old_data": {
                    "type": "object"
                },
                "osp_cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "parameter": {
                    "type": "string"
                },
                "related_resources": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "resource_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_key": {
                    "description": "key for resources not managed by us, can be used as resource id",
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                },
                "start": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/User_Nestview"
                }
            }
        },
        "ActionLogCreateReq": {
            "type": "object",
            "title": "ActionLogCreateReq",
            "properties": {
                "action_log": {
                    "$ref": "#/definitions/ActionLogCreateReq_ActionLog"
                }
            }
        },
        "ActionLogCreateReq_ActionLog": {
            "type": "object",
            "title": "ActionLogCreateReq_ActionLog",
            "required": [
                "id",
                "user_id",
                "resource_type",
                "client_ip",
                "resource_id",
                "osp_cluster_id",
                "action",
                "old_data",
                "new_data",
                "start",
                "finish"
            ],
            "properties": {
                "action": {
                    "type": "string"
                },
                "client_ip": {
                    "type": "string"
                },
                "finish": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "new_data": {
                    "type": "string"
                },
                "old_data": {
                    "type": "string"
                },
                "osp_cluster_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "parameter": {
                    "type": "string"
                },
                "resource_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_type": {
                    "type": "string"
                },
                "start": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ActionLogRecord": {
            "description": "ActionLogRecord defines the response errors of action log",
            "type": "object",
            "title": "ActionLogRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/ActionLog"
                },
                {
                    "properties": {
                        "error_records": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ErrorRecord"
                            }
                        }
                    }
                }
            ]
        },
        "ActionLogResp": {
            "type": "object",
            "title": "ActionLogResp",
            "required": [
                "action_log"
            ],
            "properties": {
                "action_log": {
                    "$ref": "#/definitions/ActionLog"
                }
            }
        },
        "ActionLogUpdateReq": {
            "type": "object",
            "title": "ActionLogUpdateReq",
            "properties": {
                "action_log": {
                    "$ref": "#/definitions/ActionLogUpdateReq_ActionLog"
                }
            }
        },
        "ActionLogUpdateReq_ActionLog": {
            "type": "object",
            "title": "ActionLogUpdateReq_ActionLog",
            "properties": {
                "finish": {
                    "type": "string",
                    "format": "date-time"
                },
                "message": {
                    "type": "string"
                },
                "new_data": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "ActionLogUserResp": {
            "type": "object",
            "title": "ActionLogUserResp",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ActionLog_Nestview": {
            "type": "object",
            "title": "ActionLog_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ActionLogsResp": {
            "type": "object",
            "title": "ActionLogsResp",
            "required": [
                "action_logs"
            ],
            "properties": {
                "action_logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActionLogRecord"
                    }
                }
            }
        },
        "AdminHostGroup": {
            "description": "AdminHostGroup defines admin host group\n+X:model:generate;with_detailed;etcd_lock=with_get;check_get=detailed;\n+X:benchmark:",
            "type": "object",
            "title": "AdminHostGroup",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Host_Nestview"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AdminHostGroupCreateReq": {
            "type": "object",
            "title": "AdminHostGroupCreateReq",
            "properties": {
                "admin_host_group": {
                    "$ref": "#/definitions/AdminHostGroupCreateReq_AdminHostGroup"
                }
            }
        },
        "AdminHostGroupCreateReq_AdminHostGroup": {
            "type": "object",
            "title": "AdminHostGroupCreateReq_AdminHostGroup",
            "properties": {
                "host_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "AdminHostGroupResp": {
            "type": "object",
            "title": "AdminHostGroupResp",
            "required": [
                "admin_host_group"
            ],
            "properties": {
                "admin_host_group": {
                    "$ref": "#/definitions/AdminHostGroup"
                }
            }
        },
        "AdminHostGroupUpdateReq": {
            "type": "object",
            "title": "AdminHostGroupUpdateReq",
            "required": [
                "admin_host_group"
            ],
            "properties": {
                "admin_host_group": {
                    "$ref": "#/definitions/AdminHostGroupUpdateReq_AdminHostGroup"
                }
            }
        },
        "AdminHostGroupUpdateReq_AdminHostGroup": {
            "type": "object",
            "title": "AdminHostGroupUpdateReq_AdminHostGroup",
            "properties": {
                "host_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AdminHostGroup_Nestview": {
            "type": "object",
            "title": "AdminHostGroup_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "AdminHostGroupsResp": {
            "type": "object",
            "title": "AdminHostGroupsResp",
            "required": [
                "admin_host_groups"
            ],
            "properties": {
                "admin_host_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AdminHostGroup"
                    }
                }
            }
        },
        "Alert": {
            "description": "Alert is a generic representation of an alert in the Prometheus eco-system.",
            "type": "object",
            "title": "Alert",
            "properties": {
                "ack_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "acked": {
                    "type": "boolean"
                },
                "alarm_id": {
                    "type": "string"
                },
                "alert_value": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "data": {
                    "type": "object"
                },
                "export_status": {
                    "type": "string"
                },
                "extra_data": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "level": {
                    "type": "string"
                },
                "osp_cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "related_resources": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "resolve_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "resolve_type": {
                    "type": "string"
                },
                "resolved": {
                    "type": "boolean"
                },
                "resource_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "trigger_mode": {
                    "type": "string"
                },
                "trigger_period": {
                    "type": "integer",
                    "format": "int64"
                },
                "trigger_value": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AlertActionReq": {
            "type": "object",
            "title": "AlertActionReq",
            "required": [
                "alert"
            ],
            "properties": {
                "alert": {
                    "$ref": "#/definitions/AlertActionReq_Alert"
                }
            }
        },
        "AlertActionReq_Alert": {
            "type": "object",
            "title": "AlertActionReq_Alert",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "type": "string"
                }
            }
        },
        "AlertGroup": {
            "description": "AlertGroup defines the alert group",
            "type": "object",
            "title": "AlertGroup",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AlertGroupCreateReq": {
            "type": "object",
            "title": "AlertGroupCreateReq",
            "required": [
                "alert_group"
            ],
            "properties": {
                "alert_group": {
                    "$ref": "#/definitions/AlertGroupCreateReq_AlertGroup"
                }
            }
        },
        "AlertGroupCreateReq_AlertGroup": {
            "type": "object",
            "title": "AlertGroupCreateReq_AlertGroup",
            "required": [
                "name",
                "email_group_ids",
                "alert_rule_ids"
            ],
            "properties": {
                "alert_rule_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "email_group_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "AlertGroupResp": {
            "type": "object",
            "title": "AlertGroupResp",
            "required": [
                "alert_group"
            ],
            "properties": {
                "alert_group": {
                    "description": "alert group",
                    "$ref": "#/definitions/AlertGroup"
                }
            }
        },
        "AlertGroupUpdateReq": {
            "type": "object",
            "title": "AlertGroupUpdateReq",
            "required": [
                "alert_group"
            ],
            "properties": {
                "alert_group": {
                    "$ref": "#/definitions/AlertGroupUpdateReq_AlertGroup"
                }
            }
        },
        "AlertGroupUpdateReq_AlertGroup": {
            "type": "object",
            "title": "AlertGroupUpdateReq_AlertGroup",
            "properties": {
                "alert_rule_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "email_group_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "AlertGroupsResp": {
            "type": "object",
            "title": "AlertGroupsResp",
            "required": [
                "alert_groups"
            ],
            "properties": {
                "alert_groups": {
                    "description": "alert groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AlertGroup"
                    }
                }
            }
        },
        "AlertInfo": {
            "description": "AlertInfo defines the alert info +X:model:generate; +X:benchmark:",
            "type": "object",
            "title": "AlertInfo",
            "properties": {
                "ack_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "acked": {
                    "type": "boolean"
                },
                "alarm_id": {
                    "type": "string"
                },
                "alert_value": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "data": {
                    "type": "object"
                },
                "export_status": {
                    "type": "string"
                },
                "extra_data": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "level": {
                    "type": "string"
                },
                "osp_cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "related_resources": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "resolve_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "resolve_type": {
                    "type": "string"
                },
                "resolved": {
                    "type": "boolean"
                },
                "resource_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "trigger_mode": {
                    "type": "string"
                },
                "trigger_period": {
                    "type": "integer",
                    "format": "int64"
                },
                "trigger_value": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AlertInfoGroup": {
            "description": "AlertInfoGroup defines the alert info group +X:model:generate;order_by=-Update;\n+X:benchmark:",
            "type": "object",
            "title": "AlertInfoGroup",
            "properties": {
                "alert_info": {
                    "$ref": "#/definitions/AlertInfo"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AlertInfoGroupRecord": {
            "description": "AlertInfoGroupRecord defines the response of alert info group",
            "type": "object",
            "title": "AlertInfoGroupRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/AlertInfoRecord"
                },
                {
                    "properties": {
                        "alert_info_count": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            ]
        },
        "AlertInfoGroupResp": {
            "type": "object",
            "title": "AlertInfoGroupResp",
            "required": [
                "alert_info_group"
            ],
            "properties": {
                "alert_info_group": {
                    "description": "alert info group",
                    "$ref": "#/definitions/AlertInfoGroup"
                }
            }
        },
        "AlertInfoGroupsResp": {
            "type": "object",
            "title": "AlertInfoGroupsResp",
            "required": [
                "alert_info_groups"
            ],
            "properties": {
                "alert_info_groups": {
                    "description": "alert info groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AlertInfoGroupRecord"
                    }
                }
            }
        },
        "AlertInfoRecord": {
            "description": "AlertInfoRecord defines the response of alert info",
            "type": "object",
            "title": "AlertInfoRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/AlertInfo"
                },
                {
                    "properties": {
                        "error_records": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ErrorRecord"
                            }
                        }
                    }
                }
            ]
        },
        "AlertInfoResp": {
            "type": "object",
            "title": "AlertInfoResp",
            "required": [
                "alert_info"
            ],
            "properties": {
                "alert_info": {
                    "description": "alert info",
                    "$ref": "#/definitions/AlertInfo"
                }
            }
        },
        "AlertInfoRoot": {
            "description": "AlertInfoRoot defines the alert info root +X:model:generate; +X:benchmark:",
            "type": "object",
            "title": "AlertInfoRoot",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AlertInfoRootResp": {
            "type": "object",
            "title": "AlertInfoRootResp",
            "required": [
                "alert_info_root"
            ],
            "properties": {
                "alert_info_root": {
                    "description": "alert info root",
                    "$ref": "#/definitions/AlertInfoRoot"
                }
            }
        },
        "AlertInfo_Nestview": {
            "type": "object",
            "title": "AlertInfo_Nestview",
            "properties": {
                "alarm_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AlertInfosResp": {
            "type": "object",
            "title": "AlertInfosResp",
            "required": [
                "alert_infos"
            ],
            "properties": {
                "alert_infos": {
                    "description": "alert infos",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AlertInfoRecord"
                    }
                }
            }
        },
        "AlertRecord": {
            "description": "AlertRecord defines the response errors of alert",
            "type": "object",
            "title": "AlertRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/Alert"
                },
                {
                    "properties": {
                        "error_records": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ErrorRecord"
                            }
                        }
                    }
                }
            ]
        },
        "AlertResp": {
            "type": "object",
            "title": "AlertResp",
            "required": [
                "alert"
            ],
            "properties": {
                "alert": {
                    "description": "alert",
                    "$ref": "#/definitions/Alert"
                }
            }
        },
        "AlertRule": {
            "description": "AlertRule defines the alert rule",
            "type": "object",
            "title": "AlertRule",
            "properties": {
                "alarm_id": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "enabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "has_resource_blacklist": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "level": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                },
                "trigger_mode": {
                    "type": "string"
                },
                "trigger_period": {
                    "type": "integer",
                    "format": "int64"
                },
                "trigger_value": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "weight": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AlertRuleGroup": {
            "description": "AlertRuleGroup defines alert rule belongs to which group.\n+X:model:generate;etcd_lock=with_get +X:benchmark:",
            "type": "object",
            "title": "AlertRuleGroup",
            "properties": {
                "auto_resolve": {
                    "type": "boolean"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "levels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                },
                "trigger_time_seconds": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AlertRuleGroupDetailResp": {
            "type": "object",
            "title": "AlertRuleGroupDetailResp",
            "required": [
                "alert_rule_group",
                "alert_rules"
            ],
            "properties": {
                "alert_rule_group": {
                    "description": "alert rule group",
                    "$ref": "#/definitions/AlertRuleGroup"
                },
                "alert_rules": {
                    "description": "alert rule group members",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AlertRule"
                    }
                }
            }
        },
        "AlertRuleGroupDetailUpdateReq": {
            "type": "object",
            "title": "AlertRuleGroupDetailUpdateReq",
            "properties": {
                "alert_rule_group": {
                    "description": "alert rule group",
                    "$ref": "#/definitions/AlertRuleGroupDetailUpdateReq_Group"
                },
                "alert_rules": {
                    "description": "alert rule group members",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AlertRuleGroupDetailUpdateReq_Rules_Elt"
                    }
                }
            }
        },
        "AlertRuleGroupDetailUpdateReq_Group": {
            "type": "object",
            "title": "AlertRuleGroupDetailUpdateReq_Group",
            "properties": {
                "enabled": {
                    "description": "enable the alert rule group or not",
                    "type": "boolean"
                },
                "trigger_time_seconds": {
                    "description": "trigger time in seconds",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AlertRuleGroupDetailUpdateReq_Rules_Elt": {
            "type": "object",
            "title": "AlertRuleGroupDetailUpdateReq_Rules_Elt",
            "allOf": [
                {
                    "$ref": "#/definitions/AlertRuleUpdateReq"
                },
                {
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            ]
        },
        "AlertRuleGroupsResp": {
            "type": "object",
            "title": "AlertRuleGroupsResp",
            "required": [
                "alert_rule_groups"
            ],
            "properties": {
                "alert_rule_groups": {
                    "description": "alert rule groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AlertRuleGroup"
                    }
                }
            }
        },
        "AlertRuleResourceBlacklistResp": {
            "type": "object",
            "title": "AlertRuleResourceBlacklistResp",
            "properties": {
                "resources": {
                    "description": "resource black list response"
                }
            }
        },
        "AlertRuleResp": {
            "type": "object",
            "title": "AlertRuleResp",
            "required": [
                "alert_rule"
            ],
            "properties": {
                "alert_rule": {
                    "description": "alert rule",
                    "$ref": "#/definitions/AlertRule"
                }
            }
        },
        "AlertRuleSchema": {
            "description": "AlertRuleSchema defines alert rule schema",
            "type": "object",
            "title": "AlertRuleSchema",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AlertRuleSchemaResp": {
            "type": "object",
            "title": "AlertRuleSchemaResp",
            "required": [
                "trigger_modes",
                "rule_schema_map"
            ],
            "properties": {
                "rule_schema_map": {
                    "description": "rule schemas",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/AlertRuleSchema"
                    }
                },
                "trigger_modes": {
                    "description": "trigger modes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AlertRuleUpdateReq": {
            "type": "object",
            "title": "AlertRuleUpdateReq",
            "required": [
                "alert_rule"
            ],
            "properties": {
                "alert_rule": {
                    "$ref": "#/definitions/AlertRuleUpdateReq_Rule"
                }
            }
        },
        "AlertRuleUpdateReq_Rule": {
            "type": "object",
            "title": "AlertRuleUpdateReq_Rule",
            "properties": {
                "enabled": {
                    "description": "enable the alert rule or not",
                    "type": "boolean"
                },
                "trigger_period": {
                    "description": "trigger period of alert rule",
                    "type": "integer",
                    "format": "int64"
                },
                "trigger_value": {
                    "description": "trigger value of alert rule",
                    "type": "string"
                }
            }
        },
        "AlertRulesResp": {
            "type": "object",
            "title": "AlertRulesResp",
            "required": [
                "alert_rules"
            ],
            "properties": {
                "alert_rules": {
                    "description": "alert rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AlertRule"
                    }
                }
            }
        },
        "AlertStats": {
            "type": "object",
            "title": "AlertStats",
            "properties": {
                "critical_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "info_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "warning_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AlertStatsResp": {
            "type": "object",
            "title": "AlertStatsResp",
            "required": [
                "alert_stats"
            ],
            "properties": {
                "alert_stats": {
                    "description": "alert stats",
                    "$ref": "#/definitions/AlertStats"
                }
            }
        },
        "Alert_Nestview": {
            "type": "object",
            "title": "Alert_Nestview",
            "properties": {
                "alarm_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AlertsActionReq": {
            "type": "object",
            "title": "AlertsActionReq",
            "required": [
                "alerts"
            ],
            "properties": {
                "alerts": {
                    "$ref": "#/definitions/AlertsActionReq_Alerts"
                }
            }
        },
        "AlertsActionReq_Alerts": {
            "type": "object",
            "title": "AlertsActionReq_Alerts",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "type": "string"
                }
            }
        },
        "AlertsResolveReq": {
            "type": "object",
            "title": "AlertsResolveReq",
            "required": [
                "alerts"
            ],
            "properties": {
                "alerts": {
                    "$ref": "#/definitions/AlertsResolveReq_Alerts"
                }
            }
        },
        "AlertsResolveReq_Alerts": {
            "type": "object",
            "title": "AlertsResolveReq_Alerts",
            "properties": {
                "group": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                }
            }
        },
        "AlertsResp": {
            "type": "object",
            "title": "AlertsResp",
            "required": [
                "alerts"
            ],
            "properties": {
                "alerts": {
                    "description": "alerts",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AlertRecord"
                    }
                }
            }
        },
        "Application": {
            "description": "Application defines model of application +X:model:generate;order_by=-ID;",
            "type": "object",
            "title": "Application",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ApplicationCreateReq": {
            "type": "object",
            "title": "ApplicationCreateReq",
            "properties": {
                "application": {
                    "$ref": "#/definitions/ApplicationCreateReq_Application"
                }
            }
        },
        "ApplicationCreateReq_Application": {
            "type": "object",
            "title": "ApplicationCreateReq_Application",
            "required": [
                "url",
                "name"
            ],
            "properties": {
                "enabled": {
                    "description": "enable or disable the application",
                    "type": "boolean"
                },
                "name": {
                    "description": "name of application",
                    "type": "string"
                },
                "url": {
                    "description": "url of application",
                    "type": "string"
                }
            }
        },
        "ApplicationResp": {
            "type": "object",
            "title": "ApplicationResp",
            "properties": {
                "application": {
                    "$ref": "#/definitions/Application"
                }
            }
        },
        "ApplicationUpdateReq": {
            "type": "object",
            "title": "ApplicationUpdateReq",
            "properties": {
                "application": {
                    "$ref": "#/definitions/ApplicationUpdateReq_Application"
                }
            }
        },
        "ApplicationUpdateReq_Application": {
            "type": "object",
            "title": "ApplicationUpdateReq_Application",
            "required": [
                "url",
                "name"
            ],
            "properties": {
                "enabled": {
                    "description": "enable or disable the application",
                    "type": "boolean"
                },
                "name": {
                    "description": "name of application",
                    "type": "string"
                },
                "url": {
                    "description": "url of application",
                    "type": "string"
                }
            }
        },
        "ApplicationsResp": {
            "type": "object",
            "title": "ApplicationsResp",
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application"
                    }
                }
            }
        },
        "AsyncReplicationConfig": {
            "description": "AsyncReplicationConfig contains config for snapshot replication",
            "type": "object",
            "title": "AsyncReplicationConfig",
            "properties": {
                "remote_gateway": {
                    "type": "string"
                }
            }
        },
        "AuthLoginReq": {
            "type": "object",
            "title": "AuthLoginReq",
            "required": [
                "auth"
            ],
            "properties": {
                "auth": {
                    "$ref": "#/definitions/AuthLoginReq_Auth"
                }
            }
        },
        "AuthLoginReq_Auth": {
            "type": "object",
            "title": "AuthLoginReq_Auth",
            "properties": {
                "encrypted_password": {
                    "description": "encrypted password for auth",
                    "type": "string"
                },
                "extra": {
                    "description": "extra for sso login params",
                    "$ref": "#/definitions/loginSSOExtra"
                },
                "name": {
                    "description": "user name or email for auth",
                    "type": "string"
                },
                "password": {
                    "description": "password for auth",
                    "type": "string"
                },
                "platform": {
                    "description": "uuid of the identity platform",
                    "type": "string"
                },
                "rsa_key_id": {
                    "description": "rsa key id",
                    "type": "string"
                },
                "sign": {
                    "description": "signature of login request",
                    "type": "string"
                },
                "timestamp": {
                    "description": "timestamp of platform token",
                    "type": "string"
                },
                "token": {
                    "description": "token of the identity platform",
                    "type": "string"
                }
            }
        },
        "AuthPasswordReq": {
            "type": "object",
            "title": "AuthPasswordReq",
            "required": [
                "user"
            ],
            "properties": {
                "user": {
                    "$ref": "#/definitions/AuthPasswordReq_User"
                }
            }
        },
        "AuthPasswordReq_User": {
            "type": "object",
            "title": "AuthPasswordReq_User",
            "required": [
                "password"
            ],
            "properties": {
                "email": {
                    "description": "user email for auth",
                    "type": "string"
                },
                "id": {
                    "description": "user id for auth",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "user name or email for auth",
                    "type": "string"
                },
                "password": {
                    "description": "password for auth",
                    "type": "string"
                }
            }
        },
        "AuthRSAKey": {
            "type": "object",
            "title": "AuthRSAKey",
            "properties": {
                "expiration": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                }
            }
        },
        "AuthRSAKeyResp": {
            "type": "object",
            "title": "AuthRSAKeyResp",
            "properties": {
                "rsa_key": {
                    "$ref": "#/definitions/AuthRSAKey"
                }
            }
        },
        "AuthSecurityPolicy": {
            "description": "AuthSecurityPolicy defines auth security policy",
            "type": "object",
            "title": "AuthSecurityPolicy",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "expiration_time": {
                    "type": "integer",
                    "format": "int64"
                },
                "freeze_duration": {
                    "description": "unit: second",
                    "type": "integer",
                    "format": "int64"
                },
                "max_attempts": {
                    "type": "integer",
                    "format": "int64"
                },
                "password_expiration_warning": {
                    "type": "boolean"
                },
                "password_lifetime": {
                    "description": "unit: second",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AuthSecurityPolicyResp": {
            "type": "object",
            "title": "AuthSecurityPolicyResp",
            "properties": {
                "auth_security_policy": {
                    "$ref": "#/definitions/AuthSecurityPolicy"
                }
            }
        },
        "AuthSecurityPolicyUpdateReq": {
            "type": "object",
            "title": "AuthSecurityPolicyUpdateReq",
            "properties": {
                "auth_security_policy": {
                    "$ref": "#/definitions/AuthSecurityPolicyUpdateReq_AuthSecurityPolicy"
                }
            }
        },
        "AuthSecurityPolicyUpdateReq_AuthSecurityPolicy": {
            "type": "object",
            "title": "AuthSecurityPolicyUpdateReq_AuthSecurityPolicy",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "expiration_time": {
                    "type": "integer",
                    "format": "int64"
                },
                "freeze_duration": {
                    "type": "integer",
                    "format": "int64"
                },
                "max_attempts": {
                    "type": "integer",
                    "format": "int64"
                },
                "password_expiration_warning": {
                    "type": "boolean"
                },
                "password_lifetime": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AuthTokenReq": {
            "type": "object",
            "title": "AuthTokenReq",
            "required": [
                "uuid"
            ],
            "properties": {
                "uuid": {
                    "description": "uuid of authorized token",
                    "type": "string"
                }
            }
        },
        "BlockReplicationConfig": {
            "description": "BlockReplicationConfig contains config for block replication",
            "type": "object",
            "title": "BlockReplicationConfig",
            "properties": {
                "destination": {
                    "type": "string"
                },
                "local_gateways": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "remote_gateways": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "BlockVolumeMigrationJobResp": {
            "type": "object",
            "title": "BlockVolumeMigrationJobResp",
            "required": [
                "block_volume_migration_job"
            ],
            "properties": {
                "block_volume_migration_job": {
                    "description": "volume migration job",
                    "$ref": "#/definitions/VolumeMigrationJob"
                }
            }
        },
        "BlockVolumeMigrationJobsResp": {
            "type": "object",
            "title": "BlockVolumeMigrationJobsResp",
            "required": [
                "block_volume_migration_jobs"
            ],
            "properties": {
                "block_volume_migration_jobs": {
                    "description": "volume migration jobs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VolumeMigrationJob"
                    }
                }
            }
        },
        "BlockVolumeUpdateMigrationReq": {
            "type": "object",
            "title": "BlockVolumeUpdateMigrationReq",
            "properties": {
                "volume_migration_job": {
                    "$ref": "#/definitions/BlockVolumeUpdateMigrationReq_VolumeMigrationJob"
                }
            }
        },
        "BlockVolumeUpdateMigrationReq_VolumeMigrationJob": {
            "type": "object",
            "title": "BlockVolumeUpdateMigrationReq_VolumeMigrationJob",
            "required": [
                "stripes"
            ],
            "properties": {
                "stripes": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BootNode": {
            "description": "BootNode defines the status of boot node +X:model:generate +X:benchmark:",
            "type": "object",
            "title": "BootNode",
            "required": [
                "public_network",
                "private_network",
                "admin_network",
                "gateway_network"
            ],
            "properties": {
                "admin_network": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "gateway_network": {
                    "type": "string"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "private_network": {
                    "type": "string"
                },
                "public_network": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "BootNodeReq": {
            "type": "object",
            "title": "BootNodeReq",
            "required": [
                "bootnode"
            ],
            "properties": {
                "bootnode": {
                    "$ref": "#/definitions/BootNodeReq_BootNode"
                }
            }
        },
        "BootNodeReq_BootNode": {
            "type": "object",
            "title": "BootNodeReq_BootNode",
            "required": [
                "public_network",
                "private_network"
            ],
            "properties": {
                "admin_network": {
                    "description": "admin network: 10.0.0.0/24",
                    "type": "string"
                },
                "fs_id": {
                    "description": "fs id",
                    "type": "string"
                },
                "gateway_network": {
                    "description": "gateway networks, multiple networks splited by comma: 10.0.3.0/24,10.0.4.0/24",
                    "type": "string"
                },
                "private_network": {
                    "description": "private network : 10.0.2.0/24",
                    "type": "string"
                },
                "public_network": {
                    "description": "public network: 10.0.1.0/24",
                    "type": "string"
                },
                "region_name": {
                    "description": "region name",
                    "type": "string"
                }
            }
        },
        "BootNodeResp": {
            "type": "object",
            "title": "BootNodeResp",
            "required": [
                "bootnode"
            ],
            "properties": {
                "bootnode": {
                    "description": "boot node",
                    "$ref": "#/definitions/BootNode"
                }
            }
        },
        "BucketFlag": {
            "description": "BucketFlag is the struct of bucket flag Note: the name of json tag must be\nconsistent with the --bucket-flag parameter value\n\nin radosgw-admin set-flag/remove-flag command",
            "type": "object",
            "title": "BucketFlag",
            "properties": {
                "delete_trigger_archive_tier": {
                    "type": "boolean"
                },
                "get_trigger_restore": {
                    "type": "boolean"
                },
                "readonly": {
                    "type": "boolean"
                },
                "recycle": {
                    "type": "boolean"
                },
                "tier_cache": {
                    "type": "boolean"
                },
                "tier_retain_external_object": {
                    "description": "set bucket local delete mode",
                    "type": "boolean"
                },
                "tier_worm": {
                    "type": "boolean"
                },
                "versioned": {
                    "type": "boolean"
                },
                "versions_suspended": {
                    "type": "boolean"
                },
                "worm": {
                    "type": "boolean"
                }
            }
        },
        "BucketFlagReq": {
            "type": "object",
            "title": "BucketFlagReq",
            "properties": {
                "delete_trigger_archive_tier": {
                    "type": "boolean"
                },
                "get_trigger_restore": {
                    "type": "boolean"
                },
                "readonly": {
                    "type": "boolean"
                },
                "tier_cache": {
                    "type": "boolean"
                },
                "tier_retain_external_object": {
                    "description": "set bucket local delete mode",
                    "type": "boolean"
                },
                "tier_worm": {
                    "type": "boolean"
                },
                "versioned": {
                    "type": "boolean"
                },
                "versions_suspended": {
                    "type": "boolean"
                },
                "worm": {
                    "type": "boolean"
                }
            }
        },
        "CephHostReq": {
            "type": "object",
            "title": "CephHostReq",
            "required": [
                "host_id"
            ],
            "properties": {
                "gateway_ips": {
                    "description": "gateway ips for s3",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "host_id": {
                    "description": "boot node host id",
                    "type": "integer",
                    "format": "int64"
                },
                "private_ip": {
                    "description": "cluster private ip for internal data access",
                    "type": "string"
                },
                "public_ip": {
                    "description": "public ip for outside data access",
                    "type": "string"
                },
                "roles": {
                    "description": "host roles",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "storage server, storage client or storage witness",
                    "type": "string"
                }
            }
        },
        "ChangePasswordReq": {
            "type": "object",
            "title": "ChangePasswordReq",
            "required": [
                "user"
            ],
            "properties": {
                "user": {
                    "description": "user",
                    "$ref": "#/definitions/ChangePasswordReq_Req"
                }
            }
        },
        "ChangePasswordReq_Req": {
            "type": "object",
            "title": "ChangePasswordReq_Req",
            "required": [
                "original_password",
                "password"
            ],
            "properties": {
                "encrypted_original_password": {
                    "description": "encrypted original password for auth",
                    "type": "string"
                },
                "encrypted_password": {
                    "description": "encrypted password for auth",
                    "type": "string"
                },
                "original_password": {
                    "description": "original password of user",
                    "type": "string"
                },
                "password": {
                    "description": "new password of user",
                    "type": "string"
                },
                "rsa_key_id": {
                    "description": "rsa key id",
                    "type": "string"
                }
            }
        },
        "ChmodReq": {
            "type": "object",
            "title": "ChmodReq",
            "required": [
                "dfs_file"
            ],
            "properties": {
                "dfs_file": {
                    "$ref": "#/definitions/ChmodReq_File"
                }
            }
        },
        "ChmodReq_File": {
            "type": "object",
            "title": "ChmodReq_File",
            "required": [
                "dfs_rootfs_id",
                "path",
                "mode"
            ],
            "properties": {
                "dfs_rootfs_id": {
                    "description": "dfs rootfs id",
                    "type": "integer",
                    "format": "int64"
                },
                "mode": {
                    "description": "file mode",
                    "type": "string"
                },
                "path": {
                    "description": "full path",
                    "type": "string"
                }
            }
        },
        "ChunkRecord": {
            "description": "ChunkRecord defines chunks api response",
            "type": "object",
            "title": "ChunkRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/PlacementGroup"
                },
                {
                    "properties": {
                        "scrubs": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PlacementGroupScrub"
                            }
                        }
                    }
                }
            ]
        },
        "ChunksResp": {
            "type": "object",
            "title": "ChunksResp",
            "required": [
                "chunks"
            ],
            "properties": {
                "chunks": {
                    "description": "chunks",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChunkRecord"
                    }
                }
            }
        },
        "Client": {
            "type": "object",
            "title": "Client",
            "properties": {
                "client_group": {
                    "$ref": "#/definitions/ClientGroup_Nestview"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "code": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ClientCode": {
            "type": "object",
            "title": "ClientCode",
            "properties": {
                "code": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ClientCodesResp": {
            "type": "object",
            "title": "ClientCodesResp",
            "required": [
                "client_codes"
            ],
            "properties": {
                "client_codes": {
                    "description": "client codes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClientCode"
                    }
                }
            }
        },
        "ClientGroup": {
            "description": "ClientGroup defines the access client group",
            "type": "object",
            "title": "ClientGroup",
            "properties": {
                "access_path_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "block_volume_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "chap": {
                    "type": "boolean"
                },
                "client_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Client"
                    }
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "iname": {
                    "type": "string"
                },
                "isecret": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ClientGroupCreateReq": {
            "type": "object",
            "title": "ClientGroupCreateReq",
            "properties": {
                "client_group": {
                    "$ref": "#/definitions/ClientGroupCreateReq_ClientGroup"
                }
            }
        },
        "ClientGroupCreateReq_ClientGroup": {
            "type": "object",
            "title": "ClientGroupCreateReq_ClientGroup",
            "properties": {
                "chap": {
                    "type": "boolean"
                },
                "clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClientGroupCreateReq_ClientGroup_Clients_Elt"
                    }
                },
                "description": {
                    "type": "string"
                },
                "iname": {
                    "type": "string"
                },
                "isecret": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "ClientGroupCreateReq_ClientGroup_Clients_Elt": {
            "type": "object",
            "title": "ClientGroupCreateReq_ClientGroup_Clients_Elt",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "ClientGroupResp": {
            "type": "object",
            "title": "ClientGroupResp",
            "required": [
                "client_group"
            ],
            "properties": {
                "client_group": {
                    "description": "client group",
                    "$ref": "#/definitions/ClientGroup"
                }
            }
        },
        "ClientGroupUpdateReq": {
            "type": "object",
            "title": "ClientGroupUpdateReq",
            "properties": {
                "client_group": {
                    "$ref": "#/definitions/ClientGroupUpdateReq_ClientGroup"
                }
            }
        },
        "ClientGroupUpdateReq_ClientGroup": {
            "type": "object",
            "title": "ClientGroupUpdateReq_ClientGroup",
            "properties": {
                "clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClientGroupUpdateReq_ClientGroup_Clients_Elt"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ClientGroupUpdateReq_ClientGroup_Clients_Elt": {
            "type": "object",
            "title": "ClientGroupUpdateReq_ClientGroup_Clients_Elt",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "ClientGroup_Nestview": {
            "type": "object",
            "title": "ClientGroup_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "ClientGroupsResp": {
            "type": "object",
            "title": "ClientGroupsResp",
            "required": [
                "client_groups"
            ],
            "properties": {
                "client_groups": {
                    "description": "client groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClientGroup"
                    }
                }
            }
        },
        "ClientLunMapping": {
            "description": "ClientLunMapping defines a mapping relation with lun and client group",
            "type": "object",
            "title": "ClientLunMapping",
            "properties": {
                "block_volume": {
                    "$ref": "#/definitions/Volume"
                },
                "client": {
                    "$ref": "#/definitions/Client"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "host": {
                    "$ref": "#/definitions/Host"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "lun": {
                    "$ref": "#/definitions/Lun_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/Target_Nestview"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ClientLunMappingRecord": {
            "type": "object",
            "title": "ClientLunMappingRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/ClientLunMapping"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VolumeStat"
                            }
                        },
                        "session_status": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "ClientLunMappingResp": {
            "type": "object",
            "title": "ClientLunMappingResp",
            "required": [
                "client_lun_mapping"
            ],
            "properties": {
                "client_lun_mapping": {
                    "$ref": "#/definitions/ClientLunMappingRecord"
                }
            }
        },
        "ClientLunMappingsResp": {
            "type": "object",
            "title": "ClientLunMappingsResp",
            "required": [
                "client_lun_mappings"
            ],
            "properties": {
                "client_lun_mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClientLunMappingRecord"
                    }
                }
            }
        },
        "ClientResp": {
            "type": "object",
            "title": "ClientResp",
            "required": [
                "client"
            ],
            "properties": {
                "client": {
                    "$ref": "#/definitions/Client"
                }
            }
        },
        "ClientsResp": {
            "type": "object",
            "title": "ClientsResp",
            "required": [
                "clients"
            ],
            "properties": {
                "clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Client"
                    }
                }
            }
        },
        "CloudDatacenter_Nestview": {
            "type": "object",
            "title": "CloudDatacenter_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "CloudExtraProperties": {
            "description": "CloudExtraProperties contains extra properties",
            "type": "object",
            "title": "CloudExtraProperties",
            "properties": {
                "csi_driver_versions": {
                    "description": "csi driver versions",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domain_id": {
                    "description": "domain id for openstack",
                    "type": "string"
                },
                "domain_name": {
                    "description": "domain name for openstack",
                    "type": "string"
                },
                "k8s_version": {
                    "description": "kubernetes version",
                    "type": "string"
                },
                "regions": {
                    "description": "regions for openstack",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tenant_id": {
                    "description": "tenant id for openstack",
                    "type": "string"
                },
                "tenant_name": {
                    "description": "tenant name for openstack",
                    "type": "string"
                }
            }
        },
        "CloudInstance": {
            "description": "CloudInstance contains information of a cloud instance and it's stats.",
            "type": "object",
            "title": "CloudInstance",
            "properties": {
                "cloud_datacenter": {
                    "$ref": "#/definitions/CloudDatacenter_Nestview"
                },
                "cloud_instance_id": {
                    "type": "string"
                },
                "cloud_platform": {
                    "$ref": "#/definitions/CloudPlatform_Nestview"
                },
                "cloud_volume_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "cores": {
                    "type": "integer",
                    "format": "int64"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "memory_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "root_device_type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CloudInstanceRecord": {
            "description": "CloudInstanceRecord combine CloudInstance and CloudInstanceStat as API response",
            "type": "object",
            "title": "CloudInstanceRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/CloudInstance"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CloudInstanceStat"
                            }
                        }
                    }
                }
            ]
        },
        "CloudInstanceResp": {
            "type": "object",
            "title": "CloudInstanceResp",
            "properties": {
                "cloud_instance": {
                    "description": "cloud instance record",
                    "$ref": "#/definitions/CloudInstanceRecord"
                }
            }
        },
        "CloudInstanceSamplesResp": {
            "type": "object",
            "title": "CloudInstanceSamplesResp",
            "properties": {
                "cloud_instance_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudInstanceStat"
                    }
                }
            }
        },
        "CloudInstanceStat": {
            "description": "CloudInstanceStat represents the monitoring metrics of a cloud instance",
            "type": "object",
            "title": "CloudInstanceStat",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "read_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "read_iops": {
                    "type": "number",
                    "format": "double"
                },
                "read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "total_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "total_iops": {
                    "type": "number",
                    "format": "double"
                },
                "write_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "write_iops": {
                    "type": "number",
                    "format": "double"
                },
                "write_latency_us": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "CloudInstance_Nestview": {
            "type": "object",
            "title": "CloudInstance_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "CloudInstancesResp": {
            "type": "object",
            "title": "CloudInstancesResp",
            "properties": {
                "cloud_instances": {
                    "description": "cloud instance records",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudInstanceRecord"
                    }
                }
            }
        },
        "CloudPlatform": {
            "description": "CloudPlatform defines different cloud platforms",
            "type": "object",
            "title": "CloudPlatform",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "attached_cloud_volume_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cloud_instance_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cloud_volume_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "extra_properties": {
                    "$ref": "#/definitions/CloudExtraProperties"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "related_resource_data": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "sync_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "CloudPlatformCreateReq": {
            "type": "object",
            "title": "CloudPlatformCreateReq",
            "properties": {
                "cloud_platform": {
                    "$ref": "#/definitions/CloudPlatformCreateReq_Platform"
                }
            }
        },
        "CloudPlatformCreateReq_Platform": {
            "type": "object",
            "title": "CloudPlatformCreateReq_Platform",
            "properties": {
                "description": {
                    "description": "description of cloud platform",
                    "type": "string"
                },
                "extra_properties": {
                    "description": "extra properties of cloud platform",
                    "$ref": "#/definitions/CloudExtraProperties"
                },
                "name": {
                    "description": "name of cloud platform",
                    "type": "string"
                },
                "password": {
                    "description": "password of cloud platform user",
                    "type": "string"
                },
                "type": {
                    "description": "type of cloud platform",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "CloudPlatformResp": {
            "type": "object",
            "title": "CloudPlatformResp",
            "properties": {
                "cloud_platform": {
                    "description": "cloud platform",
                    "$ref": "#/definitions/CloudPlatform"
                }
            }
        },
        "CloudPlatformUpdateReq": {
            "type": "object",
            "title": "CloudPlatformUpdateReq",
            "properties": {
                "cloud_platform": {
                    "$ref": "#/definitions/CloudPlatformUpdateReq_Platform"
                }
            }
        },
        "CloudPlatformUpdateReq_Platform": {
            "type": "object",
            "title": "CloudPlatformUpdateReq_Platform",
            "properties": {
                "name": {
                    "description": "name of cloud platform",
                    "type": "string"
                },
                "password": {
                    "description": "password of cloud platform user",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "CloudPlatform_Nestview": {
            "type": "object",
            "title": "CloudPlatform_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "CloudPlatformsResp": {
            "type": "object",
            "title": "CloudPlatformsResp",
            "properties": {
                "cloud_platforms": {
                    "description": "cloud platforms",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudPlatform"
                    }
                }
            }
        },
        "CloudVolume": {
            "description": "CloudVolume defines volumes of the cloud platform",
            "type": "object",
            "title": "CloudVolume",
            "properties": {
                "block_volume": {
                    "$ref": "#/definitions/Volume_Nestview"
                },
                "cloud_datacenter": {
                    "$ref": "#/definitions/CloudDatacenter_Nestview"
                },
                "cloud_platform": {
                    "$ref": "#/definitions/CloudPlatform_Nestview"
                },
                "cloud_volume_id": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "multi_attach": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CloudVolumeAttachment": {
            "description": "CloudVolumeAttachment defines volume attachment relationship with cloud\ninstances",
            "type": "object",
            "title": "CloudVolumeAttachment",
            "properties": {
                "block_volume": {
                    "$ref": "#/definitions/Volume_Nestview"
                },
                "cloud_instance": {
                    "$ref": "#/definitions/CloudInstance_Nestview"
                },
                "cloud_volume": {
                    "$ref": "#/definitions/CloudVolume_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "device": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CloudVolumeAttachmentsResp": {
            "type": "object",
            "title": "CloudVolumeAttachmentsResp",
            "properties": {
                "cloud_volume_attachments": {
                    "description": "cloud volume attachments",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudVolumeAttachment"
                    }
                }
            }
        },
        "CloudVolumeResp": {
            "type": "object",
            "title": "CloudVolumeResp",
            "properties": {
                "cloud_volume": {
                    "description": "cloud volume",
                    "$ref": "#/definitions/CloudVolume"
                }
            }
        },
        "CloudVolume_Nestview": {
            "type": "object",
            "title": "CloudVolume_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "CloudVolumesResp": {
            "type": "object",
            "title": "CloudVolumesResp",
            "properties": {
                "cloud_volumes": {
                    "description": "cloud volumes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudVolume"
                    }
                }
            }
        },
        "Cluster": {
            "description": "Cluster contains information of a cluster and it's stats.",
            "type": "object",
            "title": "Cluster",
            "properties": {
                "access_token": {
                    "$ref": "#/definitions/AccessToken"
                },
                "access_url": {
                    "type": "string"
                },
                "action_status": {
                    "type": "string"
                },
                "admin_access_token_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "admin_network": {
                    "type": "string"
                },
                "boot_node": {
                    "$ref": "#/definitions/BootNode"
                },
                "contain_os_osd": {
                    "type": "boolean"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "default": {
                    "type": "boolean"
                },
                "disk_lighting_mode": {
                    "type": "string"
                },
                "down_out_interval": {
                    "type": "integer",
                    "format": "int64"
                },
                "elasticsearch_enabled": {
                    "type": "boolean"
                },
                "fs_id": {
                    "type": "string"
                },
                "gateway_network": {
                    "type": "string"
                },
                "host_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "host_num_in_dc": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_set_partition": {
                    "type": "boolean"
                },
                "is_set_topology": {
                    "type": "boolean"
                },
                "is_skip_partition": {
                    "type": "boolean"
                },
                "journal_partition_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "maintained": {
                    "type": "boolean"
                },
                "metadata_partition_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "os_gateway_oplog_switch": {
                    "type": "boolean"
                },
                "osp_cluster_network": {
                    "type": "string"
                },
                "osp_gateway_network": {
                    "type": "string"
                },
                "private_network": {
                    "type": "string"
                },
                "public_network": {
                    "type": "string"
                },
                "snmp_enabled": {
                    "type": "boolean"
                },
                "stats_reserved_days": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ClusterAddHostsReq": {
            "type": "object",
            "title": "ClusterAddHostsReq",
            "required": [
                "cluster"
            ],
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/ClusterAddHostsReq_Cluster"
                }
            }
        },
        "ClusterAddHostsReq_Cluster": {
            "type": "object",
            "title": "ClusterAddHostsReq_Cluster",
            "properties": {
                "ceph_hosts": {
                    "description": "ceph host list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CephHostReq"
                    }
                },
                "osp_hosts": {
                    "description": "osp host list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OspHostReq"
                    }
                }
            }
        },
        "ClusterCreateBootNodeReq": {
            "type": "object",
            "title": "ClusterCreateBootNodeReq",
            "required": [
                "host_id",
                "public_network",
                "private_network"
            ],
            "properties": {
                "gateway_ips": {
                    "description": "gateway ips for s3",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gateway_network": {
                    "description": "gateway network",
                    "type": "string"
                },
                "host_id": {
                    "description": "boot node host id",
                    "type": "integer",
                    "format": "int64"
                },
                "private_ip": {
                    "description": "cluster private ip for internal data access",
                    "type": "string"
                },
                "private_network": {
                    "description": "private network",
                    "type": "string"
                },
                "public_ip": {
                    "description": "public ip for outside data access",
                    "type": "string"
                },
                "public_network": {
                    "description": "public network",
                    "type": "string"
                },
                "roles": {
                    "description": "host roles:\nadmin,monitor,block_storage_gateway,file_storage_gateway,s3_gateway,nfs_gateway",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ClusterCreateNetworkReq": {
            "type": "object",
            "title": "ClusterCreateNetworkReq",
            "required": [
                "public_network",
                "private_network"
            ],
            "properties": {
                "gateway_network": {
                    "description": "gateway network",
                    "type": "string"
                },
                "osp_cluster_network": {
                    "description": "osp cluster network",
                    "type": "string"
                },
                "osp_gateway_network": {
                    "description": "osp gateway network",
                    "type": "string"
                },
                "private_network": {
                    "description": "private network",
                    "type": "string"
                },
                "public_network": {
                    "description": "public network",
                    "type": "string"
                }
            }
        },
        "ClusterCreateReq": {
            "type": "object",
            "title": "ClusterCreateReq",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/ClusterCreateReq_Cluster"
                }
            }
        },
        "ClusterCreateReq_Cluster": {
            "type": "object",
            "title": "ClusterCreateReq_Cluster",
            "required": [
                "name",
                "fs_id"
            ],
            "properties": {
                "bootnode": {
                    "description": "cluster boot node info",
                    "$ref": "#/definitions/ClusterCreateBootNodeReq"
                },
                "fs_id": {
                    "description": "cluster fs id",
                    "type": "string"
                },
                "name": {
                    "description": "cluster name",
                    "type": "string"
                },
                "network": {
                    "description": "cluster network info",
                    "$ref": "#/definitions/ClusterCreateNetworkReq"
                },
                "type": {
                    "description": "cluster type: ceph or osp",
                    "type": "string"
                }
            }
        },
        "ClusterInstallation": {
            "description": "ClusterInstallation returns installation status of the cluster",
            "type": "object",
            "title": "ClusterInstallation",
            "properties": {
                "finished": {
                    "type": "boolean"
                },
                "steps": {
                    "$ref": "#/definitions/ClusterInstallation_Steps"
                }
            }
        },
        "ClusterInstallationResp": {
            "type": "object",
            "title": "ClusterInstallationResp",
            "properties": {
                "installation": {
                    "description": "installation status",
                    "$ref": "#/definitions/ClusterInstallation"
                }
            }
        },
        "ClusterInstallation_Steps": {
            "type": "object",
            "title": "ClusterInstallation_Steps",
            "properties": {
                "bootnode": {
                    "description": "step of setting boot node",
                    "type": "boolean"
                },
                "license": {
                    "description": "step of registering license",
                    "type": "boolean"
                },
                "user": {
                    "description": "step of creating user",
                    "type": "boolean"
                }
            }
        },
        "ClusterMaintainReq": {
            "type": "object",
            "title": "ClusterMaintainReq",
            "required": [
                "cluster"
            ],
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/ClusterMaintainReq_Cluster"
                }
            }
        },
        "ClusterMaintainReq_Cluster": {
            "type": "object",
            "title": "ClusterMaintainReq_Cluster",
            "required": [
                "maintained"
            ],
            "properties": {
                "cluster_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "maintained": {
                    "type": "boolean"
                }
            }
        },
        "ClusterOverview": {
            "description": "ClusterOverview contains overview data of a cluster",
            "type": "object",
            "title": "ClusterOverview",
            "properties": {
                "access_path_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "access_path_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "access_path_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "access_path_warning_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "block_volume_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "block_volume_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "block_volume_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "client_group_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "client_group_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "client_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cloud_instance_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cloud_platform_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cloud_volume_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_gateway_group_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_gateway_group_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_gateway_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_gateway_group_warning_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_rootfs_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_rootfs_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_rootfs_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_s3_bucket_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_s3_bucket_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_s3_bucket_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_client_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_client_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_folder_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_folder_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_folder_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_gateway_group_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_gateway_group_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_gateway_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_gateway_group_warning_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_snapshot_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_snapshot_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_user_available_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_user_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "host_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "host_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "host_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "host_offline_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "host_warning_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "metadata_cluster_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "metadata_cluster_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "metadata_cluster_full_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "metadata_cluster_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "metadata_cluster_warning_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "metadata_service_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "metadata_service_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "metadata_service_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "metadata_service_offline_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "metadata_service_warning_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "nfs_gateway_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "nfs_gateway_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "nfs_gateway_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "nfs_gateway_stopped_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_bucket_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_bucket_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_bucket_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_gateway_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_gateway_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_gateway_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_gateway_stopped_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_policy_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_policy_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_policy_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_user_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_user_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_user_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "osd_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "osd_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "osd_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "osd_offline_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "osd_warning_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "partition_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "partition_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "partition_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "partition_used_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pd_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pd_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pd_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pd_warning_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pool_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pool_degraded_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pool_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pool_full_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pool_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pool_recovering_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_load_balancer_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_load_balancer_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_load_balancer_group_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_load_balancer_group_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_load_balancer_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_load_balancer_group_warning_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_load_balancer_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_mon_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_mon_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_mon_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_mon_stopped_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_xdc_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_xdc_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_xdc_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_xdc_stopped_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_xms_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_xms_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_xms_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_xms_stopped_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "snapshot_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "snapshot_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ClusterOverviewResp": {
            "type": "object",
            "title": "ClusterOverviewResp",
            "required": [
                "cluster_stats"
            ],
            "properties": {
                "cluster_stats": {
                    "description": "cluster overview",
                    "$ref": "#/definitions/ClusterOverview"
                }
            }
        },
        "ClusterRecord": {
            "description": "ClusterRecord defines the response content of cluster related API",
            "type": "object",
            "title": "ClusterRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/Cluster"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClusterStat"
                            }
                        }
                    }
                }
            ]
        },
        "ClusterRecordResp": {
            "type": "object",
            "title": "ClusterRecordResp",
            "required": [
                "cluster"
            ],
            "properties": {
                "cluster": {
                    "description": "cluster info",
                    "$ref": "#/definitions/ClusterRecord"
                }
            }
        },
        "ClusterRemoveHostsReq": {
            "type": "object",
            "title": "ClusterRemoveHostsReq",
            "required": [
                "cluster"
            ],
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/ClusterRemoveHostsReq_Cluster"
                }
            }
        },
        "ClusterRemoveHostsReq_Cluster": {
            "type": "object",
            "title": "ClusterRemoveHostsReq_Cluster",
            "properties": {
                "ceph_host_ids": {
                    "description": "ceph host ids",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "osp_host_ids": {
                    "description": "osp host ids",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ClusterResp": {
            "type": "object",
            "title": "ClusterResp",
            "required": [
                "cluster"
            ],
            "properties": {
                "cluster": {
                    "description": "cluster",
                    "$ref": "#/definitions/Cluster"
                }
            }
        },
        "ClusterSamplesResp": {
            "type": "object",
            "title": "ClusterSamplesResp",
            "required": [
                "cluster_samples"
            ],
            "properties": {
                "cluster_samples": {
                    "description": "cluster samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClusterStat"
                    }
                }
            }
        },
        "ClusterServerTimeResp": {
            "type": "object",
            "title": "ClusterServerTimeResp",
            "properties": {
                "server_time": {
                    "description": "current server time",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ClusterService": {
            "description": "ClusterService defines cluster services of xms +X:model:generate;check_get;\n+X:benchmark:",
            "type": "object",
            "title": "ClusterService",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "data": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ClusterServiceResp": {
            "type": "object",
            "title": "ClusterServiceResp",
            "properties": {
                "cluster_service": {
                    "$ref": "#/definitions/ClusterService"
                }
            }
        },
        "ClusterServicesResp": {
            "type": "object",
            "title": "ClusterServicesResp",
            "properties": {
                "cluster_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClusterService"
                    }
                }
            }
        },
        "ClusterSetAccessInfoReq": {
            "type": "object",
            "title": "ClusterSetAccessInfoReq",
            "required": [
                "cluster"
            ],
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/ClusterSetAccessInfoReq_Cluster"
                }
            }
        },
        "ClusterSetAccessInfoReq_Cluster": {
            "type": "object",
            "title": "ClusterSetAccessInfoReq_Cluster",
            "required": [
                "access_url",
                "access_token_id"
            ],
            "properties": {
                "access_token_id": {
                    "description": "access token",
                    "type": "integer",
                    "format": "int64"
                },
                "access_url": {
                    "description": "access url",
                    "type": "string"
                }
            }
        },
        "ClusterSetNetworkReq": {
            "type": "object",
            "title": "ClusterSetNetworkReq",
            "required": [
                "cluster"
            ],
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/ClusterSetNetworkReq_Cluster"
                }
            }
        },
        "ClusterSetNetworkReq_Cluster": {
            "type": "object",
            "title": "ClusterSetNetworkReq_Cluster",
            "required": [
                "gateway"
            ],
            "properties": {
                "gateway": {
                    "description": "gateway networks",
                    "type": "string"
                }
            }
        },
        "ClusterStat": {
            "description": "ClusterStat defines the statistics metric of a ceph cluster",
            "type": "object",
            "title": "ClusterStat",
            "properties": {
                "actual_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "allocated_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "data_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "degraded_percent": {
                    "type": "number",
                    "format": "double"
                },
                "error_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "healthy_percent": {
                    "type": "number",
                    "format": "double"
                },
                "max_available_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "min_available_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_down_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "os_down_iops": {
                    "type": "number",
                    "format": "double"
                },
                "os_merge_speed": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_up_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "os_up_iops": {
                    "type": "number",
                    "format": "double"
                },
                "read_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "read_iops": {
                    "type": "number",
                    "format": "double"
                },
                "read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_iops": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_percent": {
                    "type": "number",
                    "format": "double"
                },
                "total_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "unavailable_percent": {
                    "type": "number",
                    "format": "double"
                },
                "used_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "write_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "write_iops": {
                    "type": "number",
                    "format": "double"
                },
                "write_latency_us": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ClusterStatsPredictionResp": {
            "type": "object",
            "title": "ClusterStatsPredictionResp",
            "properties": {
                "stats_usage_bytes_per_day": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ClusterUpdateReq": {
            "type": "object",
            "title": "ClusterUpdateReq",
            "required": [
                "cluster"
            ],
            "properties": {
                "cluster": {
                    "description": "cluster",
                    "$ref": "#/definitions/ClusterUpdateReq_Cluster"
                }
            }
        },
        "ClusterUpdateReq_Cluster": {
            "type": "object",
            "title": "ClusterUpdateReq_Cluster",
            "properties": {
                "disk_lighting_mode": {
                    "description": "disk lighting mode",
                    "type": "string"
                },
                "down_out_interval": {
                    "description": "down out interval",
                    "type": "integer",
                    "format": "int64"
                },
                "elasticsearch_enabled": {
                    "description": "enabled or disable elasticsearch",
                    "type": "boolean"
                },
                "name": {
                    "description": "disk lighting mode",
                    "type": "string"
                },
                "os_gateway_oplog_switch": {
                    "description": "os gateway oplog switch",
                    "type": "boolean"
                },
                "stats_reserved_days": {
                    "description": "stats reserve days",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Cluster_Nestview": {
            "type": "object",
            "title": "Cluster_Nestview",
            "properties": {
                "fs_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ClustersResp": {
            "type": "object",
            "title": "ClustersResp",
            "properties": {
                "clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Cluster"
                    }
                }
            }
        },
        "ClustersUpdateReq": {
            "type": "object",
            "title": "ClustersUpdateReq",
            "required": [
                "cluster"
            ],
            "properties": {
                "cluster": {
                    "description": "cluster",
                    "$ref": "#/definitions/ClustersUpdateReq_Cluster"
                }
            }
        },
        "ClustersUpdateReq_Cluster": {
            "type": "object",
            "title": "ClustersUpdateReq_Cluster",
            "required": [
                "name"
            ],
            "properties": {
                "gateway_network": {
                    "description": "gateway network",
                    "type": "string"
                },
                "name": {
                    "description": "cluster name",
                    "type": "string"
                },
                "osp_cluster_network": {
                    "description": "osp cluster network",
                    "type": "string"
                },
                "osp_gateway_network": {
                    "description": "osp gateway network",
                    "type": "string"
                },
                "private_network": {
                    "description": "private network",
                    "type": "string"
                },
                "public_network": {
                    "description": "public network",
                    "type": "string"
                },
                "stats_reserved_days": {
                    "description": "stats reserve days",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Condition": {
            "description": "Condition struct. work for WHERE conditions.",
            "type": "object",
            "title": "Condition",
            "properties": {
                "key": {
                    "type": "string"
                },
                "max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "min_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "operator": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ConfItem": {
            "description": "ConfItem is a config pair +X:model:generate +X:benchmark:",
            "type": "object",
            "title": "ConfItem",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "key": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ConfItemResp": {
            "type": "object",
            "title": "ConfItemResp",
            "required": [
                "conf"
            ],
            "properties": {
                "conf": {
                    "description": "conf item",
                    "$ref": "#/definitions/ConfItem"
                }
            }
        },
        "ConfItemSetReq": {
            "type": "object",
            "title": "ConfItemSetReq",
            "required": [
                "conf"
            ],
            "properties": {
                "conf": {
                    "$ref": "#/definitions/ConfItemSetReq_ConfItem"
                }
            }
        },
        "ConfItemSetReq_ConfItem": {
            "type": "object",
            "title": "ConfItemSetReq_ConfItem",
            "required": [
                "type",
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ConfItemsResp": {
            "type": "object",
            "title": "ConfItemsResp",
            "required": [
                "confs"
            ],
            "properties": {
                "confs": {
                    "description": "conf items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ConfItem"
                    }
                }
            }
        },
        "ConfItemsSetReq": {
            "type": "object",
            "title": "ConfItemsSetReq",
            "required": [
                "confs"
            ],
            "properties": {
                "confs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ConfType": {
            "description": "ConfType is a config type.",
            "type": "object",
            "title": "ConfType",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "ConfTypesResp": {
            "type": "object",
            "title": "ConfTypesResp",
            "properties": {
                "conf_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ConfType"
                    }
                }
            }
        },
        "ConsistentSnapshot": {
            "description": "ConsistentSnapshot defines the model of consistent snapshot\n+X:model:generate;plur=ConsistentSnapshots; +X:benchmark:",
            "type": "object",
            "title": "ConsistentSnapshot",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "snap_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "ConsistentSnapshotCreateReq": {
            "type": "object",
            "title": "ConsistentSnapshotCreateReq",
            "required": [
                "block_consistent_snapshot"
            ],
            "properties": {
                "block_consistent_snapshot": {
                    "$ref": "#/definitions/ConsistentSnapshotCreateReq_ConsistentSnapshot"
                }
            }
        },
        "ConsistentSnapshotCreateReq_ConsistentSnapshot": {
            "type": "object",
            "title": "ConsistentSnapshotCreateReq_ConsistentSnapshot",
            "required": [
                "block_volume_ids"
            ],
            "properties": {
                "block_volume_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "snap_uids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ConsistentSnapshotResp": {
            "type": "object",
            "title": "ConsistentSnapshotResp",
            "required": [
                "block_consistent_snapshot"
            ],
            "properties": {
                "block_consistent_snapshot": {
                    "$ref": "#/definitions/ConsistentSnapshot"
                }
            }
        },
        "ConsistentSnapshot_Nestview": {
            "type": "object",
            "title": "ConsistentSnapshot_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "snap_name": {
                    "type": "string"
                }
            }
        },
        "ConsistentSnapshotsResp": {
            "type": "object",
            "title": "ConsistentSnapshotsResp",
            "required": [
                "block_consistent_snapshots"
            ],
            "properties": {
                "block_consistent_snapshots": {
                    "description": "snapshots",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ConsistentSnapshot"
                    }
                }
            }
        },
        "CryptoKey": {
            "description": "CryptoKey is a crypto key",
            "type": "object",
            "title": "CryptoKey",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CryptoKeyResp": {
            "type": "object",
            "title": "CryptoKeyResp",
            "required": [
                "crypto_key"
            ],
            "properties": {
                "crypto_key": {
                    "$ref": "#/definitions/CryptoKey"
                }
            }
        },
        "CryptoKeyUpdateReq": {
            "type": "object",
            "title": "CryptoKeyUpdateReq",
            "properties": {
                "crypto_key": {
                    "$ref": "#/definitions/CryptoKeyUpdateReq_Key"
                }
            }
        },
        "CryptoKeyUpdateReq_Key": {
            "type": "object",
            "title": "CryptoKeyUpdateReq_Key",
            "properties": {
                "enabled": {
                    "description": "enable or disable the key",
                    "type": "boolean"
                }
            }
        },
        "CryptoKey_Nestview": {
            "type": "object",
            "title": "CryptoKey_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "CryptoKeysResp": {
            "type": "object",
            "title": "CryptoKeysResp",
            "required": [
                "crypto_keys"
            ],
            "properties": {
                "crypto_keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CryptoKey"
                    }
                }
            }
        },
        "DNSDomainName": {
            "description": "DNSDomainName model. +X:model:generate;check_get +X:benchmark:",
            "type": "object",
            "title": "DNSDomainName",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dns_load_balance_policy": {
                    "$ref": "#/definitions/DNSLoadBalancePolicy_Nestview"
                },
                "dns_zone": {
                    "$ref": "#/definitions/DNSZone"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "resource_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_name": {
                    "description": "resource_name only needs to be displayed on the UI",
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DNSDomainNameCreateReq": {
            "type": "object",
            "title": "DNSDomainNameCreateReq",
            "required": [
                "dns_domain_name"
            ],
            "properties": {
                "dns_domain_name": {
                    "$ref": "#/definitions/DNSDomainNameCreateReq_DomainName"
                }
            }
        },
        "DNSDomainNameCreateReq_DomainName": {
            "type": "object",
            "title": "DNSDomainNameCreateReq_DomainName",
            "required": [
                "name",
                "resource_type",
                "resource_id",
                "dns_zone_id",
                "dns_load_balance_policy_id"
            ],
            "properties": {
                "dns_load_balance_policy_id": {
                    "description": "dns domain name policy id",
                    "type": "integer",
                    "format": "int64"
                },
                "dns_zone_id": {
                    "description": "dns zone id",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "dns domain name",
                    "type": "string"
                },
                "resource_id": {
                    "description": "related resource id",
                    "type": "integer",
                    "format": "int64"
                },
                "resource_type": {
                    "description": "related resource type",
                    "type": "string"
                }
            }
        },
        "DNSDomainNameResp": {
            "type": "object",
            "title": "DNSDomainNameResp",
            "properties": {
                "dns_domain_name": {
                    "description": "dns domain name",
                    "$ref": "#/definitions/DNSDomainName"
                }
            }
        },
        "DNSDomainNameUpdateReq": {
            "type": "object",
            "title": "DNSDomainNameUpdateReq",
            "required": [
                "dns_domain_name"
            ],
            "properties": {
                "dns_domain_name": {
                    "$ref": "#/definitions/DNSDomainNameUpdateReq_DomainName"
                }
            }
        },
        "DNSDomainNameUpdateReq_DomainName": {
            "type": "object",
            "title": "DNSDomainNameUpdateReq_DomainName",
            "required": [
                "dns_load_balance_policy_id"
            ],
            "properties": {
                "dns_load_balance_policy_id": {
                    "description": "dns domain name policy id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DNSDomainNamesResp": {
            "type": "object",
            "title": "DNSDomainNamesResp",
            "properties": {
                "dns_domain_names": {
                    "description": "dns domain name list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSDomainName"
                    }
                }
            }
        },
        "DNSGateway": {
            "description": "DNSGateway model. +X:model:generate;check_get +X:benchmark:",
            "type": "object",
            "title": "DNSGateway",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dns_gateway_group": {
                    "$ref": "#/definitions/DNSGatewayGroup_Nestview"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DNSGatewayGroup": {
            "description": "DNSGatewayGroup model. +X:model:generate;related_depth=1;check_get +X:benchmark:",
            "type": "object",
            "title": "DNSGatewayGroup",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DNSGatewayGroupAddGatewayReq": {
            "type": "object",
            "title": "DNSGatewayGroupAddGatewayReq",
            "properties": {
                "dns_gateways": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSGatewayGroupAddGatewayReq_Gateways_Elt"
                    }
                }
            }
        },
        "DNSGatewayGroupAddGatewayReq_Gateways_Elt": {
            "type": "object",
            "title": "DNSGatewayGroupAddGatewayReq_Gateways_Elt",
            "properties": {
                "host_id": {
                    "description": "host id of dns gateway",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DNSGatewayGroupCreateReq": {
            "type": "object",
            "title": "DNSGatewayGroupCreateReq",
            "required": [
                "dns_gateway_group"
            ],
            "properties": {
                "dns_gateway_group": {
                    "$ref": "#/definitions/DNSGatewayGroupCreateReq_Group"
                }
            }
        },
        "DNSGatewayGroupCreateReq_Group": {
            "type": "object",
            "title": "DNSGatewayGroupCreateReq_Group",
            "required": [
                "name",
                "host_ids",
                "port",
                "origin"
            ],
            "properties": {
                "host_ids": {
                    "description": "dns gateway id list",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "name": {
                    "description": "dns gateway group name",
                    "type": "string"
                },
                "origin": {
                    "description": "dns origin",
                    "type": "string"
                },
                "port": {
                    "description": "dns service port",
                    "type": "integer",
                    "format": "int64"
                },
                "ttl": {
                    "description": "dns ttl with zone",
                    "type": "integer",
                    "format": "int64"
                },
                "vip_groups": {
                    "description": "dns vip groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSGatewayGroupCreateReq_Group_VIPGroups_Elt"
                    }
                }
            }
        },
        "DNSGatewayGroupCreateReq_Group_VIPGroups_Elt": {
            "type": "object",
            "title": "DNSGatewayGroupCreateReq_Group_VIPGroups_Elt",
            "required": [
                "network"
            ],
            "properties": {
                "network": {
                    "description": "network of vip group",
                    "type": "string"
                },
                "vips": {
                    "description": "vip list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VIPArgs"
                    }
                }
            }
        },
        "DNSGatewayGroupRemoveGatewayReq": {
            "type": "object",
            "title": "DNSGatewayGroupRemoveGatewayReq",
            "properties": {
                "dns_gateways": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSGatewayGroupRemoveGatewayReq_Gateways_Elt"
                    }
                }
            }
        },
        "DNSGatewayGroupRemoveGatewayReq_Gateways_Elt": {
            "type": "object",
            "title": "DNSGatewayGroupRemoveGatewayReq_Gateways_Elt",
            "properties": {
                "id": {
                    "description": "dns gateway id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DNSGatewayGroupResp": {
            "type": "object",
            "title": "DNSGatewayGroupResp",
            "properties": {
                "dns_gateway_group": {
                    "description": "dns gateway group",
                    "$ref": "#/definitions/DNSGatewayGroup"
                }
            }
        },
        "DNSGatewayGroup_Nestview": {
            "type": "object",
            "title": "DNSGatewayGroup_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DNSGatewayGroupsResp": {
            "type": "object",
            "title": "DNSGatewayGroupsResp",
            "properties": {
                "dns_gateway_groups": {
                    "description": "dns gateway group list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSGatewayGroup"
                    }
                }
            }
        },
        "DNSGatewayResp": {
            "type": "object",
            "title": "DNSGatewayResp",
            "properties": {
                "dns_gateway": {
                    "description": "dns gateway",
                    "$ref": "#/definitions/DNSGateway"
                }
            }
        },
        "DNSGatewaysResp": {
            "type": "object",
            "title": "DNSGatewaysResp",
            "properties": {
                "dns_gateways": {
                    "description": "dns gateway list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSGateway"
                    }
                }
            }
        },
        "DNSLoadBalancePoliciesResp": {
            "type": "object",
            "title": "DNSLoadBalancePoliciesResp",
            "properties": {
                "dns_load_balance_policies": {
                    "description": "dns load balance policy list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSLoadBalancePolicy"
                    }
                }
            }
        },
        "DNSLoadBalancePolicy": {
            "description": "DNSLoadBalancePolicy model\n+X:model:generate;plur=DNSLoadBalancePolicies;;order_by=ID;check_get\n+X:benchmark:",
            "type": "object",
            "title": "DNSLoadBalancePolicy",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DNSLoadBalancePolicy_Nestview": {
            "type": "object",
            "title": "DNSLoadBalancePolicy_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                }
            }
        },
        "DNSZone": {
            "description": "DNSZone model. +X:model:generate;check_get +X:benchmark:",
            "type": "object",
            "title": "DNSZone",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dns_gateway_group": {
                    "$ref": "#/definitions/DNSGatewayGroup_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "origin": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DNSZoneResp": {
            "type": "object",
            "title": "DNSZoneResp",
            "properties": {
                "dns_zone": {
                    "description": "dns zone",
                    "$ref": "#/definitions/DNSZone"
                }
            }
        },
        "DNSZoneUpdateReq": {
            "type": "object",
            "title": "DNSZoneUpdateReq",
            "properties": {
                "dns_zone": {
                    "$ref": "#/definitions/DNSZoneUpdateReq_Zone"
                }
            }
        },
        "DNSZoneUpdateReq_Zone": {
            "type": "object",
            "title": "DNSZoneUpdateReq_Zone",
            "properties": {
                "origin": {
                    "description": "dns origin in zone",
                    "type": "string"
                },
                "ttl": {
                    "description": "dns ttl with zone",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DNSZonesResp": {
            "type": "object",
            "title": "DNSZonesResp",
            "properties": {
                "dns_zones": {
                    "description": "dns zone list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSZone"
                    }
                }
            }
        },
        "DataKbytePredictionPoint": {
            "description": "DataKbytePredictionPoint is a point in a prediction graph",
            "type": "object",
            "title": "DataKbytePredictionPoint",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "data_kbyte": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DeleteHostsGatewayLbGroupOpReq": {
            "type": "object",
            "title": "DeleteHostsGatewayLbGroupOpReq",
            "properties": {
                "osp_zone": {
                    "$ref": "#/definitions/DeleteHostsGatewayLbGroupOpReq_OspZone"
                }
            }
        },
        "DeleteHostsGatewayLbGroupOpReq_OspZone": {
            "type": "object",
            "title": "DeleteHostsGatewayLbGroupOpReq_OspZone",
            "properties": {
                "osp_zone_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsAuditLog": {
            "description": "DfsAuditLog defines model of dfs audit log +X:model:generate;order_by=-ID\n+X:benchmark:",
            "type": "object",
            "title": "DfsAuditLog",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "log_path": {
                    "type": "string"
                },
                "rootfs": {
                    "$ref": "#/definitions/DfsRootfs_Nestview"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsAuditLogResp": {
            "type": "object",
            "title": "DfsAuditLogResp",
            "required": [
                "dfs_audit_log"
            ],
            "properties": {
                "dfs_audit_log": {
                    "$ref": "#/definitions/DfsAuditLog"
                }
            }
        },
        "DfsAuditLogUpdateReq": {
            "type": "object",
            "title": "DfsAuditLogUpdateReq",
            "required": [
                "dfs_audit_log"
            ],
            "properties": {
                "dfs_audit_log": {
                    "description": "audit log",
                    "$ref": "#/definitions/DfsAuditLogUpdateReq_AuditLog"
                }
            }
        },
        "DfsAuditLogUpdateReq_AuditLog": {
            "type": "object",
            "title": "DfsAuditLogUpdateReq_AuditLog",
            "required": [
                "dfs_rootfs_id"
            ],
            "properties": {
                "actions": {
                    "description": "actions need to audit",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dfs_rootfs_id": {
                    "description": "rootfs id",
                    "type": "integer",
                    "format": "int64"
                },
                "log_path": {
                    "description": "audit log path",
                    "type": "string"
                },
                "size": {
                    "description": "max size of audit log",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsAuditLogsResp": {
            "type": "object",
            "title": "DfsAuditLogsResp",
            "required": [
                "dfs_audit_logs"
            ],
            "properties": {
                "dfs_audit_logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsAuditLog"
                    }
                }
            }
        },
        "DfsDirectoriesReq": {
            "type": "object",
            "title": "DfsDirectoriesReq",
            "required": [
                "dfs_directories"
            ],
            "properties": {
                "dfs_directories": {
                    "$ref": "#/definitions/DfsDirectoriesReq_Directories"
                }
            }
        },
        "DfsDirectoriesReq_Directories": {
            "type": "object",
            "title": "DfsDirectoriesReq_Directories",
            "required": [
                "dfs_rootfs_id",
                "directories"
            ],
            "properties": {
                "dfs_rootfs_id": {
                    "description": "dfs rootfs id",
                    "type": "integer",
                    "format": "int64"
                },
                "directories": {
                    "description": "directory paths",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DfsDirectoriesResp": {
            "type": "object",
            "title": "DfsDirectoriesResp",
            "required": [
                "dfs_directories"
            ],
            "properties": {
                "dfs_directories": {
                    "$ref": "#/definitions/DfsDirectoriesResp_Directories"
                }
            }
        },
        "DfsDirectoriesResp_Directories": {
            "type": "object",
            "title": "DfsDirectoriesResp_Directories",
            "required": [
                "dfs_rootfs",
                "directory_results"
            ],
            "properties": {
                "dfs_rootfs": {
                    "description": "dfs rootfs",
                    "$ref": "#/definitions/DfsRootfs"
                },
                "directory_results": {
                    "description": "dfs directories operation results",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsDirectoryResultRespOld"
                    }
                }
            }
        },
        "DfsDirectoryReq": {
            "type": "object",
            "title": "DfsDirectoryReq",
            "required": [
                "dfs_directory"
            ],
            "properties": {
                "dfs_directory": {
                    "$ref": "#/definitions/DfsDirectoryReq_Directory"
                }
            }
        },
        "DfsDirectoryReq_Directory": {
            "type": "object",
            "title": "DfsDirectoryReq_Directory",
            "required": [
                "dfs_rootfs_id",
                "path"
            ],
            "properties": {
                "clean": {
                    "description": "clean resources with directory, used when deleting",
                    "type": "boolean"
                },
                "dfs_rootfs_id": {
                    "description": "dfs rootfs id",
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "description": "directory path",
                    "type": "string"
                },
                "recursive": {
                    "description": "recursive create directory, used when creating",
                    "type": "boolean"
                },
                "storage_policy_ids": {
                    "description": "storage policy id array",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "DfsDirectoryResourcesResp": {
            "type": "object",
            "title": "DfsDirectoryResourcesResp",
            "properties": {
                "dfs_directories": {
                    "$ref": "#/definitions/DfsDirectoryResourcesResp_Directory"
                }
            }
        },
        "DfsDirectoryResourcesResp_Directory": {
            "type": "object",
            "title": "DfsDirectoryResourcesResp_Directory",
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DirResource"
                    }
                }
            }
        },
        "DfsDirectoryResp": {
            "type": "object",
            "title": "DfsDirectoryResp",
            "required": [
                "dfs_directory"
            ],
            "properties": {
                "dfs_directory": {
                    "$ref": "#/definitions/DfsDirectoryResp_Directory"
                }
            }
        },
        "DfsDirectoryResp_Directory": {
            "type": "object",
            "title": "DfsDirectoryResp_Directory",
            "required": [
                "dfs_rootfs",
                "directory_result"
            ],
            "properties": {
                "dfs_rootfs": {
                    "description": "dfs rootfs",
                    "$ref": "#/definitions/DfsRootfs"
                },
                "directory_result": {
                    "description": "dfs directories operation results",
                    "$ref": "#/definitions/DfsDirectoryResultResp"
                },
                "storage_policy_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "DfsDirectoryResultResp": {
            "type": "object",
            "title": "DfsDirectoryResultResp",
            "required": [
                "directory",
                "result"
            ],
            "properties": {
                "directory": {
                    "description": "directory file",
                    "$ref": "#/definitions/DfsFile"
                },
                "result": {
                    "description": "operation result",
                    "type": "string"
                }
            }
        },
        "DfsDirectoryResultRespOld": {
            "type": "object",
            "title": "DfsDirectoryResultRespOld",
            "required": [
                "path",
                "result"
            ],
            "properties": {
                "path": {
                    "description": "directory path",
                    "type": "string"
                },
                "result": {
                    "description": "operation result",
                    "type": "string"
                }
            }
        },
        "DfsDirectoryValidationResp": {
            "type": "object",
            "title": "DfsDirectoryValidationResp",
            "required": [
                "dfs_directory"
            ],
            "properties": {
                "dfs_directory": {
                    "description": "directory info",
                    "$ref": "#/definitions/DfsDirectoryValidationResp_Directory"
                }
            }
        },
        "DfsDirectoryValidationResp_Directory": {
            "type": "object",
            "title": "DfsDirectoryValidationResp_Directory",
            "required": [
                "existed",
                "quota_existed",
                "share_existed",
                "snapshot_existed",
                "root_dir_snap_num",
                "dp_dfs_snapshot_policy_num",
                "parent_child_snapshot_existed",
                "parent_child_bucket_existed"
            ],
            "properties": {
                "dp_dfs_snapshot_policy_num": {
                    "description": "count of data protection snapshot policy on the directory",
                    "type": "integer",
                    "format": "int64"
                },
                "existed": {
                    "description": "directory existed",
                    "type": "boolean"
                },
                "parent_child_bucket_existed": {
                    "description": "bucket existed on the parent or child directory",
                    "type": "boolean"
                },
                "parent_child_snapshot_existed": {
                    "description": "snapshot existed on the parent or child directory",
                    "type": "boolean"
                },
                "quota_existed": {
                    "description": "quota existed on the directory",
                    "type": "boolean"
                },
                "root_dir_snap_num": {
                    "description": "count of snapshot on the root directory",
                    "type": "integer",
                    "format": "int64"
                },
                "share_existed": {
                    "description": "share existed on the directory",
                    "type": "boolean"
                },
                "snapshot_existed": {
                    "description": "snapshot existed on the directory",
                    "type": "boolean"
                }
            }
        },
        "DfsFTPSession": {
            "description": "DfsFTPSession defines model of dfs ftp session\n+X:model:generate;order_by=-ID;related_depth=2 +X:benchmark:",
            "type": "object",
            "title": "DfsFTPSession",
            "properties": {
                "client_ip": {
                    "type": "string"
                },
                "client_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "connected_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_ftp_share": {
                    "$ref": "#/definitions/DfsFTPShare_Nestview"
                },
                "dfs_gateway": {
                    "$ref": "#/definitions/DfsGateway_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "DfsFTPSessionsResp": {
            "type": "object",
            "title": "DfsFTPSessionsResp",
            "required": [
                "dfs_ftp_sessions"
            ],
            "properties": {
                "dfs_ftp_sessions": {
                    "description": "dfs ftp sessions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsFTPSession"
                    }
                }
            }
        },
        "DfsFTPShare": {
            "description": "DfsFTPShare defines model of dfs ftp share\n+X:model:generate;with_detailed;order_by=-ID +X:benchmark:",
            "type": "object",
            "title": "DfsFTPShare",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroup_Nestview"
                },
                "dfs_path": {
                    "$ref": "#/definitions/DfsPath_Nestview"
                },
                "dfs_rootfs": {
                    "$ref": "#/definitions/DfsRootfs_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total_snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "DfsFTPShareACL": {
            "description": "DfsFTPShareACL defines model of dfs ftp share ACL +X:model:generate;order_by=-ID\n+X:benchmark:",
            "type": "object",
            "title": "DfsFTPShareACL",
            "properties": {
                "admin_enabled": {
                    "type": "boolean"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "create_enabled": {
                    "type": "boolean"
                },
                "delete_enabled": {
                    "type": "boolean"
                },
                "dfs_ftp_share": {
                    "$ref": "#/definitions/DfsFTPShare_Nestview"
                },
                "download_bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "download_enabled": {
                    "type": "boolean"
                },
                "fs_user": {
                    "$ref": "#/definitions/FSUser_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "list_enabled": {
                    "type": "boolean"
                },
                "rename_enabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "upload_bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "upload_enabled": {
                    "type": "boolean"
                }
            }
        },
        "DfsFTPShareACLReq": {
            "type": "object",
            "title": "DfsFTPShareACLReq",
            "properties": {
                "admin_enabled": {
                    "description": "enable admin user permission",
                    "type": "boolean"
                },
                "create_enabled": {
                    "description": "enable creating files",
                    "type": "boolean"
                },
                "delete_enabled": {
                    "description": "enable deleting files",
                    "type": "boolean"
                },
                "download_bandwidth": {
                    "description": "max bandwidth of downloading",
                    "type": "integer",
                    "format": "int64"
                },
                "download_enabled": {
                    "description": "enable downloading files",
                    "type": "boolean"
                },
                "fs_user_id": {
                    "description": "id of user",
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "description": "id of user group",
                    "type": "integer",
                    "format": "int64"
                },
                "list_enabled": {
                    "description": "enable listing files",
                    "type": "boolean"
                },
                "rename_enabled": {
                    "description": "enable renaming files",
                    "type": "boolean"
                },
                "type": {
                    "description": "type of share acl",
                    "type": "string"
                },
                "upload_bandwidth": {
                    "description": "max bandwidth of uploading",
                    "type": "integer",
                    "format": "int64"
                },
                "upload_enabled": {
                    "description": "enable uploading files",
                    "type": "boolean"
                }
            }
        },
        "DfsFTPShareACLsResp": {
            "type": "object",
            "title": "DfsFTPShareACLsResp",
            "required": [
                "dfs_ftp_share_acls"
            ],
            "properties": {
                "dfs_ftp_share_acls": {
                    "description": "dfs ftp share acls",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsFTPShareACL"
                    }
                }
            }
        },
        "DfsFTPShareAddACLsReq": {
            "type": "object",
            "title": "DfsFTPShareAddACLsReq",
            "required": [
                "dfs_ftp_share"
            ],
            "properties": {
                "dfs_ftp_share": {
                    "$ref": "#/definitions/DfsFTPShareAddACLsReq_Share"
                }
            }
        },
        "DfsFTPShareAddACLsReq_Share": {
            "type": "object",
            "title": "DfsFTPShareAddACLsReq_Share",
            "required": [
                "dfs_ftp_share_acls"
            ],
            "properties": {
                "dfs_ftp_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsFTPShareACLReq"
                    }
                }
            }
        },
        "DfsFTPShareCreateReq": {
            "type": "object",
            "title": "DfsFTPShareCreateReq",
            "required": [
                "dfs_ftp_share"
            ],
            "properties": {
                "dfs_ftp_share": {
                    "$ref": "#/definitions/DfsFTPShareCreateReq_Share"
                }
            }
        },
        "DfsFTPShareCreateReq_Share": {
            "type": "object",
            "title": "DfsFTPShareCreateReq_Share",
            "required": [
                "name",
                "dfs_rootfs_id",
                "path"
            ],
            "properties": {
                "description": {
                    "description": "description of share",
                    "type": "string"
                },
                "dfs_ftp_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsFTPShareACLReq"
                    }
                },
                "dfs_rootfs_id": {
                    "description": "rootfs id",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name of share",
                    "type": "string"
                },
                "path": {
                    "description": "diectrory path",
                    "type": "string"
                }
            }
        },
        "DfsFTPShareRecord": {
            "description": "DfsFTPShareRecord combine DfsFTPShare and DfsPathPerformanceStat as API response",
            "type": "object",
            "title": "DfsFTPShareRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsFTPShare"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DfsFTPShareStat"
                            }
                        }
                    }
                }
            ]
        },
        "DfsFTPShareRemoveACLsReq": {
            "type": "object",
            "title": "DfsFTPShareRemoveACLsReq",
            "required": [
                "dfs_ftp_share"
            ],
            "properties": {
                "dfs_ftp_share": {
                    "$ref": "#/definitions/DfsFTPShareRemoveACLsReq_Share"
                }
            }
        },
        "DfsFTPShareRemoveACLsReq_Share": {
            "type": "object",
            "title": "DfsFTPShareRemoveACLsReq_Share",
            "required": [
                "dfs_ftp_share_acl_ids"
            ],
            "properties": {
                "dfs_ftp_share_acl_ids": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "DfsFTPShareResp": {
            "type": "object",
            "title": "DfsFTPShareResp",
            "required": [
                "dfs_ftp_share"
            ],
            "properties": {
                "dfs_ftp_share": {
                    "description": "dfs ftp share",
                    "$ref": "#/definitions/DfsFTPShareRecord"
                }
            }
        },
        "DfsFTPShareStat": {
            "description": "DfsFTPShareStat records dfs ftp share stat info",
            "type": "object",
            "title": "DfsFTPShareStat",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsPathPerformanceStat"
                }
            ]
        },
        "DfsFTPShareUpdateACLReq": {
            "type": "object",
            "title": "DfsFTPShareUpdateACLReq",
            "properties": {
                "admin_enabled": {
                    "description": "enable admin user permission",
                    "type": "boolean"
                },
                "create_enabled": {
                    "description": "enable creating files",
                    "type": "boolean"
                },
                "delete_enabled": {
                    "description": "enable deleting files",
                    "type": "boolean"
                },
                "download_bandwidth": {
                    "description": "max bandwidth of downloading",
                    "type": "integer",
                    "format": "int64"
                },
                "download_enabled": {
                    "description": "enable downloading files",
                    "type": "boolean"
                },
                "id": {
                    "description": "id of user group",
                    "type": "integer",
                    "format": "int64"
                },
                "list_enabled": {
                    "description": "enable listing files",
                    "type": "boolean"
                },
                "rename_enabled": {
                    "description": "enable renaming files",
                    "type": "boolean"
                },
                "upload_bandwidth": {
                    "description": "max bandwidth of uploading",
                    "type": "integer",
                    "format": "int64"
                },
                "upload_enabled": {
                    "description": "enable uploading files",
                    "type": "boolean"
                }
            }
        },
        "DfsFTPShareUpdateACLsReq": {
            "type": "object",
            "title": "DfsFTPShareUpdateACLsReq",
            "required": [
                "dfs_ftp_share"
            ],
            "properties": {
                "dfs_ftp_share": {
                    "$ref": "#/definitions/DfsFTPShareUpdateACLsReq_Share"
                }
            }
        },
        "DfsFTPShareUpdateACLsReq_Share": {
            "type": "object",
            "title": "DfsFTPShareUpdateACLsReq_Share",
            "properties": {
                "dfs_ftp_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsFTPShareUpdateACLReq"
                    }
                }
            }
        },
        "DfsFTPShareUpdateReq": {
            "type": "object",
            "title": "DfsFTPShareUpdateReq",
            "required": [
                "dfs_ftp_share"
            ],
            "properties": {
                "dfs_ftp_share": {
                    "$ref": "#/definitions/DfsFTPShareUpdateReq_Share"
                }
            }
        },
        "DfsFTPShareUpdateReq_Share": {
            "type": "object",
            "title": "DfsFTPShareUpdateReq_Share",
            "properties": {
                "description": {
                    "description": "description of share",
                    "type": "string"
                }
            }
        },
        "DfsFTPShare_Nestview": {
            "type": "object",
            "title": "DfsFTPShare_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DfsFTPSharesResp": {
            "type": "object",
            "title": "DfsFTPSharesResp",
            "required": [
                "dfs_ftp_shares"
            ],
            "properties": {
                "dfs_ftp_shares": {
                    "description": "dfs ftp share",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsFTPShareRecord"
                    }
                }
            }
        },
        "DfsFile": {
            "description": "DfsFile defines response for rmdir",
            "type": "object",
            "title": "DfsFile",
            "properties": {
                "access": {
                    "description": "access time",
                    "type": "string",
                    "format": "date-time"
                },
                "change": {
                    "description": "change time",
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_path_id": {
                    "description": "dfs path id",
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_path_performance_id": {
                    "description": "dfs path performance id",
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_rootfs": {
                    "description": "dfs rootfs",
                    "$ref": "#/definitions/NestedRootfs"
                },
                "dfs_storage_policies": {
                    "description": "dfs storage policies",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsStoragePolicy"
                    }
                },
                "dp_snapshot_num": {
                    "description": "count of data protection snapshot",
                    "type": "integer",
                    "format": "int64"
                },
                "files": {
                    "description": "sub file count when it is a directory",
                    "type": "integer",
                    "format": "int64"
                },
                "group": {
                    "description": "owner group",
                    "type": "integer",
                    "format": "int64"
                },
                "hdfs_num": {
                    "description": "count of hdfs",
                    "type": "integer",
                    "format": "int64"
                },
                "inode": {
                    "description": "inode count",
                    "type": "integer",
                    "format": "int64"
                },
                "is_bucket": {
                    "description": "is bucket path",
                    "type": "boolean"
                },
                "is_bucket_parent": {
                    "description": "is bucked parent path",
                    "type": "boolean"
                },
                "local_group_info": {
                    "description": "local fs user group in xms",
                    "$ref": "#/definitions/LocalGroupInfo"
                },
                "local_user_info": {
                    "description": "local fs user in xms",
                    "$ref": "#/definitions/LocalUserInfo"
                },
                "mode": {
                    "description": "file mode",
                    "type": "string"
                },
                "modify": {
                    "description": "modify time",
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "description": "file name",
                    "type": "string"
                },
                "original_name": {
                    "description": "original name before file moved to trash",
                    "type": "string"
                },
                "owner": {
                    "description": "owner user",
                    "type": "integer",
                    "format": "int64"
                },
                "parent": {
                    "description": "parent path",
                    "type": "string"
                },
                "parent_path_storage_policies": {
                    "description": "par path link dfs storage policies",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsStoragePolicy"
                    }
                },
                "path": {
                    "description": "full path",
                    "type": "string"
                },
                "qos": {
                    "description": "qos info",
                    "$ref": "#/definitions/DfsFileQos"
                },
                "quota_num": {
                    "description": "count of quota",
                    "type": "integer",
                    "format": "int64"
                },
                "shared": {
                    "description": "shared",
                    "type": "boolean"
                },
                "shares": {
                    "description": "share types",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "size": {
                    "description": "file size",
                    "type": "integer",
                    "format": "int64"
                },
                "snapshot_num": {
                    "description": "count of snapshot",
                    "type": "integer",
                    "format": "int64"
                },
                "stretched": {
                    "description": "is stretched directory",
                    "type": "boolean"
                },
                "total_snapshot_num": {
                    "description": "count of total snapshot",
                    "type": "integer",
                    "format": "int64"
                },
                "trash": {
                    "description": "dfs trash resource",
                    "$ref": "#/definitions/DfsFileTrash"
                },
                "type": {
                    "description": "file type",
                    "type": "string"
                },
                "worm": {
                    "description": "worm info",
                    "$ref": "#/definitions/DfsFileWorm"
                }
            }
        },
        "DfsFileBase": {
            "type": "object",
            "title": "DfsFileBase",
            "properties": {
                "files": {
                    "description": "sub file count when it is a directory",
                    "type": "integer",
                    "format": "int64"
                },
                "inode": {
                    "description": "inode count",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "file name",
                    "type": "string"
                },
                "path": {
                    "description": "full path",
                    "type": "string"
                },
                "size": {
                    "description": "file size",
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "description": "file type",
                    "type": "string"
                }
            }
        },
        "DfsFileBasesResp": {
            "type": "object",
            "title": "DfsFileBasesResp",
            "properties": {
                "dfs_files": {
                    "description": "dfs file list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsFileBase"
                    }
                },
                "eof": {
                    "description": "for ls directory, set to true when reach end",
                    "type": "boolean"
                }
            }
        },
        "DfsFileDeleteReq": {
            "type": "object",
            "title": "DfsFileDeleteReq",
            "required": [
                "dfs_file"
            ],
            "properties": {
                "dfs_file": {
                    "$ref": "#/definitions/DfsFileDeleteReq_File"
                }
            }
        },
        "DfsFileDeleteReq_File": {
            "type": "object",
            "title": "DfsFileDeleteReq_File",
            "required": [
                "privileged_token",
                "dfs_rootfs_id",
                "path"
            ],
            "properties": {
                "dfs_rootfs_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "type": "string"
                },
                "privileged_token": {
                    "type": "string"
                }
            }
        },
        "DfsFileQos": {
            "type": "object",
            "title": "DfsFileQos",
            "properties": {
                "dfs_qos": {
                    "description": "dfs qos resource",
                    "$ref": "#/definitions/DfsQos"
                },
                "state": {
                    "description": "qos state of file",
                    "type": "string"
                }
            }
        },
        "DfsFileResp": {
            "type": "object",
            "title": "DfsFileResp",
            "properties": {
                "dfs_file": {
                    "description": "dfs file",
                    "$ref": "#/definitions/DfsFile"
                }
            }
        },
        "DfsFileTrash": {
            "type": "object",
            "title": "DfsFileTrash",
            "properties": {
                "dfs_trash": {
                    "description": "dfs trash resource",
                    "$ref": "#/definitions/DfsTrash"
                },
                "state": {
                    "description": "trash state of file",
                    "type": "string"
                }
            }
        },
        "DfsFileWorm": {
            "type": "object",
            "title": "DfsFileWorm",
            "properties": {
                "auto_lock_time": {
                    "description": "automatic lock time of file",
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_worm": {
                    "description": "dfs worm resource",
                    "$ref": "#/definitions/DfsWorm"
                },
                "expire_time": {
                    "description": "worm expire time of file",
                    "type": "string",
                    "format": "date-time"
                },
                "state": {
                    "description": "worm state of file",
                    "type": "string"
                }
            }
        },
        "DfsFilesResp": {
            "type": "object",
            "title": "DfsFilesResp",
            "properties": {
                "dfs_files": {
                    "description": "dfs file list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsFile"
                    }
                },
                "eof": {
                    "description": "for ls directory, set to true when reach end",
                    "type": "boolean"
                }
            }
        },
        "DfsGateway": {
            "description": "DfsGateway contains information of a dfs gateway and it's stats.",
            "type": "object",
            "title": "DfsGateway",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "conn_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "ctdb_service_status": {
                    "type": "string"
                },
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroup_Nestview"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_scheme": {
                    "type": "string"
                },
                "ssl_certificate": {
                    "$ref": "#/definitions/SSLCertificate_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsGatewayConnectionsResp": {
            "type": "object",
            "title": "DfsGatewayConnectionsResp",
            "properties": {
                "ftp_sessions": {
                    "description": "dfs ftp sessions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsFTPSession"
                    }
                },
                "nfs_connections": {
                    "description": "dfs nfs connections",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsNFSConnection"
                    }
                },
                "s3_connections": {
                    "description": "dfs s3 bucket connections",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsS3BucketConnection"
                    }
                },
                "smb_sessions": {
                    "description": "dfs smb sessions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsSMBSession"
                    }
                }
            }
        },
        "DfsGatewayGroup": {
            "description": "DfsGatewayGroup defines model of dfs gateway group\n+X:model:generate;order_by=-ID;with_detailed +X:benchmark:",
            "type": "object",
            "title": "DfsGatewayGroup",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "bucket_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "encoding": {
                    "type": "string"
                },
                "gateway_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "hdfs_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "nfs_versions": {
                    "description": "NFS attributes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "port": {
                    "description": "FTP attributes",
                    "type": "integer",
                    "format": "int64"
                },
                "rootfs_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_scheme": {
                    "type": "string"
                },
                "s3_user_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "securities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "share_nums": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "shared": {
                    "type": "boolean"
                },
                "smb1_enabled": {
                    "type": "boolean"
                },
                "smb_ports": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "smb_type": {
                    "description": "SMB attributes",
                    "type": "string"
                },
                "ssl_certificate": {
                    "$ref": "#/definitions/SSLCertificate_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "zone_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsGatewayGroupAddGatewaysReq": {
            "type": "object",
            "title": "DfsGatewayGroupAddGatewaysReq",
            "required": [
                "dfs_gateway_group"
            ],
            "properties": {
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroupAddGatewaysReq_GatewayGroup"
                }
            }
        },
        "DfsGatewayGroupAddGatewaysReq_GatewayGroup": {
            "type": "object",
            "title": "DfsGatewayGroupAddGatewaysReq_GatewayGroup",
            "required": [
                "dfs_gateways"
            ],
            "properties": {
                "dfs_gateway_zone_id": {
                    "description": "dfs gateway zone id",
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_gateways": {
                    "description": "dfs gateways list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsGatewayReq"
                    }
                }
            }
        },
        "DfsGatewayGroupCreateReq": {
            "type": "object",
            "title": "DfsGatewayGroupCreateReq",
            "required": [
                "dfs_gateway_group"
            ],
            "properties": {
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroupCreateReq_GatewayGroup"
                }
            }
        },
        "DfsGatewayGroupCreateReq_GatewayGroup": {
            "type": "object",
            "title": "DfsGatewayGroupCreateReq_GatewayGroup",
            "required": [
                "name",
                "dfs_gateways",
                "dfs_vips",
                "types"
            ],
            "properties": {
                "description": {
                    "description": "description of gateway group",
                    "type": "string"
                },
                "dfs_gateways": {
                    "description": "dfs gateways list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsGatewayReq"
                    }
                },
                "dfs_vip_gateways": {
                    "description": "VIPGateways contains all the gateways of VIP network",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dfs_vips": {
                    "description": "VIPs of gateway group",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "encoding": {
                    "description": "ftp encoding format, default is utf8",
                    "type": "string"
                },
                "name": {
                    "description": "name of gateway group",
                    "type": "string"
                },
                "nfs_versions": {
                    "description": "nfs versions of nfs supported",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securities": {
                    "description": "smb security type",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "smb1_enabled": {
                    "description": "smb version 1.0 enabled",
                    "type": "boolean"
                },
                "smb_ports": {
                    "description": "smb ports",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "smb_type": {
                    "description": "smb service type (smb, xsmb)",
                    "type": "string"
                },
                "types": {
                    "description": "types of supported (smb, nfs, ftp)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DfsGatewayGroupRebuildGatewaysReq": {
            "type": "object",
            "title": "DfsGatewayGroupRebuildGatewaysReq",
            "required": [
                "dfs_gateway_group"
            ],
            "properties": {
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroupRebuildGatewaysReq_GatewayGroup"
                }
            }
        },
        "DfsGatewayGroupRebuildGatewaysReq_GatewayGroup": {
            "type": "object",
            "title": "DfsGatewayGroupRebuildGatewaysReq_GatewayGroup",
            "required": [
                "dfs_gateway_ids"
            ],
            "properties": {
                "dfs_gateway_ids": {
                    "description": "dfs gateway ids",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "DfsGatewayGroupRemoveGatewaysReq": {
            "type": "object",
            "title": "DfsGatewayGroupRemoveGatewaysReq",
            "required": [
                "dfs_gateway_group"
            ],
            "properties": {
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroupRemoveGatewaysReq_GatewayGroup"
                }
            }
        },
        "DfsGatewayGroupRemoveGatewaysReq_GatewayGroup": {
            "type": "object",
            "title": "DfsGatewayGroupRemoveGatewaysReq_GatewayGroup",
            "required": [
                "dfs_gateway_ids"
            ],
            "properties": {
                "dfs_gateway_ids": {
                    "description": "dfs gateway ids",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "dfs_gateway_zone_id": {
                    "description": "dfs gateway zone id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsGatewayGroupResp": {
            "type": "object",
            "title": "DfsGatewayGroupResp",
            "required": [
                "dfs_gateway_group"
            ],
            "properties": {
                "dfs_gateway_group": {
                    "description": "dfs gateway group",
                    "$ref": "#/definitions/DfsGatewayGroup"
                }
            }
        },
        "DfsGatewayGroupUpdateReq": {
            "type": "object",
            "title": "DfsGatewayGroupUpdateReq",
            "required": [
                "dfs_gateway_group"
            ],
            "properties": {
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroupUpdateReq_GatewayGroup"
                }
            }
        },
        "DfsGatewayGroupUpdateReq_GatewayGroup": {
            "type": "object",
            "title": "DfsGatewayGroupUpdateReq_GatewayGroup",
            "properties": {
                "description": {
                    "description": "description of gateway group",
                    "type": "string"
                },
                "name": {
                    "description": "name of gateway group",
                    "type": "string"
                }
            }
        },
        "DfsGatewayGroupUpdateTypesReq": {
            "type": "object",
            "title": "DfsGatewayGroupUpdateTypesReq",
            "required": [
                "dfs_gateway_group"
            ],
            "properties": {
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroupUpdateTypesReq_GatewayGroup"
                }
            }
        },
        "DfsGatewayGroupUpdateTypesReq_GatewayGroup": {
            "type": "object",
            "title": "DfsGatewayGroupUpdateTypesReq_GatewayGroup",
            "properties": {
                "encoding": {
                    "description": "ftp encoding format, default is utf8",
                    "type": "string"
                },
                "nfs_versions": {
                    "description": "nfs versions supported",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securities": {
                    "description": "smb security types",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "smb1_enabled": {
                    "description": "smb version 1.0 enabled",
                    "type": "boolean"
                },
                "smb_ports": {
                    "description": "smb ports",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "smb_type": {
                    "description": "smb service type (smb, xsmb)",
                    "type": "string"
                },
                "types": {
                    "description": "types of supported",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DfsGatewayGroupUpdateVIPsReq": {
            "type": "object",
            "title": "DfsGatewayGroupUpdateVIPsReq",
            "required": [
                "dfs_gateway_group"
            ],
            "properties": {
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroupUpdateVIPsReq_GatewayGroup"
                }
            }
        },
        "DfsGatewayGroupUpdateVIPsReq_GatewayGroup": {
            "type": "object",
            "title": "DfsGatewayGroupUpdateVIPsReq_GatewayGroup",
            "properties": {
                "dfs_gateway_zone_id": {
                    "description": "gateway zone to which the VIP belongs",
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_vip_gateways": {
                    "description": "all gateways used in VIP networks",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dfs_vips": {
                    "description": "vip info of dfs gateway group",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DfsGatewayGroup_Nestview": {
            "type": "object",
            "title": "DfsGatewayGroup_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DfsGatewayGroupsResp": {
            "type": "object",
            "title": "DfsGatewayGroupsResp",
            "required": [
                "dfs_gateway_groups"
            ],
            "properties": {
                "dfs_gateway_groups": {
                    "description": "dfs gateway groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsGatewayGroup"
                    }
                }
            }
        },
        "DfsGatewayNetworkAddress": {
            "description": "DfsGatewayNetworkAddress defines model of dfs gateway network address\n+X:model:generate;order_by=-ID;plur=DfsGatewayNetworkAddresses;with_detailed;related_depth=2",
            "type": "object",
            "title": "DfsGatewayNetworkAddress",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_gateway": {
                    "$ref": "#/definitions/DfsGateway"
                },
                "dfs_gateway_zone": {
                    "$ref": "#/definitions/DfsGatewayZone_Nestview"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "network_address": {
                    "$ref": "#/definitions/NetworkAddress_Nestview"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsGatewayNetworkAddressRecord": {
            "description": "DfsGatewayNetworkAddressRecord combine DfsGatewayNetworkAddress and\nDfsGatewayStat as API response",
            "type": "object",
            "title": "DfsGatewayNetworkAddressRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsGatewayNetworkAddress"
                },
                {
                    "properties": {
                        "samples": {
                            "description": "TODO(liubo): next version maybe change to DfsGatewayNetworkAddressStat",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DfsGatewayStat"
                            }
                        }
                    }
                }
            ]
        },
        "DfsGatewayNetworkAddressResp": {
            "type": "object",
            "title": "DfsGatewayNetworkAddressResp",
            "required": [
                "dfs_gateway_network_address"
            ],
            "properties": {
                "dfs_gateway_network_address": {
                    "description": "dfs gateway network address",
                    "$ref": "#/definitions/DfsGatewayNetworkAddressRecord"
                }
            }
        },
        "DfsGatewayNetworkAddressesResp": {
            "type": "object",
            "title": "DfsGatewayNetworkAddressesResp",
            "required": [
                "dfs_gateway_network_addresses"
            ],
            "properties": {
                "dfs_gateway_network_addresses": {
                    "description": "dfs gateway network addresses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsGatewayNetworkAddressRecord"
                    }
                }
            }
        },
        "DfsGatewayRecord": {
            "description": "DfsGatewayRecord combine DfsGateway and DfsGatewayStat as API response",
            "type": "object",
            "title": "DfsGatewayRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsGateway"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DfsGatewayStat"
                            }
                        }
                    }
                }
            ]
        },
        "DfsGatewayReq": {
            "type": "object",
            "title": "DfsGatewayReq",
            "required": [
                "host_id",
                "network_address_id"
            ],
            "properties": {
                "host_id": {
                    "description": "host id",
                    "type": "integer",
                    "format": "int64"
                },
                "network_address_id": {
                    "description": "network address id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsGatewayResp": {
            "type": "object",
            "title": "DfsGatewayResp",
            "required": [
                "dfs_gateway"
            ],
            "properties": {
                "dfs_gateway": {
                    "description": "dfs gateway",
                    "$ref": "#/definitions/DfsGatewayRecord"
                }
            }
        },
        "DfsGatewaySamplesResp": {
            "type": "object",
            "title": "DfsGatewaySamplesResp",
            "properties": {
                "dfs_gateway_samples": {
                    "description": "dfs gateway stat list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsGatewayStat"
                    }
                }
            }
        },
        "DfsGatewayStat": {
            "description": "DfsGatewayStat records dfs gateway stat info",
            "type": "object",
            "title": "DfsGatewayStat",
            "properties": {
                "cpu_util": {
                    "type": "number",
                    "format": "double"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "mem_usage_percent": {
                    "type": "number",
                    "format": "double"
                },
                "meta_delete_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "meta_delete_ops": {
                    "type": "number",
                    "format": "double"
                },
                "meta_list_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "meta_list_ops": {
                    "type": "number",
                    "format": "double"
                },
                "meta_read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "meta_read_ops": {
                    "type": "number",
                    "format": "double"
                },
                "meta_trunc_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "meta_trunc_ops": {
                    "type": "number",
                    "format": "double"
                },
                "meta_write_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "meta_write_ops": {
                    "type": "number",
                    "format": "double"
                },
                "read_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "read_iops": {
                    "type": "number",
                    "format": "double"
                },
                "read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "write_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "write_iops": {
                    "type": "number",
                    "format": "double"
                },
                "write_latency_us": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "DfsGatewayZone": {
            "description": "DfsGatewayZone contains information of a dfs gateway zone and it's stats.",
            "type": "object",
            "title": "DfsGatewayZone",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "default": {
                    "type": "boolean"
                },
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroup_Nestview"
                },
                "dfs_hdfs_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_hdfses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsHdfs"
                    }
                },
                "dns_domain_names": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSDomainName"
                    }
                },
                "gateway_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "vip_balance_status": {
                    "type": "string"
                },
                "vip_gateways": {
                    "description": "gateways for VIP addresses in policy routing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vip_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsGatewayZoneCreateReq": {
            "type": "object",
            "title": "DfsGatewayZoneCreateReq",
            "required": [
                "dfs_gateway_zone"
            ],
            "properties": {
                "dfs_gateway_zone": {
                    "$ref": "#/definitions/DfsGatewayZoneCreateReq_GatewayZone"
                }
            }
        },
        "DfsGatewayZoneCreateReq_GatewayZone": {
            "type": "object",
            "title": "DfsGatewayZoneCreateReq_GatewayZone",
            "required": [
                "name",
                "dfs_gateway_group_id",
                "dfs_gateways",
                "dfs_vips"
            ],
            "properties": {
                "dfs_gateway_group_id": {
                    "description": "id of dfs gateway group",
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_gateways": {
                    "description": "dfs gateways list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsGatewayReq"
                    }
                },
                "dfs_vip_gateways": {
                    "description": "vip gateway list",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dfs_vips": {
                    "description": "vip list",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "gateway zone name",
                    "type": "string"
                }
            }
        },
        "DfsGatewayZoneRecord": {
            "description": "DfsGatewayZoneRecord combine DfsGatewayZone and DfsGatewayZoneStat as API\nresponse",
            "type": "object",
            "title": "DfsGatewayZoneRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsGatewayZone"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DfsGatewayZoneStat"
                            }
                        }
                    }
                }
            ]
        },
        "DfsGatewayZoneResp": {
            "type": "object",
            "title": "DfsGatewayZoneResp",
            "required": [
                "dfs_gateway_zone"
            ],
            "properties": {
                "dfs_gateway_zone": {
                    "description": "dfs gateway zone",
                    "$ref": "#/definitions/DfsGatewayZoneRecord"
                }
            }
        },
        "DfsGatewayZoneSamplesResp": {
            "type": "object",
            "title": "DfsGatewayZoneSamplesResp",
            "properties": {
                "dfs_gateway_zone_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsGatewayZoneStat"
                    }
                }
            }
        },
        "DfsGatewayZoneStat": {
            "description": "DfsGatewayZoneStat records dfs gateway zone stat info",
            "type": "object",
            "title": "DfsGatewayZoneStat",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "meta_delete_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "meta_delete_ops": {
                    "type": "number",
                    "format": "double"
                },
                "meta_list_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "meta_list_ops": {
                    "type": "number",
                    "format": "double"
                },
                "meta_read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "meta_read_ops": {
                    "type": "number",
                    "format": "double"
                },
                "meta_write_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "meta_write_ops": {
                    "type": "number",
                    "format": "double"
                },
                "read_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "read_iops": {
                    "type": "number",
                    "format": "double"
                },
                "read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "write_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "write_iops": {
                    "type": "number",
                    "format": "double"
                },
                "write_latency_us": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "DfsGatewayZoneUpdateReq": {
            "type": "object",
            "title": "DfsGatewayZoneUpdateReq",
            "required": [
                "gateway_zone"
            ],
            "properties": {
                "gateway_zone": {
                    "$ref": "#/definitions/DfsGatewayZoneUpdateReq_GatewayZone"
                }
            }
        },
        "DfsGatewayZoneUpdateReq_GatewayZone": {
            "type": "object",
            "title": "DfsGatewayZoneUpdateReq_GatewayZone",
            "properties": {
                "name": {
                    "description": "name of dfs gateway zone",
                    "type": "string"
                }
            }
        },
        "DfsGatewayZone_Nestview": {
            "type": "object",
            "title": "DfsGatewayZone_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DfsGatewayZonesResp": {
            "type": "object",
            "title": "DfsGatewayZonesResp",
            "required": [
                "dfs_gateway_zones"
            ],
            "properties": {
                "dfs_gateway_zones": {
                    "description": "dfs gateway zones",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsGatewayZoneRecord"
                    }
                }
            }
        },
        "DfsGateway_Nestview": {
            "type": "object",
            "title": "DfsGateway_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsGatewaysResp": {
            "type": "object",
            "title": "DfsGatewaysResp",
            "required": [
                "dfs_gateways"
            ],
            "properties": {
                "dfs_gateways": {
                    "description": "dfs gateways",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsGatewayRecord"
                    }
                }
            }
        },
        "DfsHdfs": {
            "description": "DfsHdfs defines models of dfs hdfs\n+X:model:generate;plur=DfsHdfses;with_detailed;etcd_lock;",
            "type": "object",
            "title": "DfsHdfs",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "auth_type": {
                    "type": "string"
                },
                "block_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "checksum_type": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "dfs_gateway_zone": {
                    "$ref": "#/definitions/DfsGatewayZone_Nestview"
                },
                "dfs_hdfs_ip_white_lists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsHdfsIPWhiteList"
                    }
                },
                "dfs_hdfs_ip_white_lists_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_path": {
                    "$ref": "#/definitions/DfsPath_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "kerberos": {
                    "$ref": "#/definitions/FSKerberos_Nestview"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "principal_name": {
                    "type": "string"
                },
                "securities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsHdfsACL": {
            "description": "DfsHdfsACL defines models of dfs hdfs acl +X:model:generate;etcd_lock;",
            "type": "object",
            "title": "DfsHdfsACL",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_hdfs": {
                    "$ref": "#/definitions/DfsHdfs_Nestview"
                },
                "fs_user": {
                    "$ref": "#/definitions/FSUser_Nestview"
                },
                "fs_user_group": {
                    "$ref": "#/definitions/FSUserGroup_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "type": "string"
                },
                "security": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsHdfsACLReq": {
            "type": "object",
            "title": "DfsHdfsACLReq",
            "properties": {
                "fs_user_group_id": {
                    "description": "fs user group id",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_user_id": {
                    "description": "fs user id",
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "description": "permission of user or group",
                    "type": "string"
                },
                "security": {
                    "description": "acl security type",
                    "type": "string"
                },
                "type": {
                    "description": "acl type",
                    "type": "string"
                }
            }
        },
        "DfsHdfsACLsResp": {
            "type": "object",
            "title": "DfsHdfsACLsResp",
            "required": [
                "dfs_hdfs_acls"
            ],
            "properties": {
                "dfs_hdfs_acls": {
                    "description": "dfs hdfs acl list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsHdfsACL"
                    }
                }
            }
        },
        "DfsHdfsAddACLsReq": {
            "type": "object",
            "title": "DfsHdfsAddACLsReq",
            "required": [
                "dfs_hdfs"
            ],
            "properties": {
                "dfs_hdfs": {
                    "$ref": "#/definitions/DfsHdfsAddACLsReq_Hdfs"
                }
            }
        },
        "DfsHdfsAddACLsReq_Hdfs": {
            "type": "object",
            "title": "DfsHdfsAddACLsReq_Hdfs",
            "required": [
                "dfs_hdfs_acls"
            ],
            "properties": {
                "dfs_hdfs_acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsHdfsACLReq"
                    }
                }
            }
        },
        "DfsHdfsCreateReq": {
            "type": "object",
            "title": "DfsHdfsCreateReq",
            "properties": {
                "dfs_hdfs": {
                    "$ref": "#/definitions/DfsHdfsCreateReq_Hdfs"
                }
            }
        },
        "DfsHdfsCreateReq_Hdfs": {
            "type": "object",
            "title": "DfsHdfsCreateReq_Hdfs",
            "properties": {
                "block_size": {
                    "description": "block size",
                    "type": "integer",
                    "format": "int64"
                },
                "checksum_type": {
                    "description": "checksum type",
                    "type": "string"
                },
                "description": {
                    "description": "description of hdfs",
                    "type": "string"
                },
                "dfs_gateway_zone_id": {
                    "description": "id of dfs gateway zone",
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_hdfs_acls": {
                    "description": "dfs hdfs acl list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsHdfsACLReq"
                    }
                },
                "name": {
                    "description": "dfs hdfs name",
                    "type": "string"
                },
                "path": {
                    "description": "path",
                    "type": "string"
                },
                "rootfs_id": {
                    "description": "id of dfs rootfs",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsHdfsIPWhiteList": {
            "description": "DfsHdfsIPWhiteList define dfs hdfs IP white list +X:model:generate;order_by=-ID",
            "type": "object",
            "title": "DfsHdfsIPWhiteList",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_hdfs": {
                    "$ref": "#/definitions/DfsHdfs_Nestview"
                },
                "host_allow": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsHdfsRecord": {
            "description": "DfsHdfsRecord combine DfsHdfs and DfsPathPerformanceStat as API response",
            "type": "object",
            "title": "DfsHdfsRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsHdfs"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DfsHdfsStat"
                            }
                        }
                    }
                }
            ]
        },
        "DfsHdfsRemoveACLsReq": {
            "type": "object",
            "title": "DfsHdfsRemoveACLsReq",
            "required": [
                "dfs_hdfs"
            ],
            "properties": {
                "dfs_hdfs": {
                    "$ref": "#/definitions/DfsHdfsRemoveACLsReq_Hdfs"
                }
            }
        },
        "DfsHdfsRemoveACLsReq_Hdfs": {
            "type": "object",
            "title": "DfsHdfsRemoveACLsReq_Hdfs",
            "required": [
                "dfs_hdfs_acl_ids"
            ],
            "properties": {
                "dfs_hdfs_acl_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "DfsHdfsResp": {
            "type": "object",
            "title": "DfsHdfsResp",
            "required": [
                "dfs_hdfs"
            ],
            "properties": {
                "dfs_hdfs": {
                    "description": "dfs hdfs",
                    "$ref": "#/definitions/DfsHdfsRecord"
                }
            }
        },
        "DfsHdfsStat": {
            "description": "DfsHdfsStat records dfs hdfs stat info",
            "type": "object",
            "title": "DfsHdfsStat",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsPathPerformanceStat"
                }
            ]
        },
        "DfsHdfsUpdateACLsReq": {
            "type": "object",
            "title": "DfsHdfsUpdateACLsReq",
            "required": [
                "dfs_hdfs"
            ],
            "properties": {
                "dfs_hdfs": {
                    "$ref": "#/definitions/DfsHdfsUpdateACLsReq_Hdfs"
                }
            }
        },
        "DfsHdfsUpdateACLsReq_Hdfs": {
            "type": "object",
            "title": "DfsHdfsUpdateACLsReq_Hdfs",
            "properties": {
                "dfs_hdfs_acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsHdfsUpdateACLsReq_Hdfs_ACLs_Elt"
                    }
                }
            }
        },
        "DfsHdfsUpdateACLsReq_Hdfs_ACLs_Elt": {
            "type": "object",
            "title": "DfsHdfsUpdateACLsReq_Hdfs_ACLs_Elt",
            "required": [
                "id",
                "permission"
            ],
            "properties": {
                "id": {
                    "description": "acl id",
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "description": "acl permission",
                    "type": "string"
                }
            }
        },
        "DfsHdfsUpdateReq": {
            "type": "object",
            "title": "DfsHdfsUpdateReq",
            "properties": {
                "dfs_hdfs": {
                    "$ref": "#/definitions/DfsHdfsUpdateReq_Hdfs"
                }
            }
        },
        "DfsHdfsUpdateReq_Hdfs": {
            "type": "object",
            "title": "DfsHdfsUpdateReq_Hdfs",
            "properties": {
                "block_size": {
                    "description": "block size of hdfs",
                    "type": "integer",
                    "format": "int64"
                },
                "checksum_type": {
                    "description": "checksum type of hdfs",
                    "type": "string"
                },
                "description": {
                    "description": "description of hdfs",
                    "type": "string"
                },
                "path": {
                    "description": "path of hdfs",
                    "type": "string"
                }
            }
        },
        "DfsHdfs_Nestview": {
            "type": "object",
            "title": "DfsHdfs_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DfsHdfsesResp": {
            "type": "object",
            "title": "DfsHdfsesResp",
            "required": [
                "dfs_hdfses"
            ],
            "properties": {
                "dfs_hdfses": {
                    "description": "dfs hdfs list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsHdfsRecord"
                    }
                }
            }
        },
        "DfsNFSConnection": {
            "description": "DfsNFSConnection defines model of dfs nfs connection\n+X:model:generate;order_by=-ID;related_depth=2 +X:benchmark:",
            "type": "object",
            "title": "DfsNFSConnection",
            "properties": {
                "client_ip": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_gateway": {
                    "$ref": "#/definitions/DfsGateway_Nestview"
                },
                "dfs_nfs_share": {
                    "$ref": "#/definitions/DfsNFSShare_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "nfs_version": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsNFSConnectionsResp": {
            "type": "object",
            "title": "DfsNFSConnectionsResp",
            "required": [
                "dfs_nfs_connections"
            ],
            "properties": {
                "dfs_nfs_connections": {
                    "description": "dfs nfs connections",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsNFSConnection"
                    }
                }
            }
        },
        "DfsNFSShare": {
            "description": "DfsNFSShare defines model of dfs nfs share\n+X:model:generate;with_detailed;order_by=-ID +X:benchmark:",
            "type": "object",
            "title": "DfsNFSShare",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroup_Nestview"
                },
                "dfs_path": {
                    "$ref": "#/definitions/DfsPath_Nestview"
                },
                "dfs_rootfs": {
                    "$ref": "#/definitions/DfsRootfs_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "nfs_versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "total_snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "DfsNFSShareACL": {
            "description": "DfsNFSShareACL defines model of dfs nfs share ACL +X:model:generate;order_by=-ID\n+X:benchmark:",
            "type": "object",
            "title": "DfsNFSShareACL",
            "properties": {
                "all_squash": {
                    "type": "boolean"
                },
                "clients": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_nfs_share": {
                    "$ref": "#/definitions/DfsNFSShare_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "type": "string"
                },
                "root_squash": {
                    "type": "boolean"
                },
                "sync": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsNFSShareACLReq": {
            "type": "object",
            "title": "DfsNFSShareACLReq",
            "properties": {
                "all_squash": {
                    "description": "all squash",
                    "type": "boolean"
                },
                "clients": {
                    "description": "ip or network list, separated by comma",
                    "type": "string"
                },
                "permission": {
                    "description": "readonly or readwrite access",
                    "type": "string"
                },
                "root_squash": {
                    "description": "root squash",
                    "type": "boolean"
                },
                "sync": {
                    "description": "write to disk by sync or async",
                    "type": "boolean"
                },
                "type": {
                    "description": "type of share acl",
                    "type": "string"
                }
            }
        },
        "DfsNFSShareACLsResp": {
            "type": "object",
            "title": "DfsNFSShareACLsResp",
            "required": [
                "dfs_nfs_share_acls"
            ],
            "properties": {
                "dfs_nfs_share_acls": {
                    "description": "dfs nfs share acls",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsNFSShareACL"
                    }
                }
            }
        },
        "DfsNFSShareAddACLsReq": {
            "type": "object",
            "title": "DfsNFSShareAddACLsReq",
            "required": [
                "dfs_nfs_share"
            ],
            "properties": {
                "dfs_nfs_share": {
                    "$ref": "#/definitions/DfsNFSShareAddACLsReq_Share"
                }
            }
        },
        "DfsNFSShareAddACLsReq_Share": {
            "type": "object",
            "title": "DfsNFSShareAddACLsReq_Share",
            "required": [
                "dfs_nfs_share_acls"
            ],
            "properties": {
                "dfs_nfs_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsNFSShareACLReq"
                    }
                }
            }
        },
        "DfsNFSShareCreateReq": {
            "type": "object",
            "title": "DfsNFSShareCreateReq",
            "required": [
                "dfs_nfs_share"
            ],
            "properties": {
                "dfs_nfs_share": {
                    "$ref": "#/definitions/DfsNFSShareCreateReq_Share"
                }
            }
        },
        "DfsNFSShareCreateReq_Share": {
            "type": "object",
            "title": "DfsNFSShareCreateReq_Share",
            "required": [
                "name",
                "dfs_rootfs_id",
                "path"
            ],
            "properties": {
                "description": {
                    "description": "description of share",
                    "type": "string"
                },
                "dfs_nfs_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsNFSShareACLReq"
                    }
                },
                "dfs_rootfs_id": {
                    "description": "rootfs id",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name of share",
                    "type": "string"
                },
                "nfs_versions": {
                    "description": "nfs versions of nfs supported",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "description": "diectrory path",
                    "type": "string"
                }
            }
        },
        "DfsNFSShareRecord": {
            "description": "DfsNFSShareRecord combine DfsNFSShare and DfsPathPerformanceStat as API response",
            "type": "object",
            "title": "DfsNFSShareRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsNFSShare"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DfsNFSShareStat"
                            }
                        }
                    }
                }
            ]
        },
        "DfsNFSShareRemoveACLsReq": {
            "type": "object",
            "title": "DfsNFSShareRemoveACLsReq",
            "required": [
                "dfs_nfs_share"
            ],
            "properties": {
                "dfs_nfs_share": {
                    "$ref": "#/definitions/DfsNFSShareRemoveACLsReq_Share"
                }
            }
        },
        "DfsNFSShareRemoveACLsReq_Share": {
            "type": "object",
            "title": "DfsNFSShareRemoveACLsReq_Share",
            "required": [
                "dfs_nfs_share_acl_ids"
            ],
            "properties": {
                "dfs_nfs_share_acl_ids": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "DfsNFSShareResp": {
            "type": "object",
            "title": "DfsNFSShareResp",
            "required": [
                "dfs_nfs_share"
            ],
            "properties": {
                "dfs_nfs_share": {
                    "description": "rootfs share",
                    "$ref": "#/definitions/DfsNFSShareRecord"
                }
            }
        },
        "DfsNFSShareSetACLsReq": {
            "type": "object",
            "title": "DfsNFSShareSetACLsReq",
            "required": [
                "dfs_nfs_share"
            ],
            "properties": {
                "dfs_nfs_share": {
                    "$ref": "#/definitions/DfsNFSShareSetACLsReq_Share"
                }
            }
        },
        "DfsNFSShareSetACLsReq_Share": {
            "type": "object",
            "title": "DfsNFSShareSetACLsReq_Share",
            "required": [
                "dfs_nfs_share_acls"
            ],
            "properties": {
                "dfs_nfs_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsNFSShareACLReq"
                    }
                }
            }
        },
        "DfsNFSShareStat": {
            "description": "DfsNFSShareStat records dfs nfs share stat info",
            "type": "object",
            "title": "DfsNFSShareStat",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsPathPerformanceStat"
                }
            ]
        },
        "DfsNFSShareUpdateACLReq": {
            "type": "object",
            "title": "DfsNFSShareUpdateACLReq",
            "properties": {
                "all_squash": {
                    "description": "all squash",
                    "type": "boolean"
                },
                "clients": {
                    "description": "ip or network list, separated by comma",
                    "type": "string"
                },
                "id": {
                    "description": "id of user group",
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "description": "readonly or readwrite access",
                    "type": "string"
                },
                "root_squash": {
                    "description": "root squash",
                    "type": "boolean"
                },
                "sync": {
                    "description": "write to disk by sync or async",
                    "type": "boolean"
                }
            }
        },
        "DfsNFSShareUpdateACLsReq": {
            "type": "object",
            "title": "DfsNFSShareUpdateACLsReq",
            "required": [
                "dfs_nfs_share"
            ],
            "properties": {
                "dfs_nfs_share": {
                    "$ref": "#/definitions/DfsNFSShareUpdateACLsReq_Share"
                }
            }
        },
        "DfsNFSShareUpdateACLsReq_Share": {
            "type": "object",
            "title": "DfsNFSShareUpdateACLsReq_Share",
            "properties": {
                "dfs_nfs_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsNFSShareUpdateACLReq"
                    }
                }
            }
        },
        "DfsNFSShareUpdateReq": {
            "type": "object",
            "title": "DfsNFSShareUpdateReq",
            "required": [
                "dfs_nfs_share"
            ],
            "properties": {
                "dfs_nfs_share": {
                    "$ref": "#/definitions/DfsNFSShareUpdateReq_Share"
                }
            }
        },
        "DfsNFSShareUpdateReq_Share": {
            "type": "object",
            "title": "DfsNFSShareUpdateReq_Share",
            "properties": {
                "description": {
                    "description": "description of share",
                    "type": "string"
                },
                "name": {
                    "description": "name of share",
                    "type": "string"
                },
                "nfs_versions": {
                    "description": "nfs versions of nfs supported",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DfsNFSShare_Nestview": {
            "type": "object",
            "title": "DfsNFSShare_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DfsNFSSharesResp": {
            "type": "object",
            "title": "DfsNFSSharesResp",
            "required": [
                "dfs_nfs_shares"
            ],
            "properties": {
                "dfs_nfs_shares": {
                    "description": "share",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsNFSShareRecord"
                    }
                }
            }
        },
        "DfsPath": {
            "description": "DfsPath defines the model of dfs path\n+X:model:generate;plur=DfsPaths;with_detailed; +X:benchmark:",
            "type": "object",
            "title": "DfsPath",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_path_performance": {
                    "$ref": "#/definitions/DfsPathPerformance"
                },
                "dfs_path_stat": {
                    "$ref": "#/definitions/DfsPathStat"
                },
                "dfs_storage_policy_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "dp_dfs_snapshot_policy": {
                    "description": "data of the related resources in alert",
                    "$ref": "#/definitions/DpDfsSnapshotPolicy"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "rootfs": {
                    "$ref": "#/definitions/DfsRootfs_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "storage_policy_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "stretched": {
                    "type": "boolean"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsPathPerformance": {
            "description": "DfsPathPerformance contains information of a dfs path performance and it's\nstats.",
            "type": "object",
            "title": "DfsPathPerformance",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "$ref": "#/definitions/DfsPath_Nestview"
                },
                "rootfs": {
                    "$ref": "#/definitions/DfsRootfs_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsPathPerformanceCreateReq": {
            "type": "object",
            "title": "DfsPathPerformanceCreateReq",
            "required": [
                "dfs_path_performance"
            ],
            "properties": {
                "dfs_path_performance": {
                    "$ref": "#/definitions/DfsPathPerformanceCreateReq_PathPerformance"
                }
            }
        },
        "DfsPathPerformanceCreateReq_PathPerformance": {
            "type": "object",
            "title": "DfsPathPerformanceCreateReq_PathPerformance",
            "required": [
                "dfs_rootfs_id",
                "path"
            ],
            "properties": {
                "dfs_rootfs_id": {
                    "description": "id of dfs rootfs",
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "description": "path of performance",
                    "type": "string"
                }
            }
        },
        "DfsPathPerformanceResp": {
            "type": "object",
            "title": "DfsPathPerformanceResp",
            "properties": {
                "dfs_path_performance": {
                    "$ref": "#/definitions/DfsPathPerformance"
                }
            }
        },
        "DfsPathPerformanceSamplesResp": {
            "type": "object",
            "title": "DfsPathPerformanceSamplesResp",
            "properties": {
                "dfs_path_performance_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsPathPerformanceStat"
                    }
                }
            }
        },
        "DfsPathPerformanceStat": {
            "description": "DfsPathPerformanceStat records dfs path performance stat info",
            "type": "object",
            "title": "DfsPathPerformanceStat",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "data_delete_bandwidth_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_delete_iops": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_delete_latency_us": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_read_bandwidth_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_read_iops": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_read_latency_us": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_write_bandwidth_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_write_iops": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_write_latency_us": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_delete_latency_us": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_delete_ops": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_list_latency_us": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_list_ops": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_read_latency_us": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_read_ops": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_write_latency_us": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_write_ops": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsPathPerformancesResp": {
            "type": "object",
            "title": "DfsPathPerformancesResp",
            "properties": {
                "dfs_path_performances": {
                    "description": "dfs trash records",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsPathPerformance"
                    }
                }
            }
        },
        "DfsPathStat": {
            "description": "DfsPathStat defines the model of dfs path statistic info",
            "type": "object",
            "title": "DfsPathStat",
            "properties": {
                "access": {
                    "type": "string",
                    "format": "date-time"
                },
                "change": {
                    "type": "string",
                    "format": "date-time"
                },
                "dp_dfs_snapshot_policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dp_snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "files": {
                    "type": "integer",
                    "format": "int64"
                },
                "last_snapshot_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "modify": {
                    "type": "string",
                    "format": "date-time"
                },
                "quota_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "shared": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsPath_Nestview": {
            "type": "object",
            "title": "DfsPath_Nestview",
            "properties": {
                "dfs_path_performance": {
                    "type": "object",
                    "properties": {
                        "cluster": {
                            "$ref": "#/definitions/Cluster_Nestview"
                        },
                        "create": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "path": {
                            "$ref": "#/definitions/DfsPath_Nestview"
                        },
                        "rootfs": {
                            "$ref": "#/definitions/DfsRootfs_Nestview"
                        },
                        "status": {
                            "type": "string"
                        },
                        "update": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                },
                "dfs_path_stat": {
                    "type": "object",
                    "properties": {
                        "access": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "change": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "dp_dfs_snapshot_policies": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "dp_snapshot_num": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "files": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "last_snapshot_time": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "modify": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "quota_num": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "shared": {
                            "type": "boolean"
                        },
                        "size": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "snapshot_num": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "total_snapshot_num": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "stretched": {
                    "type": "boolean"
                }
            }
        },
        "DfsPolicyFilter": {
            "description": "DfsPolicyFilter defines filter for DfsStoragePolicy\n+X:model:generate;order_by=-ID;",
            "type": "object",
            "title": "DfsPolicyFilter",
            "properties": {
                "ad_user_group_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ad_user_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dfs_storage_policy": {
                    "$ref": "#/definitions/DfsStoragePolicy_Nestview"
                },
                "exclude_file_name": {
                    "type": "boolean"
                },
                "exclude_user_name": {
                    "type": "boolean"
                },
                "file_names": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ldap_user_group_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ldap_user_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_group_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DfsQos": {
            "description": "DfsQos contains information of a dfs qos and it's stats.",
            "type": "object",
            "title": "DfsQos",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_path": {
                    "$ref": "#/definitions/DfsPath"
                },
                "dfs_qos_policy": {
                    "$ref": "#/definitions/DfsQosPolicy"
                },
                "dfs_rootfs": {
                    "$ref": "#/definitions/DfsRootfs"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "io_status": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsQosCreateReq": {
            "type": "object",
            "title": "DfsQosCreateReq",
            "required": [
                "dfs_qos"
            ],
            "properties": {
                "dfs_qos": {
                    "$ref": "#/definitions/DfsQosCreateReq_Qos"
                }
            }
        },
        "DfsQosCreateReq_Qos": {
            "type": "object",
            "title": "DfsQosCreateReq_Qos",
            "required": [
                "dfs_rootfs_id",
                "dfs_path",
                "dfs_qos_policy_id"
            ],
            "properties": {
                "dfs_path": {
                    "description": "path of qos",
                    "type": "string"
                },
                "dfs_qos_policy_id": {
                    "description": "qos policy id of qos",
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_rootfs_id": {
                    "description": "id of dfs rootfs",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsQosPoliciesResp": {
            "type": "object",
            "title": "DfsQosPoliciesResp",
            "properties": {
                "dfs_qos_policies": {
                    "description": "dfs qos policies",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsQosPolicy"
                    }
                }
            }
        },
        "DfsQosPolicy": {
            "description": "DfsQosPolicy defines model of dfs qos policy\n+X:model:generate;order_by=-ID;plur=DfsQosPolicies;check_get=i18n;detailed;etcd_lock=with_get;with_detailed;\n+X:benchmark:",
            "type": "object",
            "title": "DfsQosPolicy",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "dir_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "read_bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "read_object": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_object": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "write_bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "write_object": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsQosPolicyCreateReq": {
            "type": "object",
            "title": "DfsQosPolicyCreateReq",
            "required": [
                "dfs_qos_policy"
            ],
            "properties": {
                "dfs_qos_policy": {
                    "$ref": "#/definitions/DfsQosPolicyCreateReq_QosPolicy"
                }
            }
        },
        "DfsQosPolicyCreateReq_QosPolicy": {
            "type": "object",
            "title": "DfsQosPolicyCreateReq_QosPolicy",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "description": "description if dfs qos policy",
                    "type": "string"
                },
                "name": {
                    "description": "name of dfs qos policy",
                    "type": "string"
                },
                "read_bandwidth": {
                    "description": "read bandwidth limitation",
                    "type": "integer",
                    "format": "int64"
                },
                "read_object": {
                    "description": "read objects limitation",
                    "type": "integer",
                    "format": "int64"
                },
                "total_bandwidth": {
                    "description": "total bandwidth limitation",
                    "type": "integer",
                    "format": "int64"
                },
                "total_object": {
                    "description": "total objects limitation",
                    "type": "integer",
                    "format": "int64"
                },
                "write_bandwidth": {
                    "description": "write bandwidth limitation",
                    "type": "integer",
                    "format": "int64"
                },
                "write_object": {
                    "description": "write objects limitation",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsQosPolicyResp": {
            "type": "object",
            "title": "DfsQosPolicyResp",
            "properties": {
                "dfs_qos_policy": {
                    "description": "dfs qos policy",
                    "$ref": "#/definitions/DfsQosPolicy"
                }
            }
        },
        "DfsQosPolicyUpdateReq": {
            "type": "object",
            "title": "DfsQosPolicyUpdateReq",
            "required": [
                "dfs_qos_policy"
            ],
            "properties": {
                "dfs_qos_policy": {
                    "$ref": "#/definitions/DfsQosPolicyUpdateReq_QosPolicy"
                }
            }
        },
        "DfsQosPolicyUpdateReq_QosPolicy": {
            "type": "object",
            "title": "DfsQosPolicyUpdateReq_QosPolicy",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "description": "description if dfs qos policy",
                    "type": "string"
                },
                "name": {
                    "description": "name of dfs qos policy",
                    "type": "string"
                },
                "read_bandwidth": {
                    "description": "read bandwidth limitation",
                    "type": "integer",
                    "format": "int64"
                },
                "read_object": {
                    "description": "read objects limitation",
                    "type": "integer",
                    "format": "int64"
                },
                "total_bandwidth": {
                    "description": "total bandwidth limitation",
                    "type": "integer",
                    "format": "int64"
                },
                "total_object": {
                    "description": "total objects limitation",
                    "type": "integer",
                    "format": "int64"
                },
                "write_bandwidth": {
                    "description": "write bandwidth limitation",
                    "type": "integer",
                    "format": "int64"
                },
                "write_object": {
                    "description": "write objects limitation",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsQosRecord": {
            "description": "DfsQosRecord combine DfsQos and DfsQosStat as API response",
            "type": "object",
            "title": "DfsQosRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsQos"
                },
                {
                    "properties": {
                        "hdfs_num": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "is_bucket": {
                            "type": "boolean"
                        },
                        "path": {
                            "type": "string"
                        },
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DfsQosStat"
                            }
                        },
                        "shares": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "DfsQosResp": {
            "type": "object",
            "title": "DfsQosResp",
            "properties": {
                "dfs_qos": {
                    "description": "dfs qos",
                    "$ref": "#/definitions/DfsQos"
                }
            }
        },
        "DfsQosSamplesResp": {
            "type": "object",
            "title": "DfsQosSamplesResp",
            "properties": {
                "dfs_qos_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsQosStat"
                    }
                }
            }
        },
        "DfsQosStat": {
            "description": "DfsQosStat records dfs qos stat info",
            "type": "object",
            "title": "DfsQosStat",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "read_bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "read_object": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_object": {
                    "type": "integer",
                    "format": "int64"
                },
                "write_bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "write_object": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsQosUpdateReq": {
            "type": "object",
            "title": "DfsQosUpdateReq",
            "required": [
                "dfs_qos"
            ],
            "properties": {
                "dfs_qos": {
                    "$ref": "#/definitions/DfsQosUpdateReq_Qos"
                }
            }
        },
        "DfsQosUpdateReq_Qos": {
            "type": "object",
            "title": "DfsQosUpdateReq_Qos",
            "required": [
                "dfs_qos_policy_id"
            ],
            "properties": {
                "dfs_qos_policy_id": {
                    "description": "qos policy id of qos",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsQosesRecordsResp": {
            "type": "object",
            "title": "DfsQosesRecordsResp",
            "properties": {
                "dfs_qoses_records": {
                    "description": "dfs qoses records",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsQosRecord"
                    }
                }
            }
        },
        "DfsQuota": {
            "description": "DfsQuota contains information of a dfs quota and it's stats.",
            "type": "object",
            "title": "DfsQuota",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_path": {
                    "$ref": "#/definitions/DfsPath_Nestview"
                },
                "dfs_rootfs": {
                    "$ref": "#/definitions/DfsRootfs_Nestview"
                },
                "domain_user": {
                    "$ref": "#/definitions/DomainUser_Nestview"
                },
                "domain_user_group": {
                    "$ref": "#/definitions/DomainUserGroup_Nestview"
                },
                "files_exceed_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "files_grace_time": {
                    "type": "integer",
                    "format": "int64"
                },
                "files_hard_quota": {
                    "type": "integer",
                    "format": "int64"
                },
                "files_ratio": {
                    "type": "number",
                    "format": "float"
                },
                "files_soft_quota": {
                    "type": "integer",
                    "format": "int64"
                },
                "files_suggest_quota": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_user": {
                    "$ref": "#/definitions/FSUser_Nestview"
                },
                "fs_user_group": {
                    "$ref": "#/definitions/FSUserGroup_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "inode": {
                    "type": "integer",
                    "format": "int64"
                },
                "shared": {
                    "type": "boolean"
                },
                "size_exceed_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "size_grace_time": {
                    "type": "integer",
                    "format": "int64"
                },
                "size_hard_quota": {
                    "type": "integer",
                    "format": "int64"
                },
                "size_ratio": {
                    "type": "number",
                    "format": "float"
                },
                "size_soft_quota": {
                    "type": "integer",
                    "format": "int64"
                },
                "size_suggest_quota": {
                    "type": "integer",
                    "format": "int64"
                },
                "source_type": {
                    "type": "string"
                },
                "source_uuid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsQuotaCreateReq": {
            "type": "object",
            "title": "DfsQuotaCreateReq",
            "required": [
                "dfs_quota"
            ],
            "properties": {
                "dfs_quota": {
                    "$ref": "#/definitions/DfsQuotaCreateReq_Quota"
                }
            }
        },
        "DfsQuotaCreateReq_Quota": {
            "type": "object",
            "title": "DfsQuotaCreateReq_Quota",
            "required": [
                "dfs_rootfs_id",
                "path"
            ],
            "properties": {
                "dfs_rootfs_id": {
                    "description": "id of dfs rootfs",
                    "type": "integer",
                    "format": "int64"
                },
                "files_grace_time": {
                    "description": "grace time for files soft quota",
                    "type": "integer",
                    "format": "int64"
                },
                "files_hard_quota": {
                    "description": "hard quota of files",
                    "type": "integer",
                    "format": "int64"
                },
                "files_ratio": {
                    "description": "ratio of files",
                    "type": "number",
                    "format": "float"
                },
                "files_soft_quota": {
                    "description": "soft quota of files",
                    "type": "integer",
                    "format": "int64"
                },
                "files_suggest_quota": {
                    "description": "suggest quota of files",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_user_group_id": {
                    "description": "fs user group id",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_user_id": {
                    "description": "fs user id",
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "description": "path of quota",
                    "type": "string"
                },
                "size_grace_time": {
                    "description": "grace time for size soft quota",
                    "type": "integer",
                    "format": "int64"
                },
                "size_hard_quota": {
                    "description": "hard quota of size",
                    "type": "integer",
                    "format": "int64"
                },
                "size_ratio": {
                    "description": "ratio of size",
                    "type": "number",
                    "format": "float"
                },
                "size_soft_quota": {
                    "description": "soft quota of size",
                    "type": "integer",
                    "format": "int64"
                },
                "size_suggest_quota": {
                    "description": "suggest quota of size",
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "description": "type of dfs quota",
                    "type": "string"
                },
                "user_group_name": {
                    "description": "user group name",
                    "type": "string"
                },
                "user_name": {
                    "description": "user name",
                    "type": "string"
                }
            }
        },
        "DfsQuotaOverviewResp": {
            "type": "object",
            "title": "DfsQuotaOverviewResp",
            "properties": {
                "dfs_quota_overview": {
                    "$ref": "#/definitions/DfsQuotaOverviewResp_DfsQuotaOverview"
                }
            }
        },
        "DfsQuotaOverviewResp_DfsQuotaOverview": {
            "type": "object",
            "title": "DfsQuotaOverviewResp_DfsQuotaOverview",
            "properties": {
                "status_count": {
                    "$ref": "#/definitions/DfsQuotaStatusCount"
                },
                "type_count": {
                    "$ref": "#/definitions/DfsQuotaTypeCount"
                }
            }
        },
        "DfsQuotaPathValidateResp": {
            "type": "object",
            "title": "DfsQuotaPathValidateResp",
            "required": [
                "path_validator"
            ],
            "properties": {
                "path_validator": {
                    "$ref": "#/definitions/DfsQuotaPathValidateResp_PathValidation"
                }
            }
        },
        "DfsQuotaPathValidateResp_PathValidation": {
            "type": "object",
            "title": "DfsQuotaPathValidateResp_PathValidation",
            "properties": {
                "exist_dir_quota": {
                    "$ref": "#/definitions/DfsQuota"
                },
                "is_dir_empty": {
                    "type": "boolean"
                },
                "is_dir_exist": {
                    "type": "boolean"
                },
                "is_exceed_max_quota": {
                    "type": "boolean"
                },
                "is_quota_exist": {
                    "type": "boolean"
                },
                "used_files": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "user_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSUserGroup"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSUser"
                    }
                }
            }
        },
        "DfsQuotaPrediction": {
            "description": "DfsQuotaPrediction contains quota prediction data",
            "type": "object",
            "title": "DfsQuotaPrediction",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_files_1day": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_files_30days": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_files_7days": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_files_points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FilesPredictionPoint"
                    }
                },
                "used_kbyte_1day": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte_30days": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte_7days": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte_points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PredictionPoint"
                    }
                }
            }
        },
        "DfsQuotaPredictionsResp": {
            "type": "object",
            "title": "DfsQuotaPredictionsResp",
            "required": [
                "quota_predictions"
            ],
            "properties": {
                "quota_predictions": {
                    "description": "quota predictions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsQuotaPrediction"
                    }
                }
            }
        },
        "DfsQuotaRecord": {
            "description": "DfsQuotaRecord combine DfsQuota and DfsQuotaStat as API response",
            "type": "object",
            "title": "DfsQuotaRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsQuota"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DfsQuotaStat"
                            }
                        }
                    }
                }
            ]
        },
        "DfsQuotaResp": {
            "type": "object",
            "title": "DfsQuotaResp",
            "properties": {
                "dfs_quota": {
                    "description": "dfs quota record",
                    "$ref": "#/definitions/DfsQuotaRecord"
                }
            }
        },
        "DfsQuotaSamplesResp": {
            "type": "object",
            "title": "DfsQuotaSamplesResp",
            "properties": {
                "dfs_quota_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsQuotaStat"
                    }
                }
            }
        },
        "DfsQuotaStat": {
            "description": "DfsQuotaStat records dfs gateway stat info",
            "type": "object",
            "title": "DfsQuotaStat",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "used_files": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsQuotaStatusCount": {
            "description": "DfsQuotaStatusCount defines dfs quota status count",
            "type": "object",
            "title": "DfsQuotaStatusCount",
            "properties": {
                "active": {
                    "type": "integer",
                    "format": "int64"
                },
                "building_error": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleting_error": {
                    "type": "integer",
                    "format": "int64"
                },
                "error": {
                    "type": "integer",
                    "format": "int64"
                },
                "exceed_soft": {
                    "type": "integer",
                    "format": "int64"
                },
                "exceed_suggestion": {
                    "type": "integer",
                    "format": "int64"
                },
                "write_inhibit": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsQuotaTypeCount": {
            "description": "DfsQuotaTypeCount defines dfs quota type count",
            "type": "object",
            "title": "DfsQuotaTypeCount",
            "properties": {
                "ad_user": {
                    "type": "integer",
                    "format": "int64"
                },
                "ad_user_group": {
                    "type": "integer",
                    "format": "int64"
                },
                "dir": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_user": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_user_group": {
                    "type": "integer",
                    "format": "int64"
                },
                "ldap_user": {
                    "type": "integer",
                    "format": "int64"
                },
                "ldap_user_group": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsQuotaUpdateReq": {
            "type": "object",
            "title": "DfsQuotaUpdateReq",
            "properties": {
                "dfs_quota": {
                    "$ref": "#/definitions/DfsQuotaUpdateReq_Quota"
                }
            }
        },
        "DfsQuotaUpdateReq_Quota": {
            "type": "object",
            "title": "DfsQuotaUpdateReq_Quota",
            "required": [
                "size_hard_quota",
                "size_soft_quota",
                "size_grace_time",
                "size_suggest_quota",
                "files_hard_quota",
                "files_soft_quota",
                "files_suggest_quota",
                "files_grace_time"
            ],
            "properties": {
                "files_grace_time": {
                    "description": "grace time for files soft quota",
                    "type": "integer",
                    "format": "int64"
                },
                "files_hard_quota": {
                    "description": "hard quota of files",
                    "type": "integer",
                    "format": "int64"
                },
                "files_ratio": {
                    "description": "ratio of files",
                    "type": "number",
                    "format": "float"
                },
                "files_soft_quota": {
                    "description": "soft quota of files",
                    "type": "integer",
                    "format": "int64"
                },
                "files_suggest_quota": {
                    "description": "suggest quota of files",
                    "type": "integer",
                    "format": "int64"
                },
                "size_grace_time": {
                    "description": "grace time for size soft quota",
                    "type": "integer",
                    "format": "int64"
                },
                "size_hard_quota": {
                    "description": "hard quota of size",
                    "type": "integer",
                    "format": "int64"
                },
                "size_ratio": {
                    "description": "ratio of size",
                    "type": "number",
                    "format": "float"
                },
                "size_soft_quota": {
                    "description": "soft quota of size",
                    "type": "integer",
                    "format": "int64"
                },
                "size_suggest_quota": {
                    "description": "suggest quota of size",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsQuotasResp": {
            "type": "object",
            "title": "DfsQuotasResp",
            "properties": {
                "dfs_quotas": {
                    "description": "dfs quota records",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsQuotaRecord"
                    }
                }
            }
        },
        "DfsRootfs": {
            "description": "DfsRootfs contains information of a dfs rootfs and it's stats.",
            "type": "object",
            "title": "DfsRootfs",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroup_Nestview"
                },
                "gc_speed": {
                    "type": "string"
                },
                "hdfs_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "metadata_cluster": {
                    "$ref": "#/definitions/MetadataCluster_Nestview"
                },
                "name": {
                    "type": "string"
                },
                "priority_policy_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "progress": {
                    "type": "number",
                    "format": "double"
                },
                "progress_info": {
                    "$ref": "#/definitions/ProgressInfo"
                },
                "qos_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_bucket_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "share_nums": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "shared": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "storage_policy_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "tier_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "uuid": {
                    "type": "string"
                },
                "worm_log_path": {
                    "type": "string"
                }
            }
        },
        "DfsRootfsCreateReq": {
            "type": "object",
            "title": "DfsRootfsCreateReq",
            "required": [
                "dfs_rootfs"
            ],
            "properties": {
                "dfs_rootfs": {
                    "$ref": "#/definitions/DfsRootfsCreateReq_Rootfs"
                }
            }
        },
        "DfsRootfsCreateReq_Rootfs": {
            "type": "object",
            "title": "DfsRootfsCreateReq_Rootfs",
            "required": [
                "name",
                "metadata_cluster_id",
                "dfs_audit_log"
            ],
            "properties": {
                "active_pool_ids": {
                    "description": "id array of active pools",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "default_class_name": {
                    "description": "name of default class",
                    "type": "string"
                },
                "default_class_write_policy": {
                    "description": "write policy of default class",
                    "type": "string"
                },
                "description": {
                    "description": "description of rootfs",
                    "type": "string"
                },
                "dfs_audit_log": {
                    "description": "dfs audit log",
                    "$ref": "#/definitions/DfsRootfsCreateReq_Rootfs_AuditLog"
                },
                "metadata_cluster_id": {
                    "description": "metadata cluster id",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name of rootfs",
                    "type": "string"
                },
                "pool_ids": {
                    "description": "id array of pools",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "pool_policies": {
                    "description": "active pool policy array of default class",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/poolPolicy"
                    }
                },
                "storage_classes": {
                    "description": "CustomStorageClasses create custom dfs storage class",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/customStorageClass"
                    }
                }
            }
        },
        "DfsRootfsCreateReq_Rootfs_AuditLog": {
            "type": "object",
            "title": "DfsRootfsCreateReq_Rootfs_AuditLog",
            "properties": {
                "actions": {
                    "description": "actions need to audit",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "log_path": {
                    "description": "audit log path",
                    "type": "string"
                },
                "size": {
                    "description": "max size of audit log",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsRootfsRecord": {
            "description": "DfsRootfsRecord combine DfsRootfs and DfsRootfsStat as API response",
            "type": "object",
            "title": "DfsRootfsRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsRootfs"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DfsRootfsStat"
                            }
                        }
                    }
                }
            ]
        },
        "DfsRootfsResp": {
            "type": "object",
            "title": "DfsRootfsResp",
            "required": [
                "dfs_rootfs"
            ],
            "properties": {
                "dfs_rootfs": {
                    "description": "dfs rootfs record",
                    "$ref": "#/definitions/DfsRootfsRecord"
                }
            }
        },
        "DfsRootfsSamplesResp": {
            "type": "object",
            "title": "DfsRootfsSamplesResp",
            "properties": {
                "dfs_rootfs_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsRootfsStat"
                    }
                }
            }
        },
        "DfsRootfsSetGCSpeedReq": {
            "type": "object",
            "title": "DfsRootfsSetGCSpeedReq",
            "required": [
                "dfs_rootfs"
            ],
            "properties": {
                "dfs_rootfs": {
                    "$ref": "#/definitions/DfsRootfsSetGCSpeedReq_Rootfs"
                }
            }
        },
        "DfsRootfsSetGCSpeedReq_Rootfs": {
            "type": "object",
            "title": "DfsRootfsSetGCSpeedReq_Rootfs",
            "properties": {
                "gc_speed": {
                    "type": "string"
                }
            }
        },
        "DfsRootfsSetWormLogPathReq": {
            "type": "object",
            "title": "DfsRootfsSetWormLogPathReq",
            "required": [
                "dfs_rootfs"
            ],
            "properties": {
                "dfs_rootfs": {
                    "$ref": "#/definitions/DfsRootfsSetWormLogPathReq_Rootfs"
                }
            }
        },
        "DfsRootfsSetWormLogPathReq_Rootfs": {
            "type": "object",
            "title": "DfsRootfsSetWormLogPathReq_Rootfs",
            "required": [
                "worm_log_path"
            ],
            "properties": {
                "worm_log_path": {
                    "type": "string"
                }
            }
        },
        "DfsRootfsStat": {
            "description": "DfsRootfsStat records dfs rootfs stat info",
            "type": "object",
            "title": "DfsRootfsStat",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "data_delete_bandwidth_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_delete_iops": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_delete_latency_us": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_read_bandwidth_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_read_iops": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_read_latency_us": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_write_bandwidth_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_write_iops": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_write_latency_us": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_delete_iops": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_delete_latency_us": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_list_iops": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_list_latency_us": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_read_iops": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_read_latency_us": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_write_iops": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_write_latency_us": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsRootfsUpdateActivePoolReq": {
            "type": "object",
            "title": "DfsRootfsUpdateActivePoolReq",
            "required": [
                "dfs_rootfs"
            ],
            "properties": {
                "dfs_rootfs": {
                    "$ref": "#/definitions/DfsRootfsUpdateActivePoolReq_Rootfs"
                }
            }
        },
        "DfsRootfsUpdateActivePoolReq_Rootfs": {
            "type": "object",
            "title": "DfsRootfsUpdateActivePoolReq_Rootfs",
            "properties": {
                "active_pool_ids": {
                    "description": "all active pool ids, include not changed ids",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "pool_policies": {
                    "description": "changed active pool policy",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/poolPolicy"
                    }
                }
            }
        },
        "DfsRootfs_Nestview": {
            "type": "object",
            "title": "DfsRootfs_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DfsRootfsesResp": {
            "type": "object",
            "title": "DfsRootfsesResp",
            "required": [
                "dfs_rootfses"
            ],
            "properties": {
                "dfs_rootfses": {
                    "description": "dfs rootfs records",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsRootfsRecord"
                    }
                }
            }
        },
        "DfsS3Bucket": {
            "description": "DfsS3Bucket contains information of a dfs s 3 bucket and it's stats.",
            "type": "object",
            "title": "DfsS3Bucket",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "all_user_permission": {
                    "type": "string"
                },
                "auth_user_permission": {
                    "type": "string"
                },
                "bucket_policy": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "data_verify": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroup_Nestview"
                },
                "dfs_rootfs": {
                    "$ref": "#/definitions/DfsRootfs_Nestview"
                },
                "enable_etag": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/FSUser_Nestview"
                },
                "owner_permission": {
                    "type": "string"
                },
                "path": {
                    "$ref": "#/definitions/DfsPath_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsS3BucketConnection": {
            "description": "DfsS3BucketConnection defines model of dfs s3 bucket connection\n+X:model:generate;order_by=-ID;related_depth=1",
            "type": "object",
            "title": "DfsS3BucketConnection",
            "properties": {
                "api": {
                    "type": "string"
                },
                "bucket": {
                    "$ref": "#/definitions/DfsS3Bucket_Nestview"
                },
                "client_ip": {
                    "type": "string"
                },
                "client_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "connected_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_gateway": {
                    "$ref": "#/definitions/DfsGateway_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "protocol_version": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "DfsS3BucketConnectionsResp": {
            "type": "object",
            "title": "DfsS3BucketConnectionsResp",
            "required": [
                "dfs_s3_bucket_connections"
            ],
            "properties": {
                "dfs_s3_bucket_connections": {
                    "description": "dfs s3 bucket connections",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsS3BucketConnection"
                    }
                }
            }
        },
        "DfsS3BucketCreateReq": {
            "type": "object",
            "title": "DfsS3BucketCreateReq",
            "properties": {
                "dfs_s3_bucket": {
                    "$ref": "#/definitions/DfsS3BucketCreateReq_Bucket"
                }
            }
        },
        "DfsS3BucketCreateReq_Bucket": {
            "type": "object",
            "title": "DfsS3BucketCreateReq_Bucket",
            "required": [
                "name",
                "owner_id",
                "rootfs_id",
                "path"
            ],
            "properties": {
                "all_user_permission": {
                    "type": "string"
                },
                "auth_user_permission": {
                    "type": "string"
                },
                "data_verify": {
                    "type": "boolean"
                },
                "description": {
                    "description": "description of bucket",
                    "type": "string"
                },
                "enable_etag": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "owner_permission": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "rootfs_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsS3BucketPolicySetReq": {
            "type": "object",
            "title": "DfsS3BucketPolicySetReq",
            "properties": {
                "dfs_s3_bucket": {
                    "$ref": "#/definitions/DfsS3BucketPolicySetReq_Bucket"
                }
            }
        },
        "DfsS3BucketPolicySetReq_Bucket": {
            "type": "object",
            "title": "DfsS3BucketPolicySetReq_Bucket",
            "required": [
                "bucket_policy"
            ],
            "properties": {
                "bucket_policy": {
                    "type": "string"
                }
            }
        },
        "DfsS3BucketRecord": {
            "description": "DfsS3BucketRecord is used to combine DfsS3Bucket and DfsS3BucketStat",
            "type": "object",
            "title": "DfsS3BucketRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsS3Bucket"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DfsS3BucketStat"
                            }
                        }
                    }
                }
            ]
        },
        "DfsS3BucketResp": {
            "type": "object",
            "title": "DfsS3BucketResp",
            "required": [
                "dfs_s3_bucket"
            ],
            "properties": {
                "dfs_s3_bucket": {
                    "$ref": "#/definitions/DfsS3BucketRecord"
                }
            }
        },
        "DfsS3BucketSamplesResp": {
            "type": "object",
            "title": "DfsS3BucketSamplesResp",
            "required": [
                "dfs_s3_bucket_samples"
            ],
            "properties": {
                "dfs_s3_bucket_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsS3BucketStat"
                    }
                }
            }
        },
        "DfsS3BucketStat": {
            "description": "DfsS3BucketStat define stat for DfsS3Bucket",
            "type": "object",
            "title": "DfsS3BucketStat",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsPathPerformanceStat"
                },
                {
                    "properties": {
                        "allocated_size": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "create": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "objects": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            ]
        },
        "DfsS3BucketUpdateReq": {
            "type": "object",
            "title": "DfsS3BucketUpdateReq",
            "properties": {
                "dfs_s3_bucket": {
                    "$ref": "#/definitions/DfsS3BucketUpdateReq_Bucket"
                }
            }
        },
        "DfsS3BucketUpdateReq_Bucket": {
            "type": "object",
            "title": "DfsS3BucketUpdateReq_Bucket",
            "properties": {
                "all_user_permission": {
                    "type": "string"
                },
                "auth_user_permission": {
                    "type": "string"
                },
                "data_verify": {
                    "type": "boolean"
                },
                "description": {
                    "description": "description of bucket",
                    "type": "string"
                },
                "enable_etag": {
                    "type": "boolean"
                },
                "owner_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "owner_permission": {
                    "type": "string"
                }
            }
        },
        "DfsS3Bucket_Nestview": {
            "type": "object",
            "title": "DfsS3Bucket_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DfsS3BucketsResp": {
            "type": "object",
            "title": "DfsS3BucketsResp",
            "required": [
                "dfs_s3_buckets"
            ],
            "properties": {
                "dfs_s3_buckets": {
                    "description": "dfs s3 bucket list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsS3BucketRecord"
                    }
                }
            }
        },
        "DfsS3Key": {
            "description": "DfsS3Key defines access key and secret key for dfs s3\n+X:model:generate;etcd_lock +X:benchmark:",
            "type": "object",
            "title": "DfsS3Key",
            "properties": {
                "access_key": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "secret_key": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/FSUser_Nestview"
                }
            }
        },
        "DfsS3KeyCreateReq": {
            "type": "object",
            "title": "DfsS3KeyCreateReq",
            "properties": {
                "dfs_s3_key": {
                    "$ref": "#/definitions/DfsS3KeyCreateReq_Key"
                }
            }
        },
        "DfsS3KeyCreateReq_Key": {
            "type": "object",
            "title": "DfsS3KeyCreateReq_Key",
            "required": [
                "user_id",
                "access_key"
            ],
            "properties": {
                "access_key": {
                    "description": "access key",
                    "type": "string"
                },
                "secret_key": {
                    "description": "secret key",
                    "type": "string"
                },
                "user_id": {
                    "description": "user id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsS3KeyResp": {
            "type": "object",
            "title": "DfsS3KeyResp",
            "required": [
                "dfs_s3_key"
            ],
            "properties": {
                "dfs_s3_key": {
                    "description": "dfs s3 key",
                    "$ref": "#/definitions/DfsS3Key"
                }
            }
        },
        "DfsS3KeyUpdateReq": {
            "type": "object",
            "title": "DfsS3KeyUpdateReq",
            "properties": {
                "dfs_s3_key": {
                    "$ref": "#/definitions/DfsS3KeyUpdateReq_Key"
                }
            }
        },
        "DfsS3KeyUpdateReq_Key": {
            "type": "object",
            "title": "DfsS3KeyUpdateReq_Key",
            "properties": {
                "secret_key": {
                    "description": "secret key",
                    "type": "string"
                }
            }
        },
        "DfsS3KeysResp": {
            "type": "object",
            "title": "DfsS3KeysResp",
            "required": [
                "dfs_s3_keys"
            ],
            "properties": {
                "dfs_s3_keys": {
                    "description": "dfs s3 keys",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsS3Key"
                    }
                }
            }
        },
        "DfsSMBSession": {
            "description": "DfsSMBSession defines model of dfs smb session\n+X:model:generate;order_by=-ID;related_depth=2 +X:benchmark:",
            "type": "object",
            "title": "DfsSMBSession",
            "properties": {
                "client_ip": {
                    "type": "string"
                },
                "client_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "connected_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_gateway": {
                    "$ref": "#/definitions/DfsGateway_Nestview"
                },
                "dfs_smb_share": {
                    "$ref": "#/definitions/DfsSMBShare_Nestview"
                },
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "protocol_version": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "DfsSMBSessionsResp": {
            "type": "object",
            "title": "DfsSMBSessionsResp",
            "required": [
                "dfs_smb_sessions"
            ],
            "properties": {
                "dfs_smb_sessions": {
                    "description": "dfs smb sessions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsSMBSession"
                    }
                }
            }
        },
        "DfsSMBShare": {
            "description": "DfsSMBShare defines model of dfs smb share\n+X:model:generate;order_by=-ID;with_detailed; +X:benchmark:",
            "type": "object",
            "title": "DfsSMBShare",
            "properties": {
                "acl_inherited": {
                    "type": "boolean"
                },
                "action_status": {
                    "type": "string"
                },
                "case_sensitive": {
                    "type": "boolean"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroup_Nestview"
                },
                "dfs_path": {
                    "$ref": "#/definitions/DfsPath_Nestview"
                },
                "dfs_rootfs": {
                    "$ref": "#/definitions/DfsRootfs_Nestview"
                },
                "hosts_allow": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "recycled": {
                    "type": "boolean"
                },
                "securities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "total_snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsSMBShareACL": {
            "description": "DfsSMBShareACL defines model of dfs smb share ACL +X:model:generate;order_by=-ID\n+X:benchmark:",
            "type": "object",
            "title": "DfsSMBShareACL",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_smb_share": {
                    "$ref": "#/definitions/DfsSMBShare_Nestview"
                },
                "domain_user": {
                    "$ref": "#/definitions/DomainUser"
                },
                "domain_user_group": {
                    "$ref": "#/definitions/DomainUserGroup"
                },
                "fs_user": {
                    "$ref": "#/definitions/FSUser_Nestview"
                },
                "fs_user_group": {
                    "$ref": "#/definitions/FSUserGroup_Nestview"
                },
                "fs_user_group_name": {
                    "type": "string"
                },
                "fs_user_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "type": "string"
                },
                "security": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsSMBShareACLReq": {
            "type": "object",
            "title": "DfsSMBShareACLReq",
            "properties": {
                "description": {
                    "description": "description of user or user group",
                    "type": "string"
                },
                "fs_user_group_id": {
                    "description": "id of user group",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_user_group_name": {
                    "description": "id of user group",
                    "type": "string"
                },
                "fs_user_id": {
                    "description": "id of user",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_user_name": {
                    "description": "id of user",
                    "type": "string"
                },
                "id": {
                    "description": "id of user group",
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "description": "readonly or readwrite access",
                    "type": "string"
                },
                "security": {
                    "description": "security of share acl",
                    "type": "string"
                },
                "type": {
                    "description": "type of share acl",
                    "type": "string"
                }
            }
        },
        "DfsSMBShareACLsResp": {
            "type": "object",
            "title": "DfsSMBShareACLsResp",
            "required": [
                "dfs_smb_share_acls"
            ],
            "properties": {
                "dfs_smb_share_acls": {
                    "description": "dfs smb share acls",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsSMBShareACL"
                    }
                }
            }
        },
        "DfsSMBShareAddACLsReq": {
            "type": "object",
            "title": "DfsSMBShareAddACLsReq",
            "required": [
                "dfs_smb_share"
            ],
            "properties": {
                "dfs_smb_share": {
                    "$ref": "#/definitions/DfsSMBShareAddACLsReq_Share"
                }
            }
        },
        "DfsSMBShareAddACLsReq_Share": {
            "type": "object",
            "title": "DfsSMBShareAddACLsReq_Share",
            "required": [
                "dfs_smb_share_acls"
            ],
            "properties": {
                "dfs_smb_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsSMBShareACLReq"
                    }
                }
            }
        },
        "DfsSMBShareCreateReq": {
            "type": "object",
            "title": "DfsSMBShareCreateReq",
            "required": [
                "dfs_smb_share"
            ],
            "properties": {
                "dfs_smb_share": {
                    "$ref": "#/definitions/DfsSMBShareCreateReq_Share"
                }
            }
        },
        "DfsSMBShareCreateReq_Share": {
            "type": "object",
            "title": "DfsSMBShareCreateReq_Share",
            "required": [
                "name",
                "dfs_rootfs_id",
                "path"
            ],
            "properties": {
                "acl_inherited": {
                    "description": "default acl status",
                    "type": "boolean"
                },
                "case_sensitive": {
                    "description": "case sensitive",
                    "type": "boolean"
                },
                "description": {
                    "description": "description of share",
                    "type": "string"
                },
                "dfs_rootfs_id": {
                    "description": "rootfs id",
                    "type": "integer",
                    "format": "int64"
                },
                "dfs_smb_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsSMBShareACLReq"
                    }
                },
                "hosts_allow": {
                    "description": "allow ips in share",
                    "type": "string"
                },
                "name": {
                    "description": "name of share",
                    "type": "string"
                },
                "path": {
                    "description": "diectrory path",
                    "type": "string"
                },
                "recycled": {
                    "description": "recycle status",
                    "type": "boolean"
                }
            }
        },
        "DfsSMBShareRecord": {
            "description": "DfsSMBShareRecord combine DfsSMBShare and DfsPathPerformanceStat as API response",
            "type": "object",
            "title": "DfsSMBShareRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsSMBShare"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DfsSMBShareStat"
                            }
                        }
                    }
                }
            ]
        },
        "DfsSMBShareRemoveACLsReq": {
            "type": "object",
            "title": "DfsSMBShareRemoveACLsReq",
            "required": [
                "dfs_smb_share"
            ],
            "properties": {
                "dfs_smb_share": {
                    "$ref": "#/definitions/DfsSMBShareRemoveACLsReq_Share"
                }
            }
        },
        "DfsSMBShareRemoveACLsReq_Share": {
            "type": "object",
            "title": "DfsSMBShareRemoveACLsReq_Share",
            "required": [
                "dfs_smb_share_acl_ids"
            ],
            "properties": {
                "dfs_smb_share_acl_ids": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "DfsSMBShareResp": {
            "type": "object",
            "title": "DfsSMBShareResp",
            "required": [
                "dfs_smb_share"
            ],
            "properties": {
                "dfs_smb_share": {
                    "description": "dfs smb share",
                    "$ref": "#/definitions/DfsSMBShareRecord"
                }
            }
        },
        "DfsSMBShareStat": {
            "description": "DfsSMBShareStat records dfs smb share stat info",
            "type": "object",
            "title": "DfsSMBShareStat",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsPathPerformanceStat"
                }
            ]
        },
        "DfsSMBShareUpdateACLReq": {
            "type": "object",
            "title": "DfsSMBShareUpdateACLReq",
            "properties": {
                "description": {
                    "description": "description of user or user group",
                    "type": "string"
                },
                "id": {
                    "description": "id of user group",
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "description": "readonly or readwrite access",
                    "type": "string"
                }
            }
        },
        "DfsSMBShareUpdateACLsReq": {
            "type": "object",
            "title": "DfsSMBShareUpdateACLsReq",
            "required": [
                "dfs_smb_share"
            ],
            "properties": {
                "dfs_smb_share": {
                    "$ref": "#/definitions/DfsSMBShareUpdateACLsReq_Share"
                }
            }
        },
        "DfsSMBShareUpdateACLsReq_Share": {
            "type": "object",
            "title": "DfsSMBShareUpdateACLsReq_Share",
            "properties": {
                "dfs_smb_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsSMBShareUpdateACLReq"
                    }
                }
            }
        },
        "DfsSMBShareUpdateReq": {
            "type": "object",
            "title": "DfsSMBShareUpdateReq",
            "required": [
                "dfs_smb_share"
            ],
            "properties": {
                "dfs_smb_share": {
                    "$ref": "#/definitions/DfsSMBShareUpdateReq_Share"
                }
            }
        },
        "DfsSMBShareUpdateReq_Share": {
            "type": "object",
            "title": "DfsSMBShareUpdateReq_Share",
            "properties": {
                "acl_inherited": {
                    "description": "default acl status",
                    "type": "boolean"
                },
                "case_sensitive": {
                    "description": "case sensitive",
                    "type": "boolean"
                },
                "description": {
                    "description": "description of share",
                    "type": "string"
                },
                "hosts_allow": {
                    "description": "allow ips in share",
                    "type": "string"
                },
                "name": {
                    "description": "name of share",
                    "type": "string"
                },
                "recycled": {
                    "description": "recycle status",
                    "type": "boolean"
                }
            }
        },
        "DfsSMBShare_Nestview": {
            "type": "object",
            "title": "DfsSMBShare_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DfsSMBSharesResp": {
            "type": "object",
            "title": "DfsSMBSharesResp",
            "required": [
                "dfs_smb_shares"
            ],
            "properties": {
                "dfs_smb_shares": {
                    "description": "dfs smb shares",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsSMBShareRecord"
                    }
                }
            }
        },
        "DfsSnapChangelistTask": {
            "description": "DfsSnapChangelistTask defines model of dfs snapshot changelist task\n+X:model:generate;order_by=-ID;etcd_lock;",
            "type": "object",
            "title": "DfsSnapChangelistTask",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dst_name": {
                    "type": "string"
                },
                "dst_snapshot": {
                    "$ref": "#/definitions/DfsSnapshot_Nestview"
                },
                "gateway": {
                    "$ref": "#/definitions/DfsGateway_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "src_name": {
                    "type": "string"
                },
                "src_snapshot": {
                    "$ref": "#/definitions/DfsSnapshot_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsSnapChangelistTaskCreateReq": {
            "type": "object",
            "title": "DfsSnapChangelistTaskCreateReq",
            "required": [
                "dfs_snap_changelist_task"
            ],
            "properties": {
                "dfs_snap_changelist_task": {
                    "$ref": "#/definitions/DfsSnapChangelistTaskCreateReq_SnapChangelistTask"
                }
            }
        },
        "DfsSnapChangelistTaskCreateReq_SnapChangelistTask": {
            "type": "object",
            "title": "DfsSnapChangelistTaskCreateReq_SnapChangelistTask",
            "required": [
                "path",
                "dst_snapshot_id"
            ],
            "properties": {
                "dst_snapshot_id": {
                    "description": "destination snapshot id",
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "description": "snap change list task root path",
                    "type": "string"
                },
                "src_snapshot_id": {
                    "description": "source snapshot id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsSnapChangelistTaskResp": {
            "type": "object",
            "title": "DfsSnapChangelistTaskResp",
            "required": [
                "dfs_snap_changelist_task"
            ],
            "properties": {
                "dfs_snap_changelist_task": {
                    "$ref": "#/definitions/DfsSnapChangelistTask"
                }
            }
        },
        "DfsSnapChangelistTasksResp": {
            "type": "object",
            "title": "DfsSnapChangelistTasksResp",
            "required": [
                "dfs_snap_changelist_tasks"
            ],
            "properties": {
                "dfs_snap_changelist_tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsSnapChangelistTask"
                    }
                }
            }
        },
        "DfsSnapShotsOverviewPageResp": {
            "type": "object",
            "title": "DfsSnapShotsOverviewPageResp",
            "required": [
                "dfs_snapshots_overview_page"
            ],
            "properties": {
                "dfs_snapshots_overview_page": {
                    "description": "overview of dfs snapshot",
                    "$ref": "#/definitions/DfsSnapshotsOverviewPage"
                }
            }
        },
        "DfsSnapshot": {
            "description": "DfsSnapshot is the corresponding dfs snapshot record.\n+X:model:generate;plur=DfsSnapshots;with_detailed;etcd_lock=with_get;\n+X:benchmark:",
            "type": "object",
            "title": "DfsSnapshot",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "creator": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dp_dfs_snapshot_policy": {
                    "$ref": "#/definitions/DpDfsSnapshotPolicy_Nestview"
                },
                "expire_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "lock": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "$ref": "#/definitions/DfsPath_Nestview"
                },
                "progress": {
                    "type": "number",
                    "format": "double"
                },
                "rootfs": {
                    "$ref": "#/definitions/DfsRootfs_Nestview"
                },
                "snapshot_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsSnapshotCreateReq": {
            "type": "object",
            "title": "DfsSnapshotCreateReq",
            "required": [
                "dfs_snapshot"
            ],
            "properties": {
                "dfs_snapshot": {
                    "$ref": "#/definitions/DfsSnapshotCreateReq_DfsSnapshot"
                }
            }
        },
        "DfsSnapshotCreateReq_DfsSnapshot": {
            "type": "object",
            "title": "DfsSnapshotCreateReq_DfsSnapshot",
            "required": [
                "rootfs_id",
                "path",
                "name",
                "description",
                "retention"
            ],
            "properties": {
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "lock": {
                    "description": "lock snapshot or not",
                    "type": "boolean"
                },
                "name": {
                    "description": "snapshot name",
                    "type": "string"
                },
                "path": {
                    "description": "path",
                    "type": "string"
                },
                "retention": {
                    "description": "retention time",
                    "type": "string"
                },
                "rootfs_id": {
                    "description": "id of dfs rootfs",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsSnapshotResp": {
            "type": "object",
            "title": "DfsSnapshotResp",
            "required": [
                "dfs_snapshot"
            ],
            "properties": {
                "dfs_snapshot": {
                    "description": "dfs snapshot",
                    "$ref": "#/definitions/DfsSnapshot"
                }
            }
        },
        "DfsSnapshotRollbackReq": {
            "type": "object",
            "title": "DfsSnapshotRollbackReq",
            "required": [
                "dfs_snapshot"
            ],
            "properties": {
                "dfs_snapshot": {
                    "$ref": "#/definitions/DfsSnapshotRollbackReq_DfsSnapshot"
                }
            }
        },
        "DfsSnapshotRollbackReq_DfsSnapshot": {
            "type": "object",
            "title": "DfsSnapshotRollbackReq_DfsSnapshot",
            "required": [
                "reserve_quotas"
            ],
            "properties": {
                "reserve_quotas": {
                    "description": "reserve quota when roll back",
                    "type": "boolean"
                }
            }
        },
        "DfsSnapshotUpdateReq": {
            "type": "object",
            "title": "DfsSnapshotUpdateReq",
            "required": [
                "dfs_snapshot"
            ],
            "properties": {
                "dfs_snapshot": {
                    "$ref": "#/definitions/DfsSnapshotUpdateReq_DfsSnapshot"
                }
            }
        },
        "DfsSnapshotUpdateReq_DfsSnapshot": {
            "type": "object",
            "title": "DfsSnapshotUpdateReq_DfsSnapshot",
            "properties": {
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "lock": {
                    "description": "lock snapshot or not",
                    "type": "boolean"
                },
                "name": {
                    "description": "snapshot name",
                    "type": "string"
                },
                "retention": {
                    "description": "retention time",
                    "type": "string"
                }
            }
        },
        "DfsSnapshot_Nestview": {
            "type": "object",
            "title": "DfsSnapshot_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DfsSnapshotsOverviewPage": {
            "description": "DfsSnapshotsOverviewPage define dfs snapshots overview info",
            "type": "object",
            "title": "DfsSnapshotsOverviewPage",
            "properties": {
                "dp_snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "manual_snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "path_dp_snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "path_manual_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "path_total_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "snapshot_total_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsSnapshotsResp": {
            "type": "object",
            "title": "DfsSnapshotsResp",
            "required": [
                "dfs_snapshots"
            ],
            "properties": {
                "dfs_snapshots": {
                    "description": "dfs snapshot list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsSnapshot"
                    }
                }
            }
        },
        "DfsStorageClassAddPoolReq": {
            "type": "object",
            "title": "DfsStorageClassAddPoolReq",
            "required": [
                "dfs_storage_class"
            ],
            "properties": {
                "dfs_storage_class": {
                    "$ref": "#/definitions/DfsStorageClassAddPoolReq_DfsStorageClass"
                }
            }
        },
        "DfsStorageClassAddPoolReq_DfsStorageClass": {
            "type": "object",
            "title": "DfsStorageClassAddPoolReq_DfsStorageClass",
            "properties": {
                "pool_policies": {
                    "description": "active pool policy to add",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/poolPolicy"
                    }
                }
            }
        },
        "DfsStorageClassCreateReq": {
            "type": "object",
            "title": "DfsStorageClassCreateReq",
            "required": [
                "dfs_storage_class"
            ],
            "properties": {
                "dfs_storage_class": {
                    "$ref": "#/definitions/DfsStorageClassCreateReq_DfsStorageClass"
                }
            }
        },
        "DfsStorageClassCreateReq_DfsStorageClass": {
            "type": "object",
            "title": "DfsStorageClassCreateReq_DfsStorageClass",
            "required": [
                "name",
                "rootfs_id",
                "write_policy",
                "sc_id",
                "pool_policies"
            ],
            "properties": {
                "description": {
                    "description": "description of custom class",
                    "type": "string"
                },
                "name": {
                    "description": "name of custom class",
                    "type": "string"
                },
                "pool_policies": {
                    "description": "active pool policy array of custom class",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/poolPolicy"
                    }
                },
                "rootfs_id": {
                    "description": "id of rootfs",
                    "type": "integer",
                    "format": "int64"
                },
                "sc_id": {
                    "description": "class unique id",
                    "type": "integer",
                    "format": "int64"
                },
                "write_policy": {
                    "description": "write policy of custom class",
                    "type": "string"
                }
            }
        },
        "DfsStorageClassRemovePoolReq": {
            "type": "object",
            "title": "DfsStorageClassRemovePoolReq",
            "required": [
                "dfs_storage_class"
            ],
            "properties": {
                "dfs_storage_class": {
                    "$ref": "#/definitions/DfsStorageClassRemovePoolReq_DfsStorageClass"
                }
            }
        },
        "DfsStorageClassRemovePoolReq_DfsStorageClass": {
            "type": "object",
            "title": "DfsStorageClassRemovePoolReq_DfsStorageClass",
            "required": [
                "pool_ids",
                "to_default"
            ],
            "properties": {
                "pool_ids": {
                    "description": "pool ids to remove",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "to_default": {
                    "description": "whether to move the pool to the default class after it is removed",
                    "type": "boolean"
                }
            }
        },
        "DfsStorageClassResp": {
            "type": "object",
            "title": "DfsStorageClassResp",
            "required": [
                "dfs_storage_class"
            ],
            "properties": {
                "dfs_storage_class": {
                    "description": "dfs storage class record",
                    "$ref": "#/definitions/DfsTierRecord"
                }
            }
        },
        "DfsStorageClassSamplesResp": {
            "type": "object",
            "title": "DfsStorageClassSamplesResp",
            "properties": {
                "dfs_storage_class_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsTierStat"
                    }
                }
            }
        },
        "DfsStorageClassUpdateReq": {
            "type": "object",
            "title": "DfsStorageClassUpdateReq",
            "required": [
                "dfs_storage_class"
            ],
            "properties": {
                "dfs_storage_class": {
                    "$ref": "#/definitions/DfsStorageClassUpdateReq_DfsStorageClass"
                }
            }
        },
        "DfsStorageClassUpdateReq_DfsStorageClass": {
            "type": "object",
            "title": "DfsStorageClassUpdateReq_DfsStorageClass",
            "properties": {
                "description": {
                    "description": "description of custom class",
                    "type": "string"
                },
                "name": {
                    "description": "name of custom class",
                    "type": "string"
                },
                "pool_policies": {
                    "description": "active pool policy array of custom class",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/poolPolicy"
                    }
                },
                "write_policy": {
                    "description": "write policy of custom class",
                    "type": "string"
                }
            }
        },
        "DfsStorageClassesResp": {
            "type": "object",
            "title": "DfsStorageClassesResp",
            "required": [
                "dfs_storage_classes"
            ],
            "properties": {
                "dfs_storage_classes": {
                    "description": "dfs storage class records",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsTierRecord"
                    }
                }
            }
        },
        "DfsStoragePoliciesResp": {
            "type": "object",
            "title": "DfsStoragePoliciesResp",
            "required": [
                "dfs_storage_policies"
            ],
            "properties": {
                "dfs_storage_policies": {
                    "description": "dfs storage policies",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsStoragePolicy"
                    }
                }
            }
        },
        "DfsStoragePolicy": {
            "description": "DfsStoragePolicy defines model of dfs storage policy\n+X:model:generate;order_by=-ID;plur=DfsStoragePolicies; +X:benchmark:",
            "type": "object",
            "title": "DfsStoragePolicy",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "dfs_paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsPath_Nestview"
                    }
                },
                "dfs_rootfs": {
                    "$ref": "#/definitions/DfsRootfs"
                },
                "dfs_storage_class": {
                    "description": "storage",
                    "$ref": "#/definitions/DfsTier"
                },
                "file_Create": {
                    "type": "string",
                    "format": "date-time"
                },
                "file_name": {
                    "description": "useless fields, for compatability",
                    "type": "string"
                },
                "file_path": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/definitions/DfsPolicyFilter"
                },
                "fs_user": {
                    "$ref": "#/definitions/FSUser"
                },
                "fs_user_group": {
                    "$ref": "#/definitions/FSUserGroup"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_default": {
                    "description": "common properties",
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "path_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "stretched": {
                    "description": "indicate that all pools under this policy is stretched pool",
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsStoragePolicyCreateReq": {
            "type": "object",
            "title": "DfsStoragePolicyCreateReq",
            "required": [
                "dfs_storage_policy"
            ],
            "properties": {
                "dfs_storage_policy": {
                    "$ref": "#/definitions/DfsStoragePolicyCreateReq_DfsStoragePolicy"
                }
            }
        },
        "DfsStoragePolicyCreateReq_DfsStoragePolicy": {
            "type": "object",
            "title": "DfsStoragePolicyCreateReq_DfsStoragePolicy",
            "required": [
                "name",
                "rootfs_id",
                "sc_id"
            ],
            "properties": {
                "description": {
                    "description": "descirption of storage policy",
                    "type": "string"
                },
                "filter": {
                    "description": "filter of storage policy",
                    "$ref": "#/definitions/DfsPolicyFilter"
                },
                "name": {
                    "description": "name of storage policy",
                    "type": "string"
                },
                "rootfs_id": {
                    "description": "id of rootfs",
                    "type": "integer",
                    "format": "int64"
                },
                "sc_id": {
                    "description": "scid of storage class",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsStoragePolicyResp": {
            "type": "object",
            "title": "DfsStoragePolicyResp",
            "required": [
                "dfs_storage_policy"
            ],
            "properties": {
                "dfs_storage_policy": {
                    "description": "dfs storage policy",
                    "$ref": "#/definitions/DfsStoragePolicy"
                },
                "link_path_info": {
                    "description": "link path info",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicyLinkPathInfo"
                    }
                }
            }
        },
        "DfsStoragePolicyUnlinkDfsPathReq": {
            "type": "object",
            "title": "DfsStoragePolicyUnlinkDfsPathReq",
            "required": [
                "dfs_storage_policy"
            ],
            "properties": {
                "dfs_storage_policy": {
                    "$ref": "#/definitions/DfsStoragePolicyUnlinkDfsPathReq_DfsStoragePolicy"
                }
            }
        },
        "DfsStoragePolicyUnlinkDfsPathReq_DfsStoragePolicy": {
            "type": "object",
            "title": "DfsStoragePolicyUnlinkDfsPathReq_DfsStoragePolicy",
            "required": [
                "rootfs_id",
                "unlink_paths"
            ],
            "properties": {
                "rootfs_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "unlink_paths": {
                    "description": "storage policy to cancel link with paths",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DfsStoragePolicyUpdateReq": {
            "type": "object",
            "title": "DfsStoragePolicyUpdateReq",
            "required": [
                "dfs_storage_policy"
            ],
            "properties": {
                "dfs_storage_policy": {
                    "$ref": "#/definitions/DfsStoragePolicyUpdateReq_DfsStoragePolicy"
                }
            }
        },
        "DfsStoragePolicyUpdateReq_DfsStoragePolicy": {
            "type": "object",
            "title": "DfsStoragePolicyUpdateReq_DfsStoragePolicy",
            "required": [
                "rootfs_id",
                "sc_id"
            ],
            "properties": {
                "description": {
                    "description": "descirption of storage policy",
                    "type": "string"
                },
                "filter": {
                    "description": "filter of storage policy",
                    "$ref": "#/definitions/DfsPolicyFilter"
                },
                "name": {
                    "description": "name of storage policy",
                    "type": "string"
                },
                "rootfs_id": {
                    "description": "id of rootfs",
                    "type": "integer",
                    "format": "int64"
                },
                "sc_id": {
                    "description": "scid of storage class",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsStoragePolicy_Nestview": {
            "type": "object",
            "title": "DfsStoragePolicy_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "DfsTier": {
            "description": "DfsTier contains information of a dfs tier and it's stats.",
            "type": "object",
            "title": "DfsTier",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "active_pool_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "dfs_rootfs": {
                    "$ref": "#/definitions/DfsRootfs_Nestview"
                },
                "dfs_storage_policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsStoragePolicy"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_default": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "policy_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pool_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "pool_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pool_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pool_policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsTierPoolPolicy"
                    }
                },
                "pools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Pool_Nestview"
                    }
                },
                "sc_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "storage_policy_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "stretched": {
                    "description": "indicate that all pools under this class is stretched pool",
                    "type": "boolean"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "write_policy": {
                    "type": "string"
                }
            }
        },
        "DfsTierAddPoolReq": {
            "type": "object",
            "title": "DfsTierAddPoolReq",
            "required": [
                "dfs_tier"
            ],
            "properties": {
                "dfs_tier": {
                    "description": "dfs tier",
                    "$ref": "#/definitions/DfsTierAddPoolReq_Tier"
                }
            }
        },
        "DfsTierAddPoolReq_Tier": {
            "type": "object",
            "title": "DfsTierAddPoolReq_Tier",
            "properties": {
                "active_pool_ids": {
                    "description": "active pool ids when add",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "pool_ids": {
                    "description": "pool ids to add/remove",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "pool_policies": {
                    "description": "active pool policy to add",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/poolPolicy"
                    }
                }
            }
        },
        "DfsTierPoolPolicy": {
            "description": "DfsTierPoolPolicy define relation between pool and dfs tier\n+X:model:generate;plur=DfsTierPoolPolicies;order_by=-ID;",
            "type": "object",
            "title": "DfsTierPoolPolicy",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "dfs_storage_class": {
                    "$ref": "#/definitions/DfsTier_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "threshold": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsTierRecord": {
            "description": "DfsTierRecord combine DfsTier and DfsTiersRecord as API response",
            "type": "object",
            "title": "DfsTierRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/DfsTier"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DfsTierStat"
                            }
                        }
                    }
                }
            ]
        },
        "DfsTierRemovePoolReq": {
            "type": "object",
            "title": "DfsTierRemovePoolReq",
            "required": [
                "dfs_tier"
            ],
            "properties": {
                "dfs_tier": {
                    "description": "dfs tier",
                    "$ref": "#/definitions/DfsTierRemovePoolReq_Tier"
                }
            }
        },
        "DfsTierRemovePoolReq_Tier": {
            "type": "object",
            "title": "DfsTierRemovePoolReq_Tier",
            "required": [
                "pool_ids",
                "to_default"
            ],
            "properties": {
                "pool_ids": {
                    "description": "pool ids to remove",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "to_default": {
                    "type": "boolean"
                }
            }
        },
        "DfsTierResp": {
            "type": "object",
            "title": "DfsTierResp",
            "required": [
                "dfs_tier"
            ],
            "properties": {
                "dfs_tier": {
                    "description": "dfs tier",
                    "$ref": "#/definitions/DfsTier"
                }
            }
        },
        "DfsTierStat": {
            "description": "DfsTierStat records dfs tier stat info",
            "type": "object",
            "title": "DfsTierStat",
            "properties": {
                "actual_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "data_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "degraded_percent": {
                    "type": "number",
                    "format": "double"
                },
                "healthy_percent": {
                    "type": "number",
                    "format": "double"
                },
                "read_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "read_iops": {
                    "type": "number",
                    "format": "double"
                },
                "read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_iops": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_percent": {
                    "type": "number",
                    "format": "double"
                },
                "total_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "unavailable_percent": {
                    "type": "number",
                    "format": "double"
                },
                "used_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "write_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "write_iops": {
                    "type": "number",
                    "format": "double"
                },
                "write_latency_us": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "DfsTier_Nestview": {
            "type": "object",
            "title": "DfsTier_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DfsTiersResp": {
            "type": "object",
            "title": "DfsTiersResp",
            "required": [
                "dfs_tiers"
            ],
            "properties": {
                "dfs_tiers": {
                    "description": "dfs tiers",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsTier"
                    }
                }
            }
        },
        "DfsTrash": {
            "description": "DfsTrash defines model of dfs trash\n+X:model:generate;order_by=-ID;etcd_lock;with_detailed; +X:benchmark:",
            "type": "object",
            "title": "DfsTrash",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "expired_time": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "$ref": "#/definitions/DfsPath_Nestview"
                },
                "progress": {
                    "type": "number",
                    "format": "double"
                },
                "progress_info": {
                    "$ref": "#/definitions/ProgressInfo"
                },
                "rootfs": {
                    "$ref": "#/definitions/DfsRootfs_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "total_files": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsTrashFile": {
            "type": "object",
            "title": "DfsTrashFile",
            "properties": {
                "access": {
                    "description": "access time",
                    "type": "string",
                    "format": "date-time"
                },
                "base_file_id": {
                    "description": "base file id in trash",
                    "type": "string"
                },
                "base_name": {
                    "description": "file base name in trash",
                    "type": "string"
                },
                "change": {
                    "description": "change time",
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_rootfs": {
                    "description": "dfs rootfs",
                    "$ref": "#/definitions/NestedRootfs"
                },
                "dfs_trash": {
                    "description": "dfs trash",
                    "$ref": "#/definitions/NestedTrash"
                },
                "files": {
                    "description": "sub file count when it is a directory",
                    "type": "integer",
                    "format": "int64"
                },
                "group": {
                    "description": "file owner user group",
                    "type": "integer",
                    "format": "int64"
                },
                "inode": {
                    "description": "file inode",
                    "type": "integer",
                    "format": "int64"
                },
                "modify": {
                    "description": "modify time",
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "description": "file name",
                    "type": "string"
                },
                "original_name": {
                    "description": "original name before file moved to trash",
                    "type": "string"
                },
                "owner": {
                    "description": "file owner user",
                    "type": "integer",
                    "format": "int64"
                },
                "parent": {
                    "description": "parent path",
                    "type": "string"
                },
                "size": {
                    "description": "file size",
                    "type": "integer",
                    "format": "int64"
                },
                "trash_path": {
                    "description": "trash path",
                    "type": "string"
                },
                "type": {
                    "description": "file type",
                    "type": "string"
                }
            }
        },
        "DfsTrashFileJob": {
            "description": "DfsTrashFileJob defines model of dfs trash file job\n+X:model:generate;order_by=-ID;with_detailed; +X:benchmark:",
            "type": "object",
            "title": "DfsTrashFileJob",
            "properties": {
                "action": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "type": "string"
                },
                "progress": {
                    "type": "number",
                    "format": "double"
                },
                "progress_info": {
                    "$ref": "#/definitions/ProgressInfo"
                },
                "status": {
                    "type": "string"
                },
                "trash": {
                    "$ref": "#/definitions/DfsTrash_Nestview"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsTrashFileJobResp": {
            "type": "object",
            "title": "DfsTrashFileJobResp",
            "required": [
                "dfs_trash_file_job"
            ],
            "properties": {
                "dfs_trash_file_job": {
                    "description": "dfs trash records",
                    "$ref": "#/definitions/DfsTrashFileJob"
                }
            }
        },
        "DfsTrashFilesResp": {
            "type": "object",
            "title": "DfsTrashFilesResp",
            "properties": {
                "dfs_trash_files": {
                    "description": "files in dfs trash",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsTrashFile"
                    }
                },
                "eof": {
                    "description": "for ls directory, set to true when reach end",
                    "type": "boolean"
                }
            }
        },
        "DfsTrashOpenReq": {
            "type": "object",
            "title": "DfsTrashOpenReq",
            "required": [
                "dfs_trash"
            ],
            "properties": {
                "dfs_trash": {
                    "$ref": "#/definitions/DfsTrashOpenReq_Trash"
                }
            }
        },
        "DfsTrashOpenReq_Trash": {
            "type": "object",
            "title": "DfsTrashOpenReq_Trash",
            "required": [
                "dfs_rootfs_id",
                "path",
                "expired_time"
            ],
            "properties": {
                "dfs_rootfs_id": {
                    "description": "id of dfs rootfs",
                    "type": "integer",
                    "format": "int64"
                },
                "expired_time": {
                    "description": "file expired time",
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "description": "path of trash",
                    "type": "string"
                }
            }
        },
        "DfsTrashRemoveFileReq": {
            "type": "object",
            "title": "DfsTrashRemoveFileReq",
            "required": [
                "dfs_trash"
            ],
            "properties": {
                "dfs_trash": {
                    "$ref": "#/definitions/DfsTrashRemoveFileReq_Trash"
                }
            }
        },
        "DfsTrashRemoveFileReq_Trash": {
            "type": "object",
            "title": "DfsTrashRemoveFileReq_Trash",
            "required": [
                "path"
            ],
            "properties": {
                "path": {
                    "description": "path of trash file",
                    "type": "string"
                }
            }
        },
        "DfsTrashResp": {
            "type": "object",
            "title": "DfsTrashResp",
            "required": [
                "dfs_trash"
            ],
            "properties": {
                "dfs_trash": {
                    "$ref": "#/definitions/DfsTrash"
                }
            }
        },
        "DfsTrashRestoreFileReq": {
            "type": "object",
            "title": "DfsTrashRestoreFileReq",
            "required": [
                "dfs_trash"
            ],
            "properties": {
                "dfs_trash": {
                    "$ref": "#/definitions/DfsTrashRestoreFileReq_Trash"
                }
            }
        },
        "DfsTrashRestoreFileReq_Trash": {
            "type": "object",
            "title": "DfsTrashRestoreFileReq_Trash",
            "required": [
                "path"
            ],
            "properties": {
                "path": {
                    "description": "path of trash file",
                    "type": "string"
                }
            }
        },
        "DfsTrashUpdateReq": {
            "type": "object",
            "title": "DfsTrashUpdateReq",
            "required": [
                "dfs_trash"
            ],
            "properties": {
                "dfs_trash": {
                    "$ref": "#/definitions/DfsTrashUpdateReq_Trash"
                }
            }
        },
        "DfsTrashUpdateReq_Trash": {
            "type": "object",
            "title": "DfsTrashUpdateReq_Trash",
            "required": [
                "expired_time"
            ],
            "properties": {
                "expired_time": {
                    "description": "file expired time",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsTrash_Nestview": {
            "type": "object",
            "title": "DfsTrash_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsTrashesResp": {
            "type": "object",
            "title": "DfsTrashesResp",
            "required": [
                "dfs_trashes"
            ],
            "properties": {
                "dfs_trashes": {
                    "description": "dfs trash records",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsTrash"
                    }
                }
            }
        },
        "DfsVIP": {
            "description": "DfsVIP defines model of dfs vip +X:model:generate;order_by=-ID;etcd_lock;\n+X:benchmark:",
            "type": "object",
            "title": "DfsVIP",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroup_Nestview"
                },
                "dfs_gateway_zone": {
                    "$ref": "#/definitions/DfsGatewayZone_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "primary_gateway": {
                    "$ref": "#/definitions/DfsGateway_Nestview"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "vip": {
                    "type": "string"
                },
                "vip_mask": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsVIPMoveReq": {
            "type": "object",
            "title": "DfsVIPMoveReq",
            "required": [
                "dfs_vip"
            ],
            "properties": {
                "dfs_vip": {
                    "$ref": "#/definitions/DfsVIPMoveReq_VIP"
                }
            }
        },
        "DfsVIPMoveReq_VIP": {
            "type": "object",
            "title": "DfsVIPMoveReq_VIP",
            "required": [
                "dfs_gateway_id"
            ],
            "properties": {
                "dfs_gateway_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsVIPResp": {
            "type": "object",
            "title": "DfsVIPResp",
            "required": [
                "dfs_vip"
            ],
            "properties": {
                "dfs_vip": {
                    "description": "dfs vip",
                    "$ref": "#/definitions/DfsVIP"
                }
            }
        },
        "DfsVIPsResp": {
            "type": "object",
            "title": "DfsVIPsResp",
            "required": [
                "dfs_vips"
            ],
            "properties": {
                "dfs_vips": {
                    "description": "dfs vips",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsVIP"
                    }
                }
            }
        },
        "DfsWorm": {
            "description": "DfsWorm defines model of dfs worm +X:model:generate;order_by=-ID +X:benchmark:",
            "type": "object",
            "title": "DfsWorm",
            "properties": {
                "auto_lock_period": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "default_protect_period": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "max_protect_period": {
                    "type": "string"
                },
                "min_protect_period": {
                    "type": "string"
                },
                "path": {
                    "$ref": "#/definitions/DfsPath_Nestview"
                },
                "rootfs": {
                    "$ref": "#/definitions/DfsRootfs_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DfsWormCreateReq": {
            "type": "object",
            "title": "DfsWormCreateReq",
            "required": [
                "dfs_worm"
            ],
            "properties": {
                "dfs_worm": {
                    "$ref": "#/definitions/DfsWormCreateReq_Worm"
                }
            }
        },
        "DfsWormCreateReq_Worm": {
            "type": "object",
            "title": "DfsWormCreateReq_Worm",
            "required": [
                "rootfs_id",
                "path",
                "min_protect_period",
                "max_protect_period",
                "default_protect_period",
                "auto_lock_period"
            ],
            "properties": {
                "auto_lock_period": {
                    "description": "automatic locking period",
                    "type": "string"
                },
                "default_protect_period": {
                    "description": "default protect period",
                    "type": "string"
                },
                "max_protect_period": {
                    "description": "maximum protect period",
                    "type": "string"
                },
                "min_protect_period": {
                    "description": "minimum protect period",
                    "type": "string"
                },
                "path": {
                    "description": "worm root path",
                    "type": "string"
                },
                "rootfs_id": {
                    "description": "id of dfs rootfs",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DfsWormResp": {
            "type": "object",
            "title": "DfsWormResp",
            "required": [
                "dfs_worm"
            ],
            "properties": {
                "dfs_worm": {
                    "$ref": "#/definitions/DfsWorm"
                }
            }
        },
        "DfsWormUpdateReq": {
            "type": "object",
            "title": "DfsWormUpdateReq",
            "required": [
                "dfs_worm"
            ],
            "properties": {
                "dfs_worm": {
                    "$ref": "#/definitions/DfsWormUpdateReq_Worm"
                }
            }
        },
        "DfsWormUpdateReq_Worm": {
            "type": "object",
            "title": "DfsWormUpdateReq_Worm",
            "properties": {
                "auto_lock_period": {
                    "description": "automatic locking period",
                    "type": "string"
                },
                "default_protect_period": {
                    "description": "default protect period",
                    "type": "string"
                },
                "max_protect_period": {
                    "description": "maximum protect period",
                    "type": "string"
                },
                "min_protect_period": {
                    "description": "minimum protect period",
                    "type": "string"
                }
            }
        },
        "DfsWormsResp": {
            "type": "object",
            "title": "DfsWormsResp",
            "required": [
                "dfs_worms"
            ],
            "properties": {
                "dfs_worms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DfsWorm"
                    }
                }
            }
        },
        "DirResource": {
            "type": "object",
            "title": "DirResource",
            "properties": {
                "bpp_existed": {
                    "type": "boolean"
                },
                "bpp_on_parent_path_existed": {
                    "type": "boolean"
                },
                "bpp_on_sub_path_existed": {
                    "description": "BPPExisted means 'BucketParentPath' in fs_user",
                    "type": "boolean"
                },
                "bucket_existed": {
                    "type": "boolean"
                },
                "bucket_on_parent_path_existed": {
                    "type": "boolean"
                },
                "bucket_on_sub_path_existed": {
                    "type": "boolean"
                },
                "dir": {
                    "type": "string"
                },
                "ftp_share_existed": {
                    "type": "boolean"
                },
                "ftp_share_on_parent_path_existed": {
                    "type": "boolean"
                },
                "ftp_share_on_sub_path_existed": {
                    "type": "boolean"
                },
                "hdfs_existed": {
                    "type": "boolean"
                },
                "hdfs_on_parent_path_existed": {
                    "type": "boolean"
                },
                "hdfs_on_sub_path_existed": {
                    "type": "boolean"
                },
                "nfs_share_existed": {
                    "type": "boolean"
                },
                "nfs_share_on_parent_path_existed": {
                    "type": "boolean"
                },
                "nfs_share_on_sub_path_existed": {
                    "type": "boolean"
                },
                "smb_share_existed": {
                    "type": "boolean"
                },
                "smb_share_on_parent_path_existed": {
                    "type": "boolean"
                },
                "smb_share_on_sub_path_existed": {
                    "type": "boolean"
                },
                "worm_existed": {
                    "type": "boolean"
                },
                "worm_log_existed": {
                    "type": "boolean"
                },
                "worm_on_parent_path_existed": {
                    "type": "boolean"
                },
                "worm_on_sub_path_existed": {
                    "type": "boolean"
                }
            }
        },
        "Disk": {
            "description": "Disk contains information of a disk and it's stats.",
            "type": "object",
            "title": "Disk",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "bytes": {
                    "description": "size of disk",
                    "type": "integer",
                    "format": "int64"
                },
                "cache_create": {
                    "type": "string",
                    "format": "date-time"
                },
                "channel_id": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "controller_id": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "device": {
                    "type": "string"
                },
                "disk_type": {
                    "type": "string"
                },
                "driver_type": {
                    "type": "string"
                },
                "enclosure_id": {
                    "type": "string"
                },
                "host": {
                    "$ref": "#/definitions/Host"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_cache": {
                    "description": "used as cache disk, deprecated",
                    "type": "boolean"
                },
                "is_root": {
                    "description": "used as root disk, deprecated",
                    "type": "boolean"
                },
                "lighting_status": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partition_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "partition_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "partitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Partition"
                    }
                },
                "power_safe": {
                    "type": "boolean"
                },
                "raid_status": {
                    "type": "string"
                },
                "rotation_rate": {
                    "type": "string"
                },
                "rotational": {
                    "type": "boolean"
                },
                "serial": {
                    "type": "string"
                },
                "slot_id": {
                    "type": "string"
                },
                "smart_attrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SmartAttr"
                    }
                },
                "ssd_life_left": {
                    "type": "integer",
                    "format": "int64"
                },
                "ssd_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "usage": {
                    "description": "disk usage",
                    "type": "string"
                },
                "used": {
                    "description": "disk is used, deprecated",
                    "type": "boolean"
                },
                "wwid": {
                    "type": "string"
                }
            }
        },
        "DiskPrediction": {
            "description": "DiskPrediction contains disk prediction data",
            "type": "object",
            "title": "DiskPrediction",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte_1day": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte_30days": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte_7days": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte_points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PredictionPoint"
                    }
                }
            }
        },
        "DiskRecord": {
            "description": "DiskRecord contains information of a disk",
            "type": "object",
            "title": "DiskRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/Disk"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DiskStat"
                            }
                        }
                    }
                }
            ]
        },
        "DiskResp": {
            "type": "object",
            "title": "DiskResp",
            "required": [
                "disk"
            ],
            "properties": {
                "disk": {
                    "description": "disk",
                    "$ref": "#/definitions/DiskRecord"
                }
            }
        },
        "DiskSamplesResp": {
            "type": "object",
            "title": "DiskSamplesResp",
            "required": [
                "disk_samples"
            ],
            "properties": {
                "disk_samples": {
                    "description": "disk samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DiskStat"
                    }
                }
            }
        },
        "DiskStat": {
            "description": "DiskStat defines the basic info of a DiskStat",
            "type": "object",
            "title": "DiskStat",
            "properties": {
                "avg_queue_len": {
                    "type": "number",
                    "format": "double"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "io_util": {
                    "type": "number",
                    "format": "double"
                },
                "kbyte_per_io": {
                    "type": "number",
                    "format": "double"
                },
                "read_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "read_iops": {
                    "type": "number",
                    "format": "double"
                },
                "read_merged_ps": {
                    "type": "number",
                    "format": "double"
                },
                "read_wait_us": {
                    "type": "number",
                    "format": "double"
                },
                "total_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "total_io_wait_us": {
                    "type": "number",
                    "format": "double"
                },
                "total_iops": {
                    "type": "number",
                    "format": "double"
                },
                "total_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_percent": {
                    "type": "number",
                    "format": "double"
                },
                "write_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "write_iops": {
                    "type": "number",
                    "format": "double"
                },
                "write_merged_ps": {
                    "type": "number",
                    "format": "double"
                },
                "write_wait_us": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "DiskUpdateReq": {
            "type": "object",
            "title": "DiskUpdateReq",
            "required": [
                "disk"
            ],
            "properties": {
                "disk": {
                    "$ref": "#/definitions/DiskUpdateReq_Disk"
                }
            }
        },
        "DiskUpdateReq_Disk": {
            "type": "object",
            "title": "DiskUpdateReq_Disk",
            "properties": {
                "disk_type": {
                    "type": "string"
                },
                "lighting_status": {
                    "type": "string"
                },
                "power_safe": {
                    "type": "boolean"
                }
            }
        },
        "Disk_Nestview": {
            "type": "object",
            "title": "Disk_Nestview",
            "properties": {
                "device": {
                    "type": "string"
                },
                "disk_type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "slot_id": {
                    "type": "string"
                },
                "ssd_life_left": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "DisksResp": {
            "type": "object",
            "title": "DisksResp",
            "required": [
                "disks"
            ],
            "properties": {
                "disks": {
                    "description": "disks",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DiskRecord"
                    }
                }
            }
        },
        "DomainUser": {
            "description": "DomainUser defines model of domain user +X:model:generate +X:benchmark:",
            "type": "object",
            "title": "DomainUser",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "security": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DomainUserGroup": {
            "description": "DomainUserGroup defines model of domain user group +X:model:generate\n+X:benchmark:",
            "type": "object",
            "title": "DomainUserGroup",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "security": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_group_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DomainUserGroup_Nestview": {
            "type": "object",
            "title": "DomainUserGroup_Nestview",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DomainUserGroupsResp": {
            "type": "object",
            "title": "DomainUserGroupsResp",
            "properties": {
                "domain_user_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DomainUserGroup"
                    }
                }
            }
        },
        "DomainUserValidator": {
            "description": "DomainUserValidator defines the validator for domain users",
            "type": "object",
            "title": "DomainUserValidator",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "members": {
                    "type": "object"
                },
                "report": {
                    "type": "object"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DomainUserValidatorCreateReq": {
            "type": "object",
            "title": "DomainUserValidatorCreateReq",
            "properties": {
                "domain_user_validator": {
                    "$ref": "#/definitions/DomainUserValidatorCreateReq_Validator"
                }
            }
        },
        "DomainUserValidatorCreateReq_Validator": {
            "type": "object",
            "title": "DomainUserValidatorCreateReq_Validator",
            "required": [
                "type"
            ],
            "properties": {
                "gateway_group_id": {
                    "description": "Gateway Group ID",
                    "type": "integer",
                    "format": "int64"
                },
                "gateway_group_type": {
                    "description": "Gateway Group type",
                    "type": "string"
                },
                "groups": {
                    "description": "Domain groups",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "Domain type",
                    "type": "string"
                },
                "users": {
                    "description": "Domain users",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DomainUserValidatorResp": {
            "type": "object",
            "title": "DomainUserValidatorResp",
            "properties": {
                "domain_user_validator": {
                    "$ref": "#/definitions/DomainUserValidator"
                }
            }
        },
        "DomainUser_Nestview": {
            "type": "object",
            "title": "DomainUser_Nestview",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DomainUsersResp": {
            "type": "object",
            "title": "DomainUsersResp",
            "properties": {
                "domain_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DomainUser"
                    }
                }
            }
        },
        "DpBackupBlockSnapshot": {
            "description": "DpBackupBlockSnapshot is a block snapshot stored on a site",
            "type": "object",
            "title": "DpBackupBlockSnapshot",
            "properties": {
                "backup_type": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "volume_size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpBackupBlockSnapshotsResp": {
            "type": "object",
            "title": "DpBackupBlockSnapshotsResp",
            "required": [
                "backup_block_snapshots"
            ],
            "properties": {
                "backup_block_snapshots": {
                    "description": "block snapshots",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpBackupBlockSnapshot"
                    }
                }
            }
        },
        "DpBackupBlockVolume": {
            "description": "DpBackupBlockVolume is a block volume stored on a site",
            "type": "object",
            "title": "DpBackupBlockVolume",
            "properties": {
                "format": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "volume_name": {
                    "type": "string"
                }
            }
        },
        "DpBackupBlockVolumesResp": {
            "type": "object",
            "title": "DpBackupBlockVolumesResp",
            "required": [
                "backup_block_volumes"
            ],
            "properties": {
                "backup_block_volumes": {
                    "description": "block volumes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpBackupBlockVolume"
                    }
                }
            }
        },
        "DpBackupCluster": {
            "description": "DpBackupCluster is a cluster stored on a site",
            "type": "object",
            "title": "DpBackupCluster",
            "properties": {
                "fs_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DpBackupClustersResp": {
            "type": "object",
            "title": "DpBackupClustersResp",
            "required": [
                "backup_clusters"
            ],
            "properties": {
                "backup_clusters": {
                    "description": "clusters",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpBackupCluster"
                    }
                }
            }
        },
        "DpBlockAsyncReplicationJob": {
            "description": "DpBlockAsyncReplicationJob is one execution of a dp block replication protection\n+X:model:generate;plur=DpBlockAsyncReplicationJobs;order_by=-ID;with_detailed;\n+X:benchmark:",
            "type": "object",
            "title": "DpBlockAsyncReplicationJob",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "diff_type": {
                    "type": "string"
                },
                "dp_block_async_replication_pair": {
                    "$ref": "#/definitions/DpBlockAsyncReplicationPair_Nestview"
                },
                "dp_volume_group_snapshot_replication_job": {
                    "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationJob_Nestview"
                },
                "finished_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "max_retry_times": {
                    "type": "integer",
                    "format": "int64"
                },
                "progress": {
                    "type": "number",
                    "format": "double"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "snapshot": {
                    "$ref": "#/definitions/Snapshot_Nestview"
                },
                "started_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "volume_name": {
                    "type": "string"
                }
            }
        },
        "DpBlockAsyncReplicationJobResp": {
            "type": "object",
            "title": "DpBlockAsyncReplicationJobResp",
            "properties": {
                "dp_block_async_replication_job": {
                    "$ref": "#/definitions/DpBlockAsyncReplicationJob"
                }
            }
        },
        "DpBlockAsyncReplicationJobsResp": {
            "type": "object",
            "title": "DpBlockAsyncReplicationJobsResp",
            "properties": {
                "dp_block_async_replication_jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpBlockAsyncReplicationJob"
                    }
                }
            }
        },
        "DpBlockAsyncReplicationPair": {
            "description": "DpBlockAsyncReplicationPair represent the async replication relationship of a\npair of volumes\n+X:model:generate;related_sel;related_depth=2;plur=DpBlockAsyncReplicationPairs;order_by=-ID;with_detailed;\n+X:benchmark:",
            "type": "object",
            "title": "DpBlockAsyncReplicationPair",
            "properties": {
                "block_volume": {
                    "$ref": "#/definitions/Volume_Nestview"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "connected": {
                    "type": "boolean"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dp_block_async_replication_policy": {
                    "$ref": "#/definitions/DpBlockAsyncReplicationPolicy_Nestview"
                },
                "dp_volume_group_snapshot_replication_pair": {
                    "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPair_Nestview"
                },
                "failovered": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "last_success_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "local_role": {
                    "type": "string"
                },
                "pair_pool_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "pair_pool_name": {
                    "type": "string"
                },
                "pair_volume_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "pair_volume_name": {
                    "type": "string"
                },
                "paused": {
                    "type": "boolean"
                },
                "policy_cron": {
                    "type": "string"
                },
                "pre_status": {
                    "type": "string"
                },
                "remote_cluster": {
                    "$ref": "#/definitions/RemoteCluster_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpBlockAsyncReplicationPairCreateReq": {
            "type": "object",
            "title": "DpBlockAsyncReplicationPairCreateReq",
            "required": [
                "dp_block_async_replication_pair"
            ],
            "properties": {
                "dp_block_async_replication_pair": {
                    "$ref": "#/definitions/DpBlockAsyncReplicationPairCreateReq_Pair"
                }
            }
        },
        "DpBlockAsyncReplicationPairCreateReq_Pair": {
            "type": "object",
            "title": "DpBlockAsyncReplicationPairCreateReq_Pair",
            "required": [
                "master_cluster_fs_id",
                "master_pair_id",
                "master_volume_id",
                "master_volume_name",
                "master_pool_id",
                "master_pool_name",
                "slave_volume_name",
                "slave_pool_id",
                "slave_pool_name",
                "chain_name",
                "master_volume_size",
                "master_gateway",
                "slave_gateway",
                "group_pair_id",
                "policy_cron"
            ],
            "properties": {
                "chain_name": {
                    "description": "chain name",
                    "type": "string"
                },
                "group_pair_id": {
                    "description": "group pair id",
                    "type": "integer",
                    "format": "int64"
                },
                "master_cluster_fs_id": {
                    "description": "master cluster fs id",
                    "type": "string"
                },
                "master_gateway": {
                    "description": "gateway ip",
                    "type": "string"
                },
                "master_pair_id": {
                    "description": "master pair id",
                    "type": "integer",
                    "format": "int64"
                },
                "master_pool_id": {
                    "description": "master pool id",
                    "type": "integer",
                    "format": "int64"
                },
                "master_pool_name": {
                    "description": "master pool name",
                    "type": "string"
                },
                "master_volume_id": {
                    "description": "master volume id",
                    "type": "integer",
                    "format": "int64"
                },
                "master_volume_name": {
                    "description": "master volume name",
                    "type": "string"
                },
                "master_volume_size": {
                    "description": "volume size",
                    "type": "integer",
                    "format": "int64"
                },
                "master_volume_uuid": {
                    "description": "master volume uuid",
                    "type": "string"
                },
                "policy_cron": {
                    "description": "policy cron",
                    "type": "string"
                },
                "slave_gateway": {
                    "description": "gateway ip",
                    "type": "string"
                },
                "slave_pool_id": {
                    "description": "slave pool id",
                    "type": "integer",
                    "format": "int64"
                },
                "slave_pool_name": {
                    "description": "slave pool name",
                    "type": "string"
                },
                "slave_volume_name": {
                    "description": "slave volume name",
                    "type": "string"
                }
            }
        },
        "DpBlockAsyncReplicationPairResp": {
            "type": "object",
            "title": "DpBlockAsyncReplicationPairResp",
            "properties": {
                "dp_block_async_replication_pair": {
                    "$ref": "#/definitions/DpBlockAsyncReplicationPair"
                }
            }
        },
        "DpBlockAsyncReplicationPairUpdateReq": {
            "type": "object",
            "title": "DpBlockAsyncReplicationPairUpdateReq",
            "required": [
                "dp_block_async_replication_pair"
            ],
            "properties": {
                "dp_block_async_replication_pair": {
                    "$ref": "#/definitions/DpBlockAsyncReplicationPairUpdateReq_Pair"
                }
            }
        },
        "DpBlockAsyncReplicationPairUpdateReq_Pair": {
            "type": "object",
            "title": "DpBlockAsyncReplicationPairUpdateReq_Pair",
            "properties": {
                "connected": {
                    "description": "connection",
                    "type": "boolean"
                },
                "master_policy_cron": {
                    "description": "master policy cron",
                    "type": "string"
                },
                "master_pool_name": {
                    "description": "master pool name",
                    "type": "string"
                },
                "master_volume_name": {
                    "description": "master volume name",
                    "type": "string"
                }
            }
        },
        "DpBlockAsyncReplicationPair_Nestview": {
            "type": "object",
            "title": "DpBlockAsyncReplicationPair_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpBlockAsyncReplicationPairsResp": {
            "type": "object",
            "title": "DpBlockAsyncReplicationPairsResp",
            "properties": {
                "dp_block_async_replication_pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpBlockAsyncReplicationPair"
                    }
                }
            }
        },
        "DpBlockAsyncReplicationPoliciesResp": {
            "type": "object",
            "title": "DpBlockAsyncReplicationPoliciesResp",
            "properties": {
                "dp_block_async_replication_policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpBlockAsyncReplicationPolicy"
                    }
                }
            }
        },
        "DpBlockAsyncReplicationPolicy": {
            "description": "DpBlockAsyncReplicationPolicy protects a block volume by async replication\n+X:model:generate;plur=DpBlockAsyncReplicationPolicies;with_detailed;order_by=-ID;\n+X:benchmark:",
            "type": "object",
            "title": "DpBlockAsyncReplicationPolicy",
            "properties": {
                "block_volume_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "cron_expr": {
                    "type": "string"
                },
                "dp_gateway": {
                    "$ref": "#/definitions/DpGateway_Nestview"
                },
                "dp_site": {
                    "$ref": "#/definitions/DpSite_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "retained_max": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpBlockAsyncReplicationPolicyCreateReq": {
            "type": "object",
            "title": "DpBlockAsyncReplicationPolicyCreateReq",
            "required": [
                "dp_block_async_replication_policy"
            ],
            "properties": {
                "dp_block_async_replication_policy": {
                    "$ref": "#/definitions/DpBlockAsyncReplicationPolicyCreateReq_Policy"
                }
            }
        },
        "DpBlockAsyncReplicationPolicyCreateReq_Policy": {
            "type": "object",
            "title": "DpBlockAsyncReplicationPolicyCreateReq_Policy",
            "required": [
                "name",
                "dp_site_id",
                "dp_gateway_id",
                "cron_expr"
            ],
            "properties": {
                "cron_expr": {
                    "description": "cron expression",
                    "type": "string"
                },
                "dp_gateway_id": {
                    "description": "dp gateway",
                    "type": "integer",
                    "format": "int64"
                },
                "dp_site_id": {
                    "description": "dp site",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "retained_max": {
                    "description": "retained max number of snapshots",
                    "type": "integer",
                    "format": "int64"
                },
                "timeout": {
                    "description": "timeout",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpBlockAsyncReplicationPolicyResp": {
            "type": "object",
            "title": "DpBlockAsyncReplicationPolicyResp",
            "properties": {
                "dp_block_async_replication_policy": {
                    "$ref": "#/definitions/DpBlockAsyncReplicationPolicy"
                }
            }
        },
        "DpBlockAsyncReplicationPolicyUpdateReq": {
            "type": "object",
            "title": "DpBlockAsyncReplicationPolicyUpdateReq",
            "required": [
                "dp_block_async_replication_policy"
            ],
            "properties": {
                "dp_block_async_replication_policy": {
                    "$ref": "#/definitions/DpBlockAsyncReplicationPolicyUpdateReq_Policy"
                }
            }
        },
        "DpBlockAsyncReplicationPolicyUpdateReq_Policy": {
            "type": "object",
            "title": "DpBlockAsyncReplicationPolicyUpdateReq_Policy",
            "properties": {
                "cron_expr": {
                    "description": "cron expression",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "retained_max": {
                    "description": "retained max number of snapshots",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpBlockAsyncReplicationPolicy_Nestview": {
            "type": "object",
            "title": "DpBlockAsyncReplicationPolicy_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DpBlockBackupJob": {
            "description": "DpBlockBackupJob is one execution of a dp block backup protection",
            "type": "object",
            "title": "DpBlockBackupJob",
            "properties": {
                "block_snapshot": {
                    "$ref": "#/definitions/Snapshot_Nestview"
                },
                "block_volume": {
                    "$ref": "#/definitions/Volume_Nestview"
                },
                "block_volume_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "diff_type": {
                    "type": "string"
                },
                "dp_block_backup_policy": {
                    "$ref": "#/definitions/DpBlockBackupPolicy_Nestview"
                },
                "finished_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "max_retry_times": {
                    "type": "integer",
                    "format": "int64"
                },
                "progress": {
                    "type": "number",
                    "format": "double"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "started_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpBlockBackupJobsResp": {
            "type": "object",
            "title": "DpBlockBackupJobsResp",
            "required": [
                "dp_block_backup_jobs"
            ],
            "properties": {
                "dp_block_backup_jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpBlockBackupJob"
                    }
                }
            }
        },
        "DpBlockBackupPoliciesResp": {
            "type": "object",
            "title": "DpBlockBackupPoliciesResp",
            "properties": {
                "dp_block_backup_policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpBlockBackupPolicy"
                    }
                }
            }
        },
        "DpBlockBackupPolicy": {
            "description": "DpBlockBackupPolicy protects a block volume by backup snapshot to remote site",
            "type": "object",
            "title": "DpBlockBackupPolicy",
            "properties": {
                "block_volume_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dp_gateway": {
                    "$ref": "#/definitions/DpGateway_Nestview"
                },
                "dp_site": {
                    "$ref": "#/definitions/DpSite_Nestview"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "full_cron_expr": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "inc_cron_expr": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "retained_max": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpBlockBackupPolicyCreateReq": {
            "type": "object",
            "title": "DpBlockBackupPolicyCreateReq",
            "required": [
                "dp_block_backup_policy"
            ],
            "properties": {
                "dp_block_backup_policy": {
                    "$ref": "#/definitions/DpBlockBackupPolicyCreateReq_Policy"
                }
            }
        },
        "DpBlockBackupPolicyCreateReq_Policy": {
            "type": "object",
            "title": "DpBlockBackupPolicyCreateReq_Policy",
            "required": [
                "name",
                "retained_max",
                "dp_gateway_id",
                "full_cron_expr",
                "dp_site_id"
            ],
            "properties": {
                "dp_gateway_id": {
                    "description": "dp gateway",
                    "type": "integer",
                    "format": "int64"
                },
                "dp_site_id": {
                    "description": "dp site",
                    "type": "integer",
                    "format": "int64"
                },
                "encrypted": {
                    "description": "encrypted or not",
                    "type": "boolean"
                },
                "full_cron_expr": {
                    "description": "cron expression for full backup",
                    "type": "string"
                },
                "inc_cron_expr": {
                    "description": "cron expression for increment backup",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "retained_max": {
                    "description": "retained max number of backups",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpBlockBackupPolicyResp": {
            "type": "object",
            "title": "DpBlockBackupPolicyResp",
            "properties": {
                "dp_block_backup_policy": {
                    "$ref": "#/definitions/DpBlockBackupPolicy"
                }
            }
        },
        "DpBlockBackupPolicyUpdateReq": {
            "type": "object",
            "title": "DpBlockBackupPolicyUpdateReq",
            "required": [
                "dp_block_backup_policy"
            ],
            "properties": {
                "dp_block_backup_policy": {
                    "$ref": "#/definitions/DpBlockBackupPolicyUpdateReq_Policy"
                }
            }
        },
        "DpBlockBackupPolicyUpdateReq_Policy": {
            "type": "object",
            "title": "DpBlockBackupPolicyUpdateReq_Policy",
            "properties": {
                "encrypted": {
                    "description": "encrypted or not",
                    "type": "boolean"
                },
                "full_cron_expr": {
                    "description": "cron expression for full backup",
                    "type": "string"
                },
                "inc_cron_expr": {
                    "description": "cron expression for increment backup",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "retained_max": {
                    "description": "retained max number of backups",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpBlockBackupPolicy_Nestview": {
            "type": "object",
            "title": "DpBlockBackupPolicy_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DpBlockReplicationPoliciesResp": {
            "type": "object",
            "title": "DpBlockReplicationPoliciesResp",
            "properties": {
                "dp_block_replication_policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpBlockReplicationPolicy"
                    }
                }
            }
        },
        "DpBlockReplicationPolicy": {
            "description": "DpBlockReplicationPolicy protects a block volume by sync replication",
            "type": "object",
            "title": "DpBlockReplicationPolicy",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dp_site": {
                    "$ref": "#/definitions/DpSite_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timeout_seconds": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpBlockReplicationPolicyCreateReq": {
            "type": "object",
            "title": "DpBlockReplicationPolicyCreateReq",
            "required": [
                "dp_block_replication_policy"
            ],
            "properties": {
                "dp_block_replication_policy": {
                    "$ref": "#/definitions/DpBlockReplicationPolicyCreateReq_Policy"
                }
            }
        },
        "DpBlockReplicationPolicyCreateReq_Policy": {
            "type": "object",
            "title": "DpBlockReplicationPolicyCreateReq_Policy",
            "required": [
                "name",
                "dp_site_id",
                "timeout_seconds"
            ],
            "properties": {
                "dp_site_id": {
                    "description": "protection site id",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "timeout_seconds": {
                    "description": "replication timeout seconds",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpBlockReplicationPolicyResp": {
            "type": "object",
            "title": "DpBlockReplicationPolicyResp",
            "properties": {
                "dp_block_replication_policy": {
                    "$ref": "#/definitions/DpBlockReplicationPolicy"
                }
            }
        },
        "DpBlockReplicationPolicyUpdateReq": {
            "type": "object",
            "title": "DpBlockReplicationPolicyUpdateReq",
            "required": [
                "dp_block_replication_policy"
            ],
            "properties": {
                "dp_block_replication_policy": {
                    "$ref": "#/definitions/DpBlockReplicationPolicyUpdateReq_Policy"
                }
            }
        },
        "DpBlockReplicationPolicyUpdateReq_Policy": {
            "type": "object",
            "title": "DpBlockReplicationPolicyUpdateReq_Policy",
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "timeout_seconds": {
                    "description": "replication timeout seconds",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpBlockReplicationPolicy_Nestview": {
            "type": "object",
            "title": "DpBlockReplicationPolicy_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DpBlockSnapshotJob": {
            "description": "DpBlockSnapshotJob is one execution of a dp block snapshot plan",
            "type": "object",
            "title": "DpBlockSnapshotJob",
            "properties": {
                "block_snapshot": {
                    "$ref": "#/definitions/Snapshot_Nestview"
                },
                "block_volume": {
                    "$ref": "#/definitions/Volume_Nestview"
                },
                "block_volume_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "diff_type": {
                    "type": "string"
                },
                "dp_block_snapshot_policy": {
                    "$ref": "#/definitions/DpBlockSnapshotPolicy_Nestview"
                },
                "finished_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "progress": {
                    "type": "number",
                    "format": "double"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "started_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpBlockSnapshotJobsResp": {
            "type": "object",
            "title": "DpBlockSnapshotJobsResp",
            "required": [
                "dp_block_snapshot_jobs"
            ],
            "properties": {
                "dp_block_snapshot_jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpBlockSnapshotJob"
                    }
                }
            }
        },
        "DpBlockSnapshotPoliciesResp": {
            "type": "object",
            "title": "DpBlockSnapshotPoliciesResp",
            "properties": {
                "dp_block_snapshot_policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpBlockSnapshotPolicy"
                    }
                }
            }
        },
        "DpBlockSnapshotPolicy": {
            "description": "DpBlockSnapshotPolicy protects a block volume by snapshot",
            "type": "object",
            "title": "DpBlockSnapshotPolicy",
            "properties": {
                "block_volume_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "cron_expr": {
                    "type": "string"
                },
                "dp_gateway": {
                    "$ref": "#/definitions/DpGateway_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "retained_max": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpBlockSnapshotPolicyCreateReq": {
            "type": "object",
            "title": "DpBlockSnapshotPolicyCreateReq",
            "required": [
                "dp_block_snapshot_policy"
            ],
            "properties": {
                "dp_block_snapshot_policy": {
                    "$ref": "#/definitions/DpBlockSnapshotPolicyCreateReq_Policy"
                }
            }
        },
        "DpBlockSnapshotPolicyCreateReq_Policy": {
            "type": "object",
            "title": "DpBlockSnapshotPolicyCreateReq_Policy",
            "required": [
                "name",
                "cron_expr",
                "retained_max",
                "dp_gateway_id"
            ],
            "properties": {
                "cron_expr": {
                    "description": "cron expression",
                    "type": "string"
                },
                "dp_gateway_id": {
                    "description": "dp gateway",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "retained_max": {
                    "description": "retained max number of snapshots",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpBlockSnapshotPolicyResp": {
            "type": "object",
            "title": "DpBlockSnapshotPolicyResp",
            "properties": {
                "dp_block_snapshot_policy": {
                    "$ref": "#/definitions/DpBlockSnapshotPolicy"
                }
            }
        },
        "DpBlockSnapshotPolicyUpdateReq": {
            "type": "object",
            "title": "DpBlockSnapshotPolicyUpdateReq",
            "required": [
                "dp_block_snapshot_policy"
            ],
            "properties": {
                "dp_block_snapshot_policy": {
                    "$ref": "#/definitions/DpBlockSnapshotPolicyUpdateReq_Policy"
                }
            }
        },
        "DpBlockSnapshotPolicyUpdateReq_Policy": {
            "type": "object",
            "title": "DpBlockSnapshotPolicyUpdateReq_Policy",
            "properties": {
                "cron_expr": {
                    "description": "cron expression",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "retained_max": {
                    "description": "retained max number of snapshots",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpBlockSnapshotPolicy_Nestview": {
            "type": "object",
            "title": "DpBlockSnapshotPolicy_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DpBlockSnapshotRecoveryJob": {
            "description": "DpBlockSnapshotRecoveryJob recovery a block resource",
            "type": "object",
            "title": "DpBlockSnapshotRecoveryJob",
            "properties": {
                "backup_block_snapshot": {
                    "$ref": "#/definitions/DpBackupBlockSnapshot"
                },
                "backup_block_volume": {
                    "$ref": "#/definitions/DpBackupBlockVolume"
                },
                "backup_cluster": {
                    "$ref": "#/definitions/DpBackupCluster"
                },
                "block_volume": {
                    "$ref": "#/definitions/Volume_Nestview"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dp_gateway": {
                    "$ref": "#/definitions/DpGateway_Nestview"
                },
                "dp_site": {
                    "$ref": "#/definitions/DpSite_Nestview"
                },
                "finished_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "max_retry_times": {
                    "type": "integer",
                    "format": "int64"
                },
                "progress": {
                    "type": "number",
                    "format": "double"
                },
                "resource_type": {
                    "type": "string"
                },
                "started_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpBlockSnapshotRecoveryJobCreateReq": {
            "type": "object",
            "title": "DpBlockSnapshotRecoveryJobCreateReq",
            "required": [
                "dp_block_snapshot_recovery_job"
            ],
            "properties": {
                "dp_block_snapshot_recovery_job": {
                    "$ref": "#/definitions/DpBlockSnapshotRecoveryJobCreateReq_Job"
                }
            }
        },
        "DpBlockSnapshotRecoveryJobCreateReq_Job": {
            "type": "object",
            "title": "DpBlockSnapshotRecoveryJobCreateReq_Job",
            "required": [
                "resource_type",
                "dp_gateway_id",
                "dp_site_id",
                "backup_cluster",
                "backup_block_volume",
                "backup_block_snapshot",
                "block_volume"
            ],
            "properties": {
                "backup_block_snapshot": {
                    "$ref": "#/definitions/DpBlockSnapshotRecoveryJobCreateReq_Job_BackupSnapshot"
                },
                "backup_block_volume": {
                    "$ref": "#/definitions/DpBlockSnapshotRecoveryJobCreateReq_Job_BackupVolume"
                },
                "backup_cluster": {
                    "$ref": "#/definitions/DpBlockSnapshotRecoveryJobCreateReq_Job_BackupCluster"
                },
                "block_volume": {
                    "$ref": "#/definitions/DpBlockSnapshotRecoveryJobCreateReq_Job_Volume"
                },
                "dp_gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "dp_site_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_type": {
                    "type": "string"
                }
            }
        },
        "DpBlockSnapshotRecoveryJobCreateReq_Job_BackupCluster": {
            "type": "object",
            "title": "DpBlockSnapshotRecoveryJobCreateReq_Job_BackupCluster",
            "required": [
                "fs_id",
                "name"
            ],
            "properties": {
                "fs_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DpBlockSnapshotRecoveryJobCreateReq_Job_BackupSnapshot": {
            "type": "object",
            "title": "DpBlockSnapshotRecoveryJobCreateReq_Job_BackupSnapshot",
            "required": [
                "create",
                "volume_size"
            ],
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "volume_size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpBlockSnapshotRecoveryJobCreateReq_Job_BackupVolume": {
            "type": "object",
            "title": "DpBlockSnapshotRecoveryJobCreateReq_Job_BackupVolume",
            "required": [
                "volume_name",
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "volume_name": {
                    "type": "string"
                }
            }
        },
        "DpBlockSnapshotRecoveryJobCreateReq_Job_Volume": {
            "type": "object",
            "title": "DpBlockSnapshotRecoveryJobCreateReq_Job_Volume",
            "required": [
                "pool_id",
                "name"
            ],
            "properties": {
                "format": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "pool_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpBlockSnapshotRecoveryJobResp": {
            "type": "object",
            "title": "DpBlockSnapshotRecoveryJobResp",
            "properties": {
                "dp_block_snapshot_recovery_job": {
                    "$ref": "#/definitions/DpBlockSnapshotRecoveryJob"
                }
            }
        },
        "DpBlockSnapshotRecoveryJobsResp": {
            "type": "object",
            "title": "DpBlockSnapshotRecoveryJobsResp",
            "properties": {
                "dp_block_snapshot_recovery_jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpBlockSnapshotRecoveryJob"
                    }
                }
            }
        },
        "DpDfsSnapshot": {
            "description": "DpDfsSnapshot represent an active dfs snapshot\n+X:model:generate;check_get=i18n;related_depth=2;etcd_lock=with_get;\n+X:benchmark:",
            "type": "object",
            "title": "DpDfsSnapshot",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_path": {
                    "$ref": "#/definitions/DfsPath"
                },
                "dp_dfs_snapshot_policy": {
                    "$ref": "#/definitions/DpDfsSnapshotPolicy_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpDfsSnapshotCreateReq": {
            "type": "object",
            "title": "DpDfsSnapshotCreateReq",
            "required": [
                "dp_dfs_snapshot"
            ],
            "properties": {
                "dp_dfs_snapshot": {
                    "$ref": "#/definitions/DpDfsSnapshotCreateReq_DpDfsSnapshot"
                }
            }
        },
        "DpDfsSnapshotCreateReq_DpDfsSnapshot": {
            "type": "object",
            "title": "DpDfsSnapshotCreateReq_DpDfsSnapshot",
            "required": [
                "rootfs_id",
                "path",
                "dp_dfs_snapshot_policy_id",
                "trigger"
            ],
            "properties": {
                "dp_dfs_snapshot_policy_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "type": "string"
                },
                "rootfs_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "trigger": {
                    "type": "boolean"
                }
            }
        },
        "DpDfsSnapshotJob": {
            "description": "DpDfsSnapshotJob is one execution of a dp dfs snapshot plan\n+X:model:generate;check_get=i18n;related_depth=2;with_detailed; +X:benchmark:",
            "type": "object",
            "title": "DpDfsSnapshotJob",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "dfs_path": {
                    "$ref": "#/definitions/DfsPath"
                },
                "dfs_snapshot": {
                    "$ref": "#/definitions/DfsSnapshot_Nestview"
                },
                "dp_dfs_snapshot": {
                    "$ref": "#/definitions/DpDfsSnapshot_Nestview"
                },
                "dp_dfs_snapshot_policy": {
                    "$ref": "#/definitions/DpDfsSnapshotPolicy"
                },
                "finished_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "started_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "DpDfsSnapshotJobsResp": {
            "type": "object",
            "title": "DpDfsSnapshotJobsResp",
            "required": [
                "dp_dfs_snapshot_jobs"
            ],
            "properties": {
                "dp_dfs_snapshot_jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpDfsSnapshotJob"
                    }
                }
            }
        },
        "DpDfsSnapshotPoliciesResp": {
            "type": "object",
            "title": "DpDfsSnapshotPoliciesResp",
            "required": [
                "dp_dfs_snapshot_policies"
            ],
            "properties": {
                "dp_dfs_snapshot_policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpDfsSnapshotPolicy"
                    }
                }
            }
        },
        "DpDfsSnapshotPolicy": {
            "description": "DpDfsSnapshotPolicy protects a dfs by snapshot\n+X:model:generate;plur=DpDfsSnapshotPolicies;check_get=i18n,detailed;etcd_lock=with_get;with_detailed;\n+X:benchmark:",
            "type": "object",
            "title": "DpDfsSnapshotPolicy",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "cron_expr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "protected_path_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "retain_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpDfsSnapshotPolicyCreateReq": {
            "type": "object",
            "title": "DpDfsSnapshotPolicyCreateReq",
            "required": [
                "dp_dfs_snapshot_policy"
            ],
            "properties": {
                "dp_dfs_snapshot_policy": {
                    "$ref": "#/definitions/DpDfsSnapshotPolicyCreateReq_DpDfsSnapshotPolicy"
                }
            }
        },
        "DpDfsSnapshotPolicyCreateReq_DpDfsSnapshotPolicy": {
            "type": "object",
            "title": "DpDfsSnapshotPolicyCreateReq_DpDfsSnapshotPolicy",
            "required": [
                "name",
                "cron_expr",
                "retain_time"
            ],
            "properties": {
                "cron_expr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dp_gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "retain_time": {
                    "type": "string"
                }
            }
        },
        "DpDfsSnapshotPolicyResp": {
            "type": "object",
            "title": "DpDfsSnapshotPolicyResp",
            "required": [
                "dp_dfs_snapshot_policy"
            ],
            "properties": {
                "dp_dfs_snapshot_policy": {
                    "$ref": "#/definitions/DpDfsSnapshotPolicy"
                }
            }
        },
        "DpDfsSnapshotPolicyUpdateReq": {
            "type": "object",
            "title": "DpDfsSnapshotPolicyUpdateReq",
            "required": [
                "dp_dfs_snapshot_policy"
            ],
            "properties": {
                "dp_dfs_snapshot_policy": {
                    "$ref": "#/definitions/DpDfsSnapshotPolicyUpdateReq_DpDfsSnapshotPolicy"
                }
            }
        },
        "DpDfsSnapshotPolicyUpdateReq_DpDfsSnapshotPolicy": {
            "type": "object",
            "title": "DpDfsSnapshotPolicyUpdateReq_DpDfsSnapshotPolicy",
            "properties": {
                "cron_expr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "retain_time": {
                    "type": "string"
                }
            }
        },
        "DpDfsSnapshotPolicy_Nestview": {
            "type": "object",
            "title": "DpDfsSnapshotPolicy_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DpDfsSnapshotResp": {
            "type": "object",
            "title": "DpDfsSnapshotResp",
            "required": [
                "dp_dfs_snapshot"
            ],
            "properties": {
                "dp_dfs_snapshot": {
                    "$ref": "#/definitions/DpDfsSnapshot"
                }
            }
        },
        "DpDfsSnapshot_Nestview": {
            "type": "object",
            "title": "DpDfsSnapshot_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpDfsSnapshotsResp": {
            "type": "object",
            "title": "DpDfsSnapshotsResp",
            "required": [
                "dp_dfs_snapshots"
            ],
            "properties": {
                "dp_dfs_snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpDfsSnapshot"
                    }
                }
            }
        },
        "DpFSSnapshotJob": {
            "description": "DpFSSnapshotJob is one execution of a running dp fs snapshot policy",
            "type": "object",
            "title": "DpFSSnapshotJob",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "dp_fs_snapshot_policy": {
                    "$ref": "#/definitions/DpFSSnapshotPolicy_Nestview"
                },
                "finished_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "fs_folder": {
                    "$ref": "#/definitions/FSFolder_Nestview"
                },
                "fs_snapshot": {
                    "$ref": "#/definitions/FSSnapshot_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "progress": {
                    "type": "number",
                    "format": "double"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "started_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpFSSnapshotJobResp": {
            "type": "object",
            "title": "DpFSSnapshotJobResp",
            "properties": {
                "dp_fs_snapshot_job": {
                    "$ref": "#/definitions/DpFSSnapshotJob"
                }
            }
        },
        "DpFSSnapshotJobsResp": {
            "type": "object",
            "title": "DpFSSnapshotJobsResp",
            "properties": {
                "dp_fs_snapshot_jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpFSSnapshotJob"
                    }
                }
            }
        },
        "DpFSSnapshotPoliciesResp": {
            "type": "object",
            "title": "DpFSSnapshotPoliciesResp",
            "properties": {
                "dp_fs_snapshot_policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpFSSnapshotPolicy"
                    }
                }
            }
        },
        "DpFSSnapshotPolicy": {
            "description": "DpFSSnapshotPolicy protects a fs folder by snapshot +X:model:etcd_lock;",
            "type": "object",
            "title": "DpFSSnapshotPolicy",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "cron_expr": {
                    "type": "string"
                },
                "dp_gateway": {
                    "$ref": "#/definitions/DpGateway_Nestview"
                },
                "fs_folder_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "retained_max": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpFSSnapshotPolicyCreateReq": {
            "type": "object",
            "title": "DpFSSnapshotPolicyCreateReq",
            "required": [
                "dp_fs_snapshot_policy"
            ],
            "properties": {
                "dp_fs_snapshot_policy": {
                    "$ref": "#/definitions/DpFSSnapshotPolicyCreateReq_Policy"
                }
            }
        },
        "DpFSSnapshotPolicyCreateReq_Policy": {
            "type": "object",
            "title": "DpFSSnapshotPolicyCreateReq_Policy",
            "required": [
                "name",
                "cron_expr",
                "retained_max",
                "dp_gateway_id"
            ],
            "properties": {
                "cron_expr": {
                    "type": "string"
                },
                "dp_gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "retained_max": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpFSSnapshotPolicyResp": {
            "type": "object",
            "title": "DpFSSnapshotPolicyResp",
            "properties": {
                "dp_fs_snapshot_policy": {
                    "$ref": "#/definitions/DpFSSnapshotPolicy"
                }
            }
        },
        "DpFSSnapshotPolicyUpdateReq": {
            "type": "object",
            "title": "DpFSSnapshotPolicyUpdateReq",
            "required": [
                "dp_fs_snapshot_policy"
            ],
            "properties": {
                "dp_fs_snapshot_policy": {
                    "$ref": "#/definitions/DpFSSnapshotPolicyUpdateReq_Policy"
                }
            }
        },
        "DpFSSnapshotPolicyUpdateReq_Policy": {
            "type": "object",
            "title": "DpFSSnapshotPolicyUpdateReq_Policy",
            "properties": {
                "cron_expr": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "retained_max": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpFSSnapshotPolicy_Nestview": {
            "type": "object",
            "title": "DpFSSnapshotPolicy_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DpGateway": {
            "description": "DpGateway is a process to execute data protection jobs\n+X:model:generate;related_depth=1;check_get=i18n;with_detailed=true;\n+X:benchmark:",
            "type": "object",
            "title": "DpGateway",
            "properties": {
                "admin_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "gateway_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "policy_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpGatewayCreateReq": {
            "type": "object",
            "title": "DpGatewayCreateReq",
            "properties": {
                "dp_gateway": {
                    "$ref": "#/definitions/DpGatewayCreateReq_Gateway"
                }
            }
        },
        "DpGatewayCreateReq_Gateway": {
            "type": "object",
            "title": "DpGatewayCreateReq_Gateway",
            "required": [
                "name",
                "host_id"
            ],
            "properties": {
                "host_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DpGatewayResp": {
            "type": "object",
            "title": "DpGatewayResp",
            "required": [
                "dp_gateway"
            ],
            "properties": {
                "dp_gateway": {
                    "description": "dp gateway",
                    "$ref": "#/definitions/DpGateway"
                }
            }
        },
        "DpGatewayUpdateReq": {
            "type": "object",
            "title": "DpGatewayUpdateReq",
            "properties": {
                "dp_gateway": {
                    "$ref": "#/definitions/DpGatewayUpdateReq_Gateway"
                }
            }
        },
        "DpGatewayUpdateReq_Gateway": {
            "type": "object",
            "title": "DpGatewayUpdateReq_Gateway",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "dp gateway name",
                    "type": "string"
                }
            }
        },
        "DpGateway_Nestview": {
            "type": "object",
            "title": "DpGateway_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DpGatewaysResp": {
            "type": "object",
            "title": "DpGatewaysResp",
            "required": [
                "dp_gateways"
            ],
            "properties": {
                "dp_gateways": {
                    "description": "dp gateways",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpGateway"
                    }
                }
            }
        },
        "DpSite": {
            "description": "DpSite is a site to storage data protection data",
            "type": "object",
            "title": "DpSite",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "config": {
                    "$ref": "#/definitions/DpSiteConfig"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "crypto_key": {
                    "$ref": "#/definitions/CryptoKey_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "protection_type": {
                    "type": "string"
                },
                "remote_cluster": {
                    "$ref": "#/definitions/RemoteCluster_Nestview"
                },
                "service": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpSiteConfig": {
            "description": "DpSiteConfig contains config of different sites in dpg",
            "type": "object",
            "title": "DpSiteConfig",
            "properties": {
                "block_async_replication": {
                    "$ref": "#/definitions/AsyncReplicationConfig"
                },
                "block_snapshot_backup": {
                    "$ref": "#/definitions/SnapshotBackupConfig"
                },
                "block_volume_replication": {
                    "$ref": "#/definitions/BlockReplicationConfig"
                }
            }
        },
        "DpSiteCreateReq": {
            "type": "object",
            "title": "DpSiteCreateReq",
            "properties": {
                "dp_site": {
                    "$ref": "#/definitions/DpSiteCreateReq_Site"
                }
            }
        },
        "DpSiteCreateReq_Site": {
            "type": "object",
            "title": "DpSiteCreateReq_Site",
            "required": [
                "name",
                "protection_type",
                "platform",
                "service",
                "config"
            ],
            "properties": {
                "address": {
                    "description": "site address",
                    "type": "string"
                },
                "config": {
                    "description": "extra config",
                    "$ref": "#/definitions/DpSiteConfig"
                },
                "crypto_key_id": {
                    "description": "crypto key",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "site name",
                    "type": "string"
                },
                "platform": {
                    "description": "platform of site",
                    "type": "string"
                },
                "protection_type": {
                    "description": "protection type",
                    "type": "string"
                },
                "remote_cluster_id": {
                    "description": "remote cluster",
                    "type": "integer",
                    "format": "int64"
                },
                "service": {
                    "description": "service of site",
                    "type": "string"
                }
            }
        },
        "DpSiteResp": {
            "type": "object",
            "title": "DpSiteResp",
            "required": [
                "dp_site"
            ],
            "properties": {
                "dp_site": {
                    "description": "data protection site",
                    "$ref": "#/definitions/DpSite"
                }
            }
        },
        "DpSiteUpdateReq": {
            "type": "object",
            "title": "DpSiteUpdateReq",
            "properties": {
                "dp_site": {
                    "$ref": "#/definitions/DpSiteUpdateReq_Site"
                }
            }
        },
        "DpSiteUpdateReq_Site": {
            "type": "object",
            "title": "DpSiteUpdateReq_Site",
            "properties": {
                "config": {
                    "description": "dp site config",
                    "$ref": "#/definitions/DpSiteConfig"
                },
                "name": {
                    "description": "dp site name",
                    "type": "string"
                }
            }
        },
        "DpSite_Nestview": {
            "type": "object",
            "title": "DpSite_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DpSitesResp": {
            "type": "object",
            "title": "DpSitesResp",
            "required": [
                "dp_sites"
            ],
            "properties": {
                "dp_sites": {
                    "description": "data protection sites",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpSite"
                    }
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationJob": {
            "description": "DpVolumeGroupSnapshotReplicationJob is one execution of a dp volume group\nsnapshot protection +X:model:generate;related_depth=2;check_get;with_detailed;\n+X:benchmark:",
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationJob",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "diff_type": {
                    "type": "string"
                },
                "dp_volume_group_snapshot_replication_pair": {
                    "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPair_Nestview"
                },
                "finished_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "max_retry_times": {
                    "type": "integer",
                    "format": "int64"
                },
                "progress": {
                    "type": "number",
                    "format": "double"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "snapshot": {
                    "$ref": "#/definitions/VolumeGroupSnapshot_Nestview"
                },
                "started_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "volume_group_name": {
                    "type": "string"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationJobResp": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationJobResp",
            "properties": {
                "dp_volume_group_snapshot_replication_job": {
                    "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationJob"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationJob_Nestview": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationJob_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationJobsResp": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationJobsResp",
            "properties": {
                "dp_volume_group_snapshot_replication_jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationJob"
                    }
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPair": {
            "description": "DpVolumeGroupSnapshotReplicationPair represent the snapshot replication\nrelationship of a pair of a volume group\n+X:model:generate;related_depth=2;check_get;with_detailed; +X:benchmark:",
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPair",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "connected": {
                    "type": "boolean"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dp_volume_group_snapshot_replication_policy": {
                    "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPolicy_Nestview"
                },
                "failovered": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "last_success_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "local_role": {
                    "type": "string"
                },
                "pair_volume_group_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "pair_volume_group_name": {
                    "type": "string"
                },
                "paused": {
                    "type": "boolean"
                },
                "policy_cron": {
                    "type": "string"
                },
                "pre_status": {
                    "type": "string"
                },
                "remote_cluster": {
                    "$ref": "#/definitions/RemoteCluster_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "volume_group": {
                    "$ref": "#/definitions/VolumeGroup_Nestview"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPairCreateReq": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPairCreateReq",
            "required": [
                "dp_volume_group_snapshot_replication_pair"
            ],
            "properties": {
                "dp_volume_group_snapshot_replication_pair": {
                    "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPairCreateReq_GroupPair"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPairCreateReq_GroupPair": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPairCreateReq_GroupPair",
            "required": [
                "master_cluster_fs_id",
                "master_pair_id",
                "master_volume_group_id",
                "master_volume_group_name",
                "chain_name",
                "master_gateway",
                "slave_gateway",
                "policy_cron"
            ],
            "properties": {
                "chain_name": {
                    "description": "chain name",
                    "type": "string"
                },
                "master_cluster_fs_id": {
                    "description": "master cluster fs id",
                    "type": "string"
                },
                "master_gateway": {
                    "description": "gateway ip",
                    "type": "string"
                },
                "master_pair_id": {
                    "description": "master pair id",
                    "type": "integer",
                    "format": "int64"
                },
                "master_volume_group_id": {
                    "description": "master volume group id",
                    "type": "integer",
                    "format": "int64"
                },
                "master_volume_group_name": {
                    "description": "master volume group name",
                    "type": "string"
                },
                "policy_cron": {
                    "description": "policy cron",
                    "type": "string"
                },
                "slave_gateway": {
                    "description": "gateway ip",
                    "type": "string"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPairResp": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPairResp",
            "properties": {
                "dp_volume_group_snapshot_replication_pair": {
                    "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPair"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPairUpdateReq": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPairUpdateReq",
            "required": [
                "dp_volume_group_snapshot_replication_pair"
            ],
            "properties": {
                "dp_volume_group_snapshot_replication_pair": {
                    "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPairUpdateReq_Pair"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPairUpdateReq_Pair": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPairUpdateReq_Pair",
            "properties": {
                "master_policy_cron": {
                    "description": "policy cron",
                    "type": "string"
                },
                "master_volume_group_name": {
                    "description": "master volume group name",
                    "type": "string"
                },
                "slave_volume_group_id": {
                    "description": "slave volume group id",
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "description": "pair status",
                    "type": "string"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPair_Nestview": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPair_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPairsResp": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPairsResp",
            "properties": {
                "dp_volume_group_snapshot_replication_pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPair"
                    }
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPoliciesResp": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPoliciesResp",
            "properties": {
                "dp_volume_group_snapshot_replication_policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPolicy"
                    }
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPolicy": {
            "description": "DpVolumeGroupSnapshotReplicationPolicy protects a volume group by snapshot\nreplication\n+X:model:generate;plur=DpVolumeGroupSnapshotReplicationPolicies;related_depth=2;check_get;with_detailed=true\n+X:benchmark:",
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPolicy",
            "properties": {
                "block_volume_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "cron_expr": {
                    "type": "string"
                },
                "dp_gateway": {
                    "$ref": "#/definitions/DpGateway_Nestview"
                },
                "dp_site": {
                    "$ref": "#/definitions/DpSite_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "retained_max": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPolicyCreateReq": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPolicyCreateReq",
            "required": [
                "dp_volume_group_snapshot_replication_policy"
            ],
            "properties": {
                "dp_volume_group_snapshot_replication_policy": {
                    "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPolicyCreateReq_Policy"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPolicyCreateReq_Policy": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPolicyCreateReq_Policy",
            "required": [
                "name",
                "dp_site_id",
                "dp_gateway_id",
                "cron_expr"
            ],
            "properties": {
                "cron_expr": {
                    "description": "cron expression",
                    "type": "string"
                },
                "dp_gateway_id": {
                    "description": "dp gateway",
                    "type": "integer",
                    "format": "int64"
                },
                "dp_site_id": {
                    "description": "dp site",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "retained_max": {
                    "description": "retained max number of snapshots",
                    "type": "integer",
                    "format": "int64"
                },
                "timeout": {
                    "description": "timeout",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPolicyResp": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPolicyResp",
            "properties": {
                "dp_volume_group_snapshot_replication_policy": {
                    "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPolicy"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPolicyUpdateReq": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPolicyUpdateReq",
            "required": [
                "dp_volume_group_snapshot_replication_policy"
            ],
            "properties": {
                "dp_volume_group_snapshot_replication_policy": {
                    "$ref": "#/definitions/DpVolumeGroupSnapshotReplicationPolicyUpdateReq_Policy"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPolicyUpdateReq_Policy": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPolicyUpdateReq_Policy",
            "properties": {
                "cron_expr": {
                    "description": "cron expression",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "retained_max": {
                    "description": "retained max number of snapshots",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DpVolumeGroupSnapshotReplicationPolicy_Nestview": {
            "type": "object",
            "title": "DpVolumeGroupSnapshotReplicationPolicy_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ECPoolUpdateCrushRuleReq": {
            "type": "object",
            "title": "ECPoolUpdateCrushRuleReq",
            "required": [
                "pool"
            ],
            "properties": {
                "pool": {
                    "$ref": "#/definitions/ECPoolUpdateCrushRuleReq_Pool"
                }
            }
        },
        "ECPoolUpdateCrushRuleReq_Pool": {
            "type": "object",
            "title": "ECPoolUpdateCrushRuleReq_Pool",
            "required": [
                "data_chunk_num",
                "coding_chunk_num"
            ],
            "properties": {
                "coding_chunk_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_chunk_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Email": {
            "description": "Email defines email model",
            "type": "object",
            "title": "Email",
            "properties": {
                "body": {
                    "type": "string"
                },
                "content_type": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "to": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "EmailConfig": {
            "description": "EmailConfig define email config",
            "type": "object",
            "title": "EmailConfig",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "smtp_email_from": {
                    "type": "string"
                },
                "smtp_enable_ssl": {
                    "type": "boolean"
                },
                "smtp_host": {
                    "type": "string"
                },
                "smtp_password": {
                    "type": "string"
                },
                "smtp_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "smtp_rsa_key_id": {
                    "type": "string"
                },
                "smtp_skip_tls_cert_verify": {
                    "type": "boolean"
                },
                "smtp_user": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "EmailConfigResp": {
            "type": "object",
            "title": "EmailConfigResp",
            "properties": {
                "email_config": {
                    "$ref": "#/definitions/EmailConfig"
                }
            }
        },
        "EmailConfigUpdateReq": {
            "type": "object",
            "title": "EmailConfigUpdateReq",
            "properties": {
                "email_config": {
                    "$ref": "#/definitions/EmailConfigUpdateReq_EmailConfig"
                }
            }
        },
        "EmailConfigUpdateReq_EmailConfig": {
            "type": "object",
            "title": "EmailConfigUpdateReq_EmailConfig",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "smtp_email_from": {
                    "type": "string"
                },
                "smtp_enable_ssl": {
                    "type": "boolean"
                },
                "smtp_host": {
                    "type": "string"
                },
                "smtp_password": {
                    "type": "string"
                },
                "smtp_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "smtp_rsa_key_id": {
                    "type": "string"
                },
                "smtp_skip_tls_cert_verify": {
                    "type": "boolean"
                },
                "smtp_user": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "EmailGroup": {
            "description": "EmailGroup defines the email group",
            "type": "object",
            "title": "EmailGroup",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "EmailGroupRecord": {
            "description": "EmailGroupRecord defines email group record",
            "type": "object",
            "title": "EmailGroupRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/EmailGroup"
                }
            ]
        },
        "EmailGroupResp": {
            "type": "object",
            "title": "EmailGroupResp",
            "required": [
                "email_group"
            ],
            "properties": {
                "email_group": {
                    "description": "email group",
                    "$ref": "#/definitions/EmailGroupRecord"
                }
            }
        },
        "EmailGroupUpdateReq": {
            "type": "object",
            "title": "EmailGroupUpdateReq",
            "required": [
                "email_group"
            ],
            "properties": {
                "email_group": {
                    "$ref": "#/definitions/EmailGroupUpdateReq_EmailGroup"
                }
            }
        },
        "EmailGroupUpdateReq_EmailGroup": {
            "type": "object",
            "title": "EmailGroupUpdateReq_EmailGroup",
            "required": [
                "name",
                "emails"
            ],
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "EmailGroupsResp": {
            "type": "object",
            "title": "EmailGroupsResp",
            "required": [
                "email_groups"
            ],
            "properties": {
                "email_groups": {
                    "description": "email groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EmailGroupRecord"
                    }
                }
            }
        },
        "EmailResp": {
            "type": "object",
            "title": "EmailResp",
            "properties": {
                "email": {
                    "$ref": "#/definitions/Email"
                }
            }
        },
        "EmailSendReq": {
            "description": "EmailSendReq defines the data of email sending",
            "type": "object",
            "title": "EmailSendReq",
            "properties": {
                "email": {
                    "$ref": "#/definitions/EmailSendReq_Email"
                },
                "email_config": {
                    "$ref": "#/definitions/EmailConfig"
                }
            }
        },
        "EmailSendReq_Email": {
            "type": "object",
            "title": "EmailSendReq_Email",
            "required": [
                "to",
                "body"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "content_type": {
                    "description": "content type, 'text/plain' or 'text/html'",
                    "type": "string"
                },
                "to": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "EmptyPoolInitializeReq": {
            "type": "object",
            "title": "EmptyPoolInitializeReq",
            "properties": {
                "pool": {
                    "$ref": "#/definitions/EmptyPoolInitializeReq_Pool"
                }
            }
        },
        "EmptyPoolInitializeReq_Pool": {
            "type": "object",
            "title": "EmptyPoolInitializeReq_Pool",
            "properties": {
                "cache": {
                    "$ref": "#/definitions/EmptyPoolInitializeReq_Pool_Cache"
                },
                "osd_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "primary_placement_node_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ruleset": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PoolRuleReq"
                    }
                },
                "sub_failure_domain_type": {
                    "type": "string"
                }
            }
        },
        "EmptyPoolInitializeReq_Pool_Cache": {
            "type": "object",
            "title": "EmptyPoolInitializeReq_Pool_Cache",
            "properties": {
                "osd_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "primary_placement_node_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ruleset": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PoolRuleReq"
                    }
                }
            }
        },
        "Enclosure": {
            "description": "Enclosure defines enclosure specification",
            "type": "object",
            "title": "Enclosure",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "order": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "slot_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "start_slot": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ErrorRecord": {
            "description": "ErrorRecord defines the error record attributes.",
            "type": "object",
            "title": "ErrorRecord",
            "properties": {
                "action_log": {
                    "$ref": "#/definitions/ActionLog_Nestview"
                },
                "alert": {
                    "$ref": "#/definitions/Alert_Nestview"
                },
                "alert_info": {
                    "$ref": "#/definitions/AlertInfo_Nestview"
                },
                "code": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "details": {
                    "type": "string"
                },
                "extra_data": {
                    "type": "object"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "ErrorRecordCreateReq": {
            "type": "object",
            "title": "ErrorRecordCreateReq",
            "properties": {
                "error_record": {
                    "$ref": "#/definitions/ErrorRecordCreateReq_ErrorRecord"
                }
            }
        },
        "ErrorRecordCreateReq_ErrorRecord": {
            "type": "object",
            "title": "ErrorRecordCreateReq_ErrorRecord",
            "required": [
                "message"
            ],
            "properties": {
                "action_log_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "alert_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "host_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "ErrorRecordResp": {
            "type": "object",
            "title": "ErrorRecordResp",
            "required": [
                "error_record"
            ],
            "properties": {
                "error_record": {
                    "$ref": "#/definitions/ErrorRecord"
                }
            }
        },
        "EventLog": {
            "description": "EventLog defines a system event",
            "type": "object",
            "title": "EventLog",
            "properties": {
                "cluster": {
                    "description": "cluster",
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "description": "create time",
                    "type": "string",
                    "format": "date-time"
                },
                "data": {
                    "description": "dumped resource data",
                    "type": "object"
                },
                "event": {
                    "description": "evnet type",
                    "type": "string"
                },
                "host": {
                    "description": "host eventlog generated on",
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "description": "debug message",
                    "type": "string"
                },
                "osp_cluster": {
                    "description": "osp cluster",
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "resource_id": {
                    "description": "resource id",
                    "type": "integer",
                    "format": "int64"
                },
                "resource_type": {
                    "description": "resource type",
                    "type": "string"
                },
                "user": {
                    "description": "eventlog created by",
                    "$ref": "#/definitions/User_Nestview"
                }
            }
        },
        "EventLogsResp": {
            "type": "object",
            "title": "EventLogsResp",
            "required": [
                "event_logs"
            ],
            "properties": {
                "event_logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventLog"
                    }
                }
            }
        },
        "ExtCompatConf": {
            "description": "ExtCompatConf defines compat config for external interface +X:model:generate;\n+X:benchmark:",
            "type": "object",
            "title": "ExtCompatConf",
            "properties": {
                "data": {
                    "description": "script or fake data content",
                    "type": "string"
                },
                "ext_name": {
                    "type": "string"
                },
                "func_name": {
                    "type": "string"
                },
                "host_id": {
                    "description": "0 for all hosts",
                    "type": "integer",
                    "format": "int64"
                },
                "policy": {
                    "type": "string"
                }
            }
        },
        "ExtCompatConfResp": {
            "type": "object",
            "title": "ExtCompatConfResp",
            "required": [
                "ext_compat_conf"
            ],
            "properties": {
                "ext_compat_conf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExtCompatConf"
                    }
                }
            }
        },
        "FCPort": {
            "description": "FCPort defines model of FC port @grpc-models-proto +X:model:etcd_lock;",
            "type": "object",
            "title": "FCPort",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "conn_opt_mode": {
                    "type": "string"
                },
                "conn_type": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "data_rate_mode": {
                    "type": "string"
                },
                "health": {
                    "type": "string"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "link_speed": {
                    "type": "string"
                },
                "link_state": {
                    "type": "string"
                },
                "max_speed": {
                    "type": "string"
                },
                "pci_address": {
                    "type": "string"
                },
                "port_id": {
                    "type": "string"
                },
                "recv_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "recv_frames": {
                    "type": "integer",
                    "format": "int64"
                },
                "rg_host": {
                    "type": "integer",
                    "format": "int64"
                },
                "send_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "send_frames": {
                    "type": "integer",
                    "format": "int64"
                },
                "start": {
                    "type": "string",
                    "format": "date-time"
                },
                "supported_speeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "wwpn": {
                    "type": "string"
                }
            }
        },
        "FCPortClientCodesResp": {
            "type": "object",
            "title": "FCPortClientCodesResp",
            "required": [
                "client_codes"
            ],
            "properties": {
                "client_codes": {
                    "description": "fc port client codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "FCPortErrCode": {
            "description": "FCPortErrCode defines model of fc port errcode stats data",
            "type": "object",
            "title": "FCPortErrCode",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "error_frames": {
                    "type": "integer",
                    "format": "int64"
                },
                "error_frames_offset": {
                    "type": "integer",
                    "format": "int64"
                },
                "error_frames_value": {
                    "type": "integer",
                    "format": "int64"
                },
                "fc_port": {
                    "$ref": "#/definitions/FCPort_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "link_failure_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "loss_of_signal_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "loss_of_sync_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "start": {
                    "type": "string",
                    "format": "date-time"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FCPortRecord": {
            "description": "FCPortRecord consists FCPort, FCPortErrCode models data",
            "type": "object",
            "title": "FCPortRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/FCPort"
                },
                {
                    "properties": {
                        "fc_port_errcode": {
                            "$ref": "#/definitions/FCPortErrCode"
                        }
                    }
                }
            ]
        },
        "FCPortResp": {
            "type": "object",
            "title": "FCPortResp",
            "required": [
                "fc_port"
            ],
            "properties": {
                "fc_port": {
                    "description": "fc port",
                    "$ref": "#/definitions/FCPortRecord"
                }
            }
        },
        "FCPort_Nestview": {
            "type": "object",
            "title": "FCPort_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "pci_address": {
                    "type": "string"
                }
            }
        },
        "FCPortsResp": {
            "type": "object",
            "title": "FCPortsResp",
            "required": [
                "fc_ports"
            ],
            "properties": {
                "fc_ports": {
                    "description": "fc port",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FCPortRecord"
                    }
                }
            }
        },
        "FSActiveDirectoriesResp": {
            "type": "object",
            "title": "FSActiveDirectoriesResp",
            "required": [
                "fs_active_directories"
            ],
            "properties": {
                "fs_active_directories": {
                    "description": "file storage active directories",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSActiveDirectory"
                    }
                }
            }
        },
        "FSActiveDirectory": {
            "description": "FSActiveDirectory defines file storage active directory +X:model:etcd_lock;",
            "type": "object",
            "title": "FSActiveDirectory",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_gateway_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_gateway_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "realm": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "username": {
                    "type": "string"
                },
                "verify_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "workgroup": {
                    "type": "string"
                }
            }
        },
        "FSActiveDirectoryCreateReq": {
            "type": "object",
            "title": "FSActiveDirectoryCreateReq",
            "required": [
                "fs_active_directory"
            ],
            "properties": {
                "fs_active_directory": {
                    "$ref": "#/definitions/FSActiveDirectoryCreateReq_Info"
                }
            }
        },
        "FSActiveDirectoryCreateReq_Info": {
            "type": "object",
            "title": "FSActiveDirectoryCreateReq_Info",
            "required": [
                "name",
                "workgroup",
                "realm",
                "username",
                "password"
            ],
            "properties": {
                "ip": {
                    "description": "ip of dns server",
                    "type": "string"
                },
                "name": {
                    "description": "name of active directory",
                    "type": "string"
                },
                "password": {
                    "description": "password of active directory",
                    "type": "string"
                },
                "realm": {
                    "description": "realm of active directory",
                    "type": "string"
                },
                "username": {
                    "description": "username of active directory",
                    "type": "string"
                },
                "workgroup": {
                    "description": "workgroup of active directory",
                    "type": "string"
                }
            }
        },
        "FSActiveDirectoryResp": {
            "type": "object",
            "title": "FSActiveDirectoryResp",
            "required": [
                "fs_active_directory"
            ],
            "properties": {
                "fs_active_directory": {
                    "description": "file storage active directory",
                    "$ref": "#/definitions/FSActiveDirectory"
                }
            }
        },
        "FSActiveDirectoryUpdateReq": {
            "type": "object",
            "title": "FSActiveDirectoryUpdateReq",
            "required": [
                "fs_active_directory"
            ],
            "properties": {
                "fs_active_directory": {
                    "$ref": "#/definitions/FSActiveDirectoryUpdateReq_Info"
                }
            }
        },
        "FSActiveDirectoryUpdateReq_Info": {
            "type": "object",
            "title": "FSActiveDirectoryUpdateReq_Info",
            "properties": {
                "ip": {
                    "description": "ip of dns server",
                    "type": "string"
                },
                "name": {
                    "description": "name of active directory",
                    "type": "string"
                },
                "password": {
                    "description": "password of active directory",
                    "type": "string"
                },
                "realm": {
                    "description": "realm of active directory",
                    "type": "string"
                },
                "username": {
                    "description": "username of active directory",
                    "type": "string"
                },
                "workgroup": {
                    "description": "workgroup of active directory",
                    "type": "string"
                }
            }
        },
        "FSClient": {
            "description": "FSClient defines model of file storage client",
            "type": "object",
            "title": "FSClient",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "fs_client_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_client_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSClientGroup_Nestview"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FSClientCreateReq": {
            "type": "object",
            "title": "FSClientCreateReq",
            "required": [
                "fs_client"
            ],
            "properties": {
                "fs_client": {
                    "$ref": "#/definitions/FSClientCreateReq_Client"
                }
            }
        },
        "FSClientCreateReq_Client": {
            "type": "object",
            "title": "FSClientCreateReq_Client",
            "required": [
                "name",
                "ip"
            ],
            "properties": {
                "ip": {
                    "description": "ip of client",
                    "type": "string"
                },
                "name": {
                    "description": "name of client",
                    "type": "string"
                }
            }
        },
        "FSClientGroup": {
            "description": "FSClientGroup defines model of file storage client group",
            "type": "object",
            "title": "FSClientGroup",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "client_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "fs_clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSClient_Nestview"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FSClientGroupAddClientsReq": {
            "type": "object",
            "title": "FSClientGroupAddClientsReq",
            "required": [
                "fs_client_group"
            ],
            "properties": {
                "fs_client_group": {
                    "$ref": "#/definitions/FSClientGroupAddClientsReq_ClientGroup"
                }
            }
        },
        "FSClientGroupAddClientsReq_ClientGroup": {
            "type": "object",
            "title": "FSClientGroupAddClientsReq_ClientGroup",
            "required": [
                "fs_client_ids"
            ],
            "properties": {
                "fs_client_ids": {
                    "description": "ids of clients",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "FSClientGroupCreateReq": {
            "type": "object",
            "title": "FSClientGroupCreateReq",
            "required": [
                "fs_client_group"
            ],
            "properties": {
                "fs_client_group": {
                    "$ref": "#/definitions/FSClientGroupCreateReq_ClientGroup"
                }
            }
        },
        "FSClientGroupCreateReq_ClientGroup": {
            "type": "object",
            "title": "FSClientGroupCreateReq_ClientGroup",
            "required": [
                "name",
                "fs_client_ids"
            ],
            "properties": {
                "fs_client_ids": {
                    "description": "ids of clients",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "name": {
                    "description": "name of client group",
                    "type": "string"
                }
            }
        },
        "FSClientGroupRemoveClientsReq": {
            "type": "object",
            "title": "FSClientGroupRemoveClientsReq",
            "required": [
                "fs_client_group"
            ],
            "properties": {
                "fs_client_group": {
                    "$ref": "#/definitions/FSClientGroupRemoveClientsReq_ClientGroup"
                }
            }
        },
        "FSClientGroupRemoveClientsReq_ClientGroup": {
            "type": "object",
            "title": "FSClientGroupRemoveClientsReq_ClientGroup",
            "required": [
                "fs_client_ids"
            ],
            "properties": {
                "fs_client_ids": {
                    "description": "ids of clients",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "FSClientGroupResp": {
            "type": "object",
            "title": "FSClientGroupResp",
            "required": [
                "fs_client_group"
            ],
            "properties": {
                "fs_client_group": {
                    "description": "file storage client group",
                    "$ref": "#/definitions/FSClientGroup"
                }
            }
        },
        "FSClientGroupUpdateReq": {
            "type": "object",
            "title": "FSClientGroupUpdateReq",
            "required": [
                "fs_client_group"
            ],
            "properties": {
                "fs_client_group": {
                    "$ref": "#/definitions/FSClientGroupUpdateReq_ClientGroup"
                }
            }
        },
        "FSClientGroupUpdateReq_ClientGroup": {
            "type": "object",
            "title": "FSClientGroupUpdateReq_ClientGroup",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name of client group",
                    "type": "string"
                }
            }
        },
        "FSClientGroup_Nestview": {
            "type": "object",
            "title": "FSClientGroup_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "FSClientGroupsResp": {
            "type": "object",
            "title": "FSClientGroupsResp",
            "required": [
                "fs_client_groups"
            ],
            "properties": {
                "fs_client_groups": {
                    "description": "file storage client groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSClientGroup"
                    }
                }
            }
        },
        "FSClientResp": {
            "type": "object",
            "title": "FSClientResp",
            "required": [
                "fs_client"
            ],
            "properties": {
                "fs_client": {
                    "description": "file storage client",
                    "$ref": "#/definitions/FSClient"
                }
            }
        },
        "FSClientUpdateReq": {
            "type": "object",
            "title": "FSClientUpdateReq",
            "required": [
                "fs_client"
            ],
            "properties": {
                "fs_client": {
                    "$ref": "#/definitions/FSClientUpdateReq_Client"
                }
            }
        },
        "FSClientUpdateReq_Client": {
            "type": "object",
            "title": "FSClientUpdateReq_Client",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name of client",
                    "type": "string"
                }
            }
        },
        "FSClient_Nestview": {
            "type": "object",
            "title": "FSClient_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "FSClientsResp": {
            "type": "object",
            "title": "FSClientsResp",
            "required": [
                "fs_clients"
            ],
            "properties": {
                "fs_clients": {
                    "description": "file storage clients",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSClient"
                    }
                }
            }
        },
        "FSFTPSession": {
            "description": "FSFTPSession defines model of FS FTP session",
            "type": "object",
            "title": "FSFTPSession",
            "properties": {
                "client_ip": {
                    "type": "string"
                },
                "client_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "connected_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "fs_ftp_share": {
                    "$ref": "#/definitions/FSFTPShare_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "FSFTPSessionsResp": {
            "type": "object",
            "title": "FSFTPSessionsResp",
            "required": [
                "fs_ftp_sessions"
            ],
            "properties": {
                "fs_ftp_sessions": {
                    "description": "fs ftp sessions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSFTPSession"
                    }
                }
            }
        },
        "FSFTPShare": {
            "description": "FSFTPShare defines model of fs ftp share",
            "type": "object",
            "title": "FSFTPShare",
            "properties": {
                "acl_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "fs_folder": {
                    "$ref": "#/definitions/FSFolder_Nestview"
                },
                "fs_gateway_group": {
                    "$ref": "#/definitions/FSGatewayGroup_Nestview"
                },
                "fs_quota_tree": {
                    "$ref": "#/definitions/FSQuotaTree_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "mapping_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FSFTPShareACL": {
            "description": "FSFTPShareACL defines model of fs ftp share ACL",
            "type": "object",
            "title": "FSFTPShareACL",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "create_enabled": {
                    "type": "boolean"
                },
                "delete_enabled": {
                    "type": "boolean"
                },
                "download_bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "download_enabled": {
                    "type": "boolean"
                },
                "fs_ftp_share": {
                    "$ref": "#/definitions/FSFTPShare_Nestview"
                },
                "fs_user": {
                    "$ref": "#/definitions/FSUser_Nestview"
                },
                "fs_user_group": {
                    "$ref": "#/definitions/FSUserGroup_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "list_enabled": {
                    "type": "boolean"
                },
                "rename_enabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "upload_bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "upload_enabled": {
                    "type": "boolean"
                }
            }
        },
        "FSFTPShareACLReq": {
            "type": "object",
            "title": "FSFTPShareACLReq",
            "properties": {
                "create_enabled": {
                    "description": "enable creating files",
                    "type": "boolean"
                },
                "delete_enabled": {
                    "description": "enable deleting files",
                    "type": "boolean"
                },
                "download_bandwidth": {
                    "description": "max bandwidth of downloading",
                    "type": "integer",
                    "format": "int64"
                },
                "download_enabled": {
                    "description": "enable downloading files",
                    "type": "boolean"
                },
                "fs_user_group_id": {
                    "description": "id of user group",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_user_id": {
                    "description": "id of user",
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "description": "id of user group",
                    "type": "integer",
                    "format": "int64"
                },
                "list_enabled": {
                    "description": "enable listing files",
                    "type": "boolean"
                },
                "rename_enabled": {
                    "description": "enable renaming files",
                    "type": "boolean"
                },
                "type": {
                    "description": "type of share acl",
                    "type": "string"
                },
                "upload_bandwidth": {
                    "description": "max bandwidth of uploading",
                    "type": "integer",
                    "format": "int64"
                },
                "upload_enabled": {
                    "description": "enable uploading files",
                    "type": "boolean"
                }
            }
        },
        "FSFTPShareACLsResp": {
            "type": "object",
            "title": "FSFTPShareACLsResp",
            "required": [
                "fs_ftp_share_acls"
            ],
            "properties": {
                "fs_ftp_share_acls": {
                    "description": "fs ftp share acls",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSFTPShareACL"
                    }
                }
            }
        },
        "FSFTPShareAddACLsReq": {
            "type": "object",
            "title": "FSFTPShareAddACLsReq",
            "required": [
                "fs_ftp_share"
            ],
            "properties": {
                "fs_ftp_share": {
                    "$ref": "#/definitions/FSFTPShareAddACLsReq_Share"
                }
            }
        },
        "FSFTPShareAddACLsReq_Share": {
            "type": "object",
            "title": "FSFTPShareAddACLsReq_Share",
            "required": [
                "fs_ftp_share_acls"
            ],
            "properties": {
                "fs_ftp_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSFTPShareACLReq"
                    }
                }
            }
        },
        "FSFTPShareCreateReq": {
            "type": "object",
            "title": "FSFTPShareCreateReq",
            "required": [
                "fs_ftp_share"
            ],
            "properties": {
                "fs_ftp_share": {
                    "$ref": "#/definitions/FSFTPShareCreateReq_Share"
                }
            }
        },
        "FSFTPShareCreateReq_Share": {
            "type": "object",
            "title": "FSFTPShareCreateReq_Share",
            "required": [
                "fs_folder_id",
                "fs_gateway_group_id"
            ],
            "properties": {
                "fs_folder_id": {
                    "description": "folder id",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_ftp_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSFTPShareACLReq"
                    }
                },
                "fs_gateway_group_id": {
                    "description": "gateway group id",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_quota_tree_id": {
                    "description": "quota tree id",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name of share",
                    "type": "string"
                }
            }
        },
        "FSFTPShareRemoveACLsReq": {
            "type": "object",
            "title": "FSFTPShareRemoveACLsReq",
            "required": [
                "fs_ftp_share"
            ],
            "properties": {
                "fs_ftp_share": {
                    "$ref": "#/definitions/FSFTPShareRemoveACLsReq_Share"
                }
            }
        },
        "FSFTPShareRemoveACLsReq_Share": {
            "type": "object",
            "title": "FSFTPShareRemoveACLsReq_Share",
            "required": [
                "fs_ftp_share_acl_ids"
            ],
            "properties": {
                "fs_ftp_share_acl_ids": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "FSFTPShareResp": {
            "type": "object",
            "title": "FSFTPShareResp",
            "required": [
                "fs_ftp_share"
            ],
            "properties": {
                "fs_ftp_share": {
                    "description": "fs ftp share",
                    "$ref": "#/definitions/FSFTPShare"
                }
            }
        },
        "FSFTPShareUpdateACLReq": {
            "type": "object",
            "title": "FSFTPShareUpdateACLReq",
            "properties": {
                "create_enabled": {
                    "description": "enable creating files",
                    "type": "boolean"
                },
                "delete_enabled": {
                    "description": "enable deleting files",
                    "type": "boolean"
                },
                "download_bandwidth": {
                    "description": "max bandwidth of downloading",
                    "type": "integer",
                    "format": "int64"
                },
                "download_enabled": {
                    "description": "enable downloading files",
                    "type": "boolean"
                },
                "id": {
                    "description": "id of user group",
                    "type": "integer",
                    "format": "int64"
                },
                "list_enabled": {
                    "description": "enable listing files",
                    "type": "boolean"
                },
                "rename_enabled": {
                    "description": "enable renaming files",
                    "type": "boolean"
                },
                "upload_bandwidth": {
                    "description": "max bandwidth of uploading",
                    "type": "integer",
                    "format": "int64"
                },
                "upload_enabled": {
                    "description": "enable uploading files",
                    "type": "boolean"
                }
            }
        },
        "FSFTPShareUpdateACLsReq": {
            "type": "object",
            "title": "FSFTPShareUpdateACLsReq",
            "required": [
                "fs_ftp_share"
            ],
            "properties": {
                "fs_ftp_share": {
                    "$ref": "#/definitions/FSFTPShareUpdateACLsReq_Share"
                }
            }
        },
        "FSFTPShareUpdateACLsReq_Share": {
            "type": "object",
            "title": "FSFTPShareUpdateACLsReq_Share",
            "properties": {
                "fs_ftp_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSFTPShareUpdateACLReq"
                    }
                }
            }
        },
        "FSFTPShare_Nestview": {
            "type": "object",
            "title": "FSFTPShare_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSFTPSharesResp": {
            "type": "object",
            "title": "FSFTPSharesResp",
            "required": [
                "fs_ftp_shares"
            ],
            "properties": {
                "fs_ftp_shares": {
                    "description": "fs ftp share",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSFTPShare"
                    }
                }
            }
        },
        "FSFolder": {
            "description": "FSFolder contains information of a fs folder and it's stats.",
            "type": "object",
            "title": "FSFolder",
            "properties": {
                "access_path": {
                    "$ref": "#/definitions/AccessPath_Nestview"
                },
                "action_status": {
                    "type": "string"
                },
                "actual_status": {
                    "type": "string"
                },
                "block_volume": {
                    "$ref": "#/definitions/Volume_Nestview"
                },
                "block_volume_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "dp_fs_snapshot_policy": {
                    "$ref": "#/definitions/DpFSSnapshotPolicy_Nestview"
                },
                "flattened": {
                    "type": "boolean"
                },
                "formatted": {
                    "type": "boolean"
                },
                "fs_gateway_group": {
                    "$ref": "#/definitions/FSGatewayGroup"
                },
                "fs_quota_tree_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_snapshot": {
                    "$ref": "#/definitions/FSSnapshot_Nestview"
                },
                "fs_snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "latest_snapshot_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "progress": {
                    "type": "number",
                    "format": "double"
                },
                "qos": {
                    "$ref": "#/definitions/VolumeQosSpec"
                },
                "qos_enabled": {
                    "type": "boolean"
                },
                "quota_tree_share_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "quota_tree_shared": {
                    "type": "boolean"
                },
                "share_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shared": {
                    "description": "before version 3.2.14, these fields was calculated by wizard, but there is quota\ntrees in new verion, calculations is too complicated, so add the fields to\nfolder struct",
                    "type": "boolean"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FSFolderAddQuotaTreesReq": {
            "type": "object",
            "title": "FSFolderAddQuotaTreesReq",
            "required": [
                "fs_folder"
            ],
            "properties": {
                "fs_folder": {
                    "$ref": "#/definitions/FSFolderAddQuotaTreesReq_Folder"
                }
            }
        },
        "FSFolderAddQuotaTreesReq_Folder": {
            "type": "object",
            "title": "FSFolderAddQuotaTreesReq_Folder",
            "required": [
                "fs_quota_trees"
            ],
            "properties": {
                "fs_quota_trees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSFolderAddQuotaTreesReq_Folder_QuotaTrees_Elt"
                    }
                }
            }
        },
        "FSFolderAddQuotaTreesReq_Folder_QuotaTrees_Elt": {
            "type": "object",
            "title": "FSFolderAddQuotaTreesReq_Folder_QuotaTrees_Elt",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name of quota tree",
                    "type": "string"
                },
                "size": {
                    "description": "size of quota tree",
                    "type": "integer",
                    "format": "int64"
                },
                "soft_quota_size": {
                    "description": "soft quota size of quota tree",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSFolderCreateReq": {
            "type": "object",
            "title": "FSFolderCreateReq",
            "required": [
                "fs_folder"
            ],
            "properties": {
                "fs_folder": {
                    "$ref": "#/definitions/FSFolderCreateReq_Folder"
                }
            }
        },
        "FSFolderCreateReq_Folder": {
            "type": "object",
            "title": "FSFolderCreateReq_Folder",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "description": "description of folder",
                    "type": "string"
                },
                "flattened": {
                    "description": "flatten or not flatten",
                    "type": "boolean"
                },
                "fs_snapshot_id": {
                    "description": "file storage snapshot id",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name of folder",
                    "type": "string"
                },
                "pool_id": {
                    "description": "id of pool",
                    "type": "integer",
                    "format": "int64"
                },
                "qos": {
                    "description": "qos of volume",
                    "$ref": "#/definitions/VolumeQosSpec"
                },
                "qos_enabled": {
                    "description": "enable or disable the qos",
                    "type": "boolean"
                },
                "size": {
                    "description": "size of folder",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSFolderQuotaTreesResp": {
            "type": "object",
            "title": "FSFolderQuotaTreesResp",
            "required": [
                "fs_folder",
                "fs_quota_trees"
            ],
            "properties": {
                "fs_folder": {
                    "description": "file storage folder records",
                    "$ref": "#/definitions/FSFolderRecord"
                },
                "fs_quota_trees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSQuotaTree"
                    }
                }
            }
        },
        "FSFolderRecord": {
            "description": "FSFolderRecord combine FSFolder and FSFolderStat as API response",
            "type": "object",
            "title": "FSFolderRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/FSFolder"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FSFolderStat"
                            }
                        }
                    }
                }
            ]
        },
        "FSFolderRemoveQuotaTreesReq": {
            "type": "object",
            "title": "FSFolderRemoveQuotaTreesReq",
            "required": [
                "fs_folder"
            ],
            "properties": {
                "fs_folder": {
                    "$ref": "#/definitions/FSFolderRemoveQuotaTreesReq_Folder"
                }
            }
        },
        "FSFolderRemoveQuotaTreesReq_Folder": {
            "type": "object",
            "title": "FSFolderRemoveQuotaTreesReq_Folder",
            "properties": {
                "fs_quota_tree_ids": {
                    "description": "id array of quota trees",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "FSFolderResp": {
            "type": "object",
            "title": "FSFolderResp",
            "required": [
                "fs_folder"
            ],
            "properties": {
                "fs_folder": {
                    "description": "file storage folder records",
                    "$ref": "#/definitions/FSFolderRecord"
                }
            }
        },
        "FSFolderRollBackReq": {
            "type": "object",
            "title": "FSFolderRollBackReq",
            "required": [
                "fs_folder"
            ],
            "properties": {
                "fs_folder": {
                    "$ref": "#/definitions/FSFolderRollBackReq_Folder"
                }
            }
        },
        "FSFolderRollBackReq_Folder": {
            "type": "object",
            "title": "FSFolderRollBackReq_Folder",
            "properties": {
                "fs_snapshot_id": {
                    "description": "file storage snapshot id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSFolderSamplesResp": {
            "type": "object",
            "title": "FSFolderSamplesResp",
            "properties": {
                "fs_folder_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSFolderStat"
                    }
                }
            }
        },
        "FSFolderSnapshotProtectionReq": {
            "type": "object",
            "title": "FSFolderSnapshotProtectionReq",
            "required": [
                "fs_folder"
            ],
            "properties": {
                "fs_folder": {
                    "$ref": "#/definitions/FSFolderSnapshotProtectionReq_Folder"
                }
            }
        },
        "FSFolderSnapshotProtectionReq_Folder": {
            "type": "object",
            "title": "FSFolderSnapshotProtectionReq_Folder",
            "required": [
                "dp_fs_snapshot_policy_id"
            ],
            "properties": {
                "dp_fs_snapshot_policy_id": {
                    "description": "id of dp fs snapshot policy",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSFolderStat": {
            "description": "FSFolderStat records file storage folder stat info",
            "type": "object",
            "title": "FSFolderStat",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "inode_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "read_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "read_iops": {
                    "type": "number",
                    "format": "double"
                },
                "read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "total_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "total_iops": {
                    "type": "number",
                    "format": "double"
                },
                "used_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "write_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "write_iops": {
                    "type": "number",
                    "format": "double"
                },
                "write_latency_us": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "FSFolderUpdateReq": {
            "type": "object",
            "title": "FSFolderUpdateReq",
            "required": [
                "fs_folder"
            ],
            "properties": {
                "fs_folder": {
                    "$ref": "#/definitions/FSFolderUpdateReq_Folder"
                }
            }
        },
        "FSFolderUpdateReq_Folder": {
            "type": "object",
            "title": "FSFolderUpdateReq_Folder",
            "properties": {
                "description": {
                    "description": "description of folder",
                    "type": "string"
                },
                "name": {
                    "description": "name of folder",
                    "type": "string"
                },
                "qos": {
                    "description": "qos of volume",
                    "$ref": "#/definitions/VolumeQosSpec"
                },
                "qos_enabled": {
                    "description": "enable or disable the qos",
                    "type": "boolean"
                },
                "size": {
                    "description": "size of folder",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSFolder_Nestview": {
            "type": "object",
            "title": "FSFolder_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "FSFoldersResp": {
            "type": "object",
            "title": "FSFoldersResp",
            "required": [
                "fs_folders"
            ],
            "properties": {
                "fs_folders": {
                    "description": "file storage folder records",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSFolderRecord"
                    }
                }
            }
        },
        "FSGateway": {
            "description": "FSGateway defines model of file storage gateway",
            "type": "object",
            "title": "FSGateway",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "fs_gateway_group": {
                    "$ref": "#/definitions/FSGatewayGroup_Nestview"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "network_address": {
                    "$ref": "#/definitions/NetworkAddress_Nestview"
                },
                "nic_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "vip": {
                    "type": "string"
                }
            }
        },
        "FSGatewayGroup": {
            "description": "FSGatewayGroup defines model of file storage gateway group",
            "type": "object",
            "title": "FSGatewayGroup",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "encoding": {
                    "type": "string"
                },
                "folder_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "nfs_versions": {
                    "description": "NFS attributes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "port": {
                    "description": "FTP attributes",
                    "type": "integer",
                    "format": "int64"
                },
                "security": {
                    "description": "SMB attributes",
                    "type": "string"
                },
                "smb1_enabled": {
                    "type": "boolean"
                },
                "smb_ports": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "status": {
                    "type": "string"
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "vip": {
                    "type": "string"
                },
                "vip_mask": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSGatewayGroupAddGatewaysReq": {
            "type": "object",
            "title": "FSGatewayGroupAddGatewaysReq",
            "required": [
                "fs_gateway_group"
            ],
            "properties": {
                "fs_gateway_group": {
                    "$ref": "#/definitions/FSGatewayGroupAddGatewaysReq_GatewayGroup"
                }
            }
        },
        "FSGatewayGroupAddGatewaysReq_GatewayGroup": {
            "type": "object",
            "title": "FSGatewayGroupAddGatewaysReq_GatewayGroup",
            "required": [
                "fs_gateways"
            ],
            "properties": {
                "fs_gateways": {
                    "description": "file storage gateways list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSGatewayReq"
                    }
                }
            }
        },
        "FSGatewayGroupCreateReq": {
            "type": "object",
            "title": "FSGatewayGroupCreateReq",
            "required": [
                "fs_gateway_group"
            ],
            "properties": {
                "fs_gateway_group": {
                    "$ref": "#/definitions/FSGatewayGroupCreateReq_GatewayGroup"
                }
            }
        },
        "FSGatewayGroupCreateReq_GatewayGroup": {
            "type": "object",
            "title": "FSGatewayGroupCreateReq_GatewayGroup",
            "required": [
                "name",
                "fs_gateways",
                "vip",
                "types"
            ],
            "properties": {
                "description": {
                    "description": "description of gateway group",
                    "type": "string"
                },
                "encoding": {
                    "description": "ftp encoding format, default is utf8",
                    "type": "string"
                },
                "fs_gateways": {
                    "description": "file storage gateways list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSGatewayReq"
                    }
                },
                "name": {
                    "description": "name of gateway group",
                    "type": "string"
                },
                "nfs_versions": {
                    "description": "nfs versions of nfs supported",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "security": {
                    "description": "smb security type",
                    "type": "string"
                },
                "smb1_enabled": {
                    "description": "smb version 1.0 enabled",
                    "type": "boolean"
                },
                "smb_ports": {
                    "description": "smb ports",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "types": {
                    "description": "types of supported (smb, nfs, ftp)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vip": {
                    "description": "virtual ip of gateway group",
                    "type": "string"
                }
            }
        },
        "FSGatewayGroupRemoveGatewaysReq": {
            "type": "object",
            "title": "FSGatewayGroupRemoveGatewaysReq",
            "required": [
                "fs_gateway_group"
            ],
            "properties": {
                "fs_gateway_group": {
                    "$ref": "#/definitions/FSGatewayGroupRemoveGatewaysReq_GatewayGroup"
                }
            }
        },
        "FSGatewayGroupRemoveGatewaysReq_GatewayGroup": {
            "type": "object",
            "title": "FSGatewayGroupRemoveGatewaysReq_GatewayGroup",
            "required": [
                "fs_gateway_ids"
            ],
            "properties": {
                "fs_gateway_ids": {
                    "description": "file storage gateway ids",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "FSGatewayGroupResp": {
            "type": "object",
            "title": "FSGatewayGroupResp",
            "required": [
                "fs_gateway_group"
            ],
            "properties": {
                "fs_gateway_group": {
                    "description": "file storage gateway group",
                    "$ref": "#/definitions/FSGatewayGroup"
                }
            }
        },
        "FSGatewayGroupUpdateReq": {
            "type": "object",
            "title": "FSGatewayGroupUpdateReq",
            "required": [
                "fs_gateway_group"
            ],
            "properties": {
                "fs_gateway_group": {
                    "$ref": "#/definitions/FSGatewayGroupUpdateReq_GatewayGroup"
                }
            }
        },
        "FSGatewayGroupUpdateReq_GatewayGroup": {
            "type": "object",
            "title": "FSGatewayGroupUpdateReq_GatewayGroup",
            "properties": {
                "description": {
                    "description": "description of gateway group",
                    "type": "string"
                },
                "encoding": {
                    "description": "ftp encoding format, default is utf8",
                    "type": "string"
                },
                "name": {
                    "description": "name of gateway group",
                    "type": "string"
                },
                "nfs_versions": {
                    "description": "nfs versions supported",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "security": {
                    "description": "smb security type",
                    "type": "string"
                },
                "smb1_enabled": {
                    "description": "smb version 1.0 enabled",
                    "type": "boolean"
                },
                "smb_ports": {
                    "description": "smb ports",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "types": {
                    "description": "types of supported",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vip": {
                    "description": "virtual ip of gateway group",
                    "type": "string"
                }
            }
        },
        "FSGatewayGroup_Nestview": {
            "type": "object",
            "title": "FSGatewayGroup_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "vip": {
                    "type": "string"
                },
                "vip_mask": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSGatewayGroupsResp": {
            "type": "object",
            "title": "FSGatewayGroupsResp",
            "required": [
                "fs_gateway_groups"
            ],
            "properties": {
                "fs_gateway_groups": {
                    "description": "file storage gateway groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSGatewayGroup"
                    }
                }
            }
        },
        "FSGatewayReq": {
            "type": "object",
            "title": "FSGatewayReq",
            "required": [
                "host_id"
            ],
            "properties": {
                "host_id": {
                    "description": "host id",
                    "type": "integer",
                    "format": "int64"
                },
                "network_address_id": {
                    "description": "network address id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSGatewayResp": {
            "type": "object",
            "title": "FSGatewayResp",
            "required": [
                "fs_gateway"
            ],
            "properties": {
                "fs_gateway": {
                    "description": "file storage gateway",
                    "$ref": "#/definitions/FSGateway"
                }
            }
        },
        "FSGatewaysResp": {
            "type": "object",
            "title": "FSGatewaysResp",
            "required": [
                "fs_gateways"
            ],
            "properties": {
                "fs_gateways": {
                    "description": "file storage gateways",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSGateway"
                    }
                }
            }
        },
        "FSKerberos_Nestview": {
            "type": "object",
            "title": "FSKerberos_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "FSLdap": {
            "description": "FSLdap defines model of file storage ldap",
            "type": "object",
            "title": "FSLdap",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "admin_dn": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "connection_timeout": {
                    "type": "integer",
                    "format": "int64"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_gateway_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_gateway_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "group_suffix": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip": {
                    "type": "string"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "netbios_name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "samba_sid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_suffix": {
                    "type": "string"
                },
                "verify_time": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FSLdapCreateReq": {
            "type": "object",
            "title": "FSLdapCreateReq",
            "required": [
                "fs_ldap"
            ],
            "properties": {
                "fs_ldap": {
                    "$ref": "#/definitions/FSLdapCreateReq_Info"
                }
            }
        },
        "FSLdapCreateReq_Info": {
            "type": "object",
            "title": "FSLdapCreateReq_Info",
            "required": [
                "name",
                "ip",
                "port",
                "suffix"
            ],
            "properties": {
                "admin_dn": {
                    "description": "ldap admin dn",
                    "type": "string"
                },
                "connection_timeout": {
                    "description": "timeout for connection",
                    "type": "integer",
                    "format": "int64"
                },
                "group_suffix": {
                    "description": "group suffix",
                    "type": "string"
                },
                "ip": {
                    "description": "ip of server",
                    "type": "string"
                },
                "ips": {
                    "description": "ips of standby servers",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "name of ldap",
                    "type": "string"
                },
                "password": {
                    "description": "bind password",
                    "type": "string"
                },
                "port": {
                    "description": "ldap service port",
                    "type": "integer",
                    "format": "int64"
                },
                "suffix": {
                    "description": "ldap suffix",
                    "type": "string"
                },
                "timeout": {
                    "description": "timeout for searching",
                    "type": "integer",
                    "format": "int64"
                },
                "user_suffix": {
                    "description": "user suffix",
                    "type": "string"
                }
            }
        },
        "FSLdapResp": {
            "type": "object",
            "title": "FSLdapResp",
            "required": [
                "fs_ldap"
            ],
            "properties": {
                "fs_ldap": {
                    "description": "file storage ldap",
                    "$ref": "#/definitions/FSLdap"
                }
            }
        },
        "FSLdapUpdateReq": {
            "type": "object",
            "title": "FSLdapUpdateReq",
            "required": [
                "fs_ldap"
            ],
            "properties": {
                "fs_ldap": {
                    "$ref": "#/definitions/FSLdapUpdateReq_Info"
                }
            }
        },
        "FSLdapUpdateReq_Info": {
            "type": "object",
            "title": "FSLdapUpdateReq_Info",
            "required": [
                "name",
                "ip",
                "port",
                "suffix"
            ],
            "properties": {
                "admin_dn": {
                    "description": "ldap admin dn",
                    "type": "string"
                },
                "connection_timeout": {
                    "description": "timeout for connection",
                    "type": "integer",
                    "format": "int64"
                },
                "group_suffix": {
                    "description": "group suffix",
                    "type": "string"
                },
                "ip": {
                    "description": "ip of server",
                    "type": "string"
                },
                "ips": {
                    "description": "ips of standby servers",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "name of ldap",
                    "type": "string"
                },
                "password": {
                    "description": "bind password",
                    "type": "string"
                },
                "port": {
                    "description": "ldap service port",
                    "type": "integer",
                    "format": "int64"
                },
                "suffix": {
                    "description": "ldap suffix",
                    "type": "string"
                },
                "timeout": {
                    "description": "timeout for searching",
                    "type": "integer",
                    "format": "int64"
                },
                "user_suffix": {
                    "description": "user suffix",
                    "type": "string"
                }
            }
        },
        "FSLdapsResp": {
            "type": "object",
            "title": "FSLdapsResp",
            "required": [
                "fs_ldaps"
            ],
            "properties": {
                "fs_ldaps": {
                    "description": "file storage ldaps",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSLdap"
                    }
                }
            }
        },
        "FSNFSConnection": {
            "description": "FSNFSConnection defines model of FS NFS connection",
            "type": "object",
            "title": "FSNFSConnection",
            "properties": {
                "client_ip": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "fs_nfs_share": {
                    "$ref": "#/definitions/FSNFSShare_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FSNFSConnectionsResp": {
            "type": "object",
            "title": "FSNFSConnectionsResp",
            "required": [
                "fs_nfs_connections"
            ],
            "properties": {
                "fs_nfs_connections": {
                    "description": "fs nfs connections",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSNFSConnection"
                    }
                }
            }
        },
        "FSNFSShare": {
            "description": "FSNFSShare defines model of fs nfs share",
            "type": "object",
            "title": "FSNFSShare",
            "properties": {
                "acl_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "fs_folder": {
                    "$ref": "#/definitions/FSFolder_Nestview"
                },
                "fs_gateway_group": {
                    "$ref": "#/definitions/FSGatewayGroup_Nestview"
                },
                "fs_quota_tree": {
                    "$ref": "#/definitions/FSQuotaTree_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "mapping_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FSNFSShareACL": {
            "description": "FSNFSShareACL defines model of fs nfs share ACL",
            "type": "object",
            "title": "FSNFSShareACL",
            "properties": {
                "all_squash": {
                    "type": "boolean"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "fs_client": {
                    "$ref": "#/definitions/FSClient_Nestview"
                },
                "fs_client_group": {
                    "$ref": "#/definitions/FSClientGroup_Nestview"
                },
                "fs_nfs_share": {
                    "$ref": "#/definitions/FSNFSShare_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "type": "string"
                },
                "root_squash": {
                    "type": "boolean"
                },
                "sync": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FSNFSShareACLReq": {
            "type": "object",
            "title": "FSNFSShareACLReq",
            "properties": {
                "all_squash": {
                    "description": "all squash",
                    "type": "boolean"
                },
                "fs_client_group_id": {
                    "description": "id of cilent group",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_client_id": {
                    "description": "id of cilent",
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "description": "id of user group",
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "description": "readonly or readwrite access",
                    "type": "string"
                },
                "root_squash": {
                    "description": "root squash",
                    "type": "boolean"
                },
                "sync": {
                    "description": "write to disk by sync or async",
                    "type": "boolean"
                },
                "type": {
                    "description": "type of share acl",
                    "type": "string"
                }
            }
        },
        "FSNFSShareACLsResp": {
            "type": "object",
            "title": "FSNFSShareACLsResp",
            "required": [
                "fs_nfs_share_acls"
            ],
            "properties": {
                "fs_nfs_share_acls": {
                    "description": "file storage folder share acls",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSNFSShareACL"
                    }
                }
            }
        },
        "FSNFSShareAddACLsReq": {
            "type": "object",
            "title": "FSNFSShareAddACLsReq",
            "required": [
                "fs_nfs_share"
            ],
            "properties": {
                "fs_nfs_share": {
                    "$ref": "#/definitions/FSNFSShareAddACLsReq_Share"
                }
            }
        },
        "FSNFSShareAddACLsReq_Share": {
            "type": "object",
            "title": "FSNFSShareAddACLsReq_Share",
            "required": [
                "fs_nfs_share_acls"
            ],
            "properties": {
                "fs_nfs_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSNFSShareACLReq"
                    }
                }
            }
        },
        "FSNFSShareCreateReq": {
            "type": "object",
            "title": "FSNFSShareCreateReq",
            "required": [
                "fs_nfs_share"
            ],
            "properties": {
                "fs_nfs_share": {
                    "$ref": "#/definitions/FSNFSShareCreateReq_Share"
                }
            }
        },
        "FSNFSShareCreateReq_Share": {
            "type": "object",
            "title": "FSNFSShareCreateReq_Share",
            "required": [
                "fs_folder_id",
                "fs_gateway_group_id"
            ],
            "properties": {
                "fs_folder_id": {
                    "description": "folder id",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_gateway_group_id": {
                    "description": "gateway group id",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_nfs_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSNFSShareACLReq"
                    }
                },
                "fs_quota_tree_id": {
                    "description": "quota tree id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSNFSShareRemoveACLsReq": {
            "type": "object",
            "title": "FSNFSShareRemoveACLsReq",
            "required": [
                "fs_nfs_share"
            ],
            "properties": {
                "fs_nfs_share": {
                    "$ref": "#/definitions/FSNFSShareRemoveACLsReq_Share"
                }
            }
        },
        "FSNFSShareRemoveACLsReq_Share": {
            "type": "object",
            "title": "FSNFSShareRemoveACLsReq_Share",
            "required": [
                "fs_nfs_share_acl_ids"
            ],
            "properties": {
                "fs_nfs_share_acl_ids": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "FSNFSShareResp": {
            "type": "object",
            "title": "FSNFSShareResp",
            "required": [
                "fs_nfs_share"
            ],
            "properties": {
                "fs_nfs_share": {
                    "description": "folder share",
                    "$ref": "#/definitions/FSNFSShare"
                }
            }
        },
        "FSNFSShareUpdateACLReq": {
            "type": "object",
            "title": "FSNFSShareUpdateACLReq",
            "properties": {
                "all_squash": {
                    "description": "all squash",
                    "type": "boolean"
                },
                "id": {
                    "description": "id of user group",
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "description": "readonly or readwrite access",
                    "type": "string"
                },
                "root_squash": {
                    "description": "root squash",
                    "type": "boolean"
                },
                "sync": {
                    "description": "write to disk by sync or async",
                    "type": "boolean"
                }
            }
        },
        "FSNFSShareUpdateACLsReq": {
            "type": "object",
            "title": "FSNFSShareUpdateACLsReq",
            "required": [
                "fs_nfs_share"
            ],
            "properties": {
                "fs_nfs_share": {
                    "$ref": "#/definitions/FSNFSShareUpdateACLsReq_Share"
                }
            }
        },
        "FSNFSShareUpdateACLsReq_Share": {
            "type": "object",
            "title": "FSNFSShareUpdateACLsReq_Share",
            "properties": {
                "fs_nfs_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSNFSShareUpdateACLReq"
                    }
                }
            }
        },
        "FSNFSShare_Nestview": {
            "type": "object",
            "title": "FSNFSShare_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSNFSSharesResp": {
            "type": "object",
            "title": "FSNFSSharesResp",
            "required": [
                "fs_nfs_shares"
            ],
            "properties": {
                "fs_nfs_shares": {
                    "description": "share",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSNFSShare"
                    }
                }
            }
        },
        "FSQuotaTree": {
            "description": "FSQuotaTree defines model of file storage quota tree",
            "type": "object",
            "title": "FSQuotaTree",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "fs_folder": {
                    "$ref": "#/definitions/FSFolder_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "inode_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "shared": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "soft_quota_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "used_kbyte": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSQuotaTreeResp": {
            "type": "object",
            "title": "FSQuotaTreeResp",
            "required": [
                "fs_quota_tree"
            ],
            "properties": {
                "fs_quota_tree": {
                    "description": "file storage quota tree",
                    "$ref": "#/definitions/FSQuotaTree"
                }
            }
        },
        "FSQuotaTreeUpdateReq": {
            "type": "object",
            "title": "FSQuotaTreeUpdateReq",
            "required": [
                "fs_quota_tree"
            ],
            "properties": {
                "fs_quota_tree": {
                    "$ref": "#/definitions/FSQuotaTreeUpdateReq_QuotaTree"
                }
            }
        },
        "FSQuotaTreeUpdateReq_QuotaTree": {
            "type": "object",
            "title": "FSQuotaTreeUpdateReq_QuotaTree",
            "properties": {
                "name": {
                    "description": "name of quota tree",
                    "type": "string"
                },
                "size": {
                    "description": "size of quota tree",
                    "type": "integer",
                    "format": "int64"
                },
                "soft_quota_size": {
                    "description": "soft quota size of quota tree",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSQuotaTree_Nestview": {
            "type": "object",
            "title": "FSQuotaTree_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "FSQuotaTreesResp": {
            "type": "object",
            "title": "FSQuotaTreesResp",
            "required": [
                "fs_quota_trees"
            ],
            "properties": {
                "fs_quota_trees": {
                    "description": "file storage quota trees",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSQuotaTree"
                    }
                }
            }
        },
        "FSSMBSession": {
            "description": "FSSMBSession defines model of FS SMB session",
            "type": "object",
            "title": "FSSMBSession",
            "properties": {
                "client_ip": {
                    "type": "string"
                },
                "client_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "connected_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "fs_smb_share": {
                    "$ref": "#/definitions/FSSMBShare_Nestview"
                },
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "protocol_version": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "FSSMBSessionsResp": {
            "type": "object",
            "title": "FSSMBSessionsResp",
            "required": [
                "fs_smb_sessions"
            ],
            "properties": {
                "fs_smb_sessions": {
                    "description": "fs smb sessions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSSMBSession"
                    }
                }
            }
        },
        "FSSMBShare": {
            "description": "FSSMBShare defines model of fs smb share",
            "type": "object",
            "title": "FSSMBShare",
            "properties": {
                "acl_inherited": {
                    "type": "boolean"
                },
                "acl_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "action_status": {
                    "type": "string"
                },
                "case_sensitive": {
                    "type": "boolean"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "fs_folder": {
                    "$ref": "#/definitions/FSFolder_Nestview"
                },
                "fs_gateway_group": {
                    "$ref": "#/definitions/FSGatewayGroup_Nestview"
                },
                "fs_quota_tree": {
                    "$ref": "#/definitions/FSQuotaTree_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "mapping_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "recycled": {
                    "type": "boolean"
                },
                "security": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FSSMBShareACL": {
            "description": "FSSMBShareACL defines model of fs smb share ACL",
            "type": "object",
            "title": "FSSMBShareACL",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "fs_smb_share": {
                    "$ref": "#/definitions/FSSMBShare_Nestview"
                },
                "fs_user": {
                    "$ref": "#/definitions/FSUser_Nestview"
                },
                "fs_user_group": {
                    "$ref": "#/definitions/FSUserGroup_Nestview"
                },
                "fs_user_group_name": {
                    "type": "string"
                },
                "fs_user_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FSSMBShareACLReq": {
            "type": "object",
            "title": "FSSMBShareACLReq",
            "properties": {
                "fs_user_group_id": {
                    "description": "id of user group",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_user_group_name": {
                    "description": "id of user group",
                    "type": "string"
                },
                "fs_user_id": {
                    "description": "id of user",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_user_name": {
                    "description": "id of user",
                    "type": "string"
                },
                "id": {
                    "description": "id of user group",
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "description": "readonly or readwrite access",
                    "type": "string"
                },
                "type": {
                    "description": "type of share acl",
                    "type": "string"
                }
            }
        },
        "FSSMBShareACLsResp": {
            "type": "object",
            "title": "FSSMBShareACLsResp",
            "required": [
                "fs_smb_share_acls"
            ],
            "properties": {
                "fs_smb_share_acls": {
                    "description": "file storage folder share acls",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSSMBShareACL"
                    }
                }
            }
        },
        "FSSMBShareAddACLsReq": {
            "type": "object",
            "title": "FSSMBShareAddACLsReq",
            "required": [
                "fs_smb_share"
            ],
            "properties": {
                "fs_smb_share": {
                    "$ref": "#/definitions/FSSMBShareAddACLsReq_Share"
                }
            }
        },
        "FSSMBShareAddACLsReq_Share": {
            "type": "object",
            "title": "FSSMBShareAddACLsReq_Share",
            "required": [
                "fs_smb_share_acls"
            ],
            "properties": {
                "fs_smb_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSSMBShareACLReq"
                    }
                }
            }
        },
        "FSSMBShareCreateReq": {
            "type": "object",
            "title": "FSSMBShareCreateReq",
            "required": [
                "fs_smb_share"
            ],
            "properties": {
                "fs_smb_share": {
                    "$ref": "#/definitions/FSSMBShareCreateReq_Share"
                }
            }
        },
        "FSSMBShareCreateReq_Share": {
            "type": "object",
            "title": "FSSMBShareCreateReq_Share",
            "required": [
                "fs_folder_id",
                "fs_gateway_group_id"
            ],
            "properties": {
                "acl_inherited": {
                    "description": "default acl status",
                    "type": "boolean"
                },
                "case_sensitive": {
                    "description": "case sensitive",
                    "type": "boolean"
                },
                "fs_folder_id": {
                    "description": "folder id",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_gateway_group_id": {
                    "description": "gateway group id",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_quota_tree_id": {
                    "description": "quota tree id",
                    "type": "integer",
                    "format": "int64"
                },
                "fs_smb_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSSMBShareACLReq"
                    }
                },
                "name": {
                    "description": "name of share",
                    "type": "string"
                },
                "recycled": {
                    "description": "recycle status",
                    "type": "boolean"
                }
            }
        },
        "FSSMBShareRemoveACLsReq": {
            "type": "object",
            "title": "FSSMBShareRemoveACLsReq",
            "required": [
                "fs_smb_share"
            ],
            "properties": {
                "fs_smb_share": {
                    "$ref": "#/definitions/FSSMBShareRemoveACLsReq_Share"
                }
            }
        },
        "FSSMBShareRemoveACLsReq_Share": {
            "type": "object",
            "title": "FSSMBShareRemoveACLsReq_Share",
            "required": [
                "fs_smb_share_acl_ids"
            ],
            "properties": {
                "fs_smb_share_acl_ids": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "FSSMBShareResp": {
            "type": "object",
            "title": "FSSMBShareResp",
            "required": [
                "fs_smb_share"
            ],
            "properties": {
                "fs_smb_share": {
                    "description": "fs smb share",
                    "$ref": "#/definitions/FSSMBShare"
                }
            }
        },
        "FSSMBShareUpdateACLReq": {
            "type": "object",
            "title": "FSSMBShareUpdateACLReq",
            "properties": {
                "id": {
                    "description": "id of user group",
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "description": "readonly or readwrite access",
                    "type": "string"
                }
            }
        },
        "FSSMBShareUpdateACLsReq": {
            "type": "object",
            "title": "FSSMBShareUpdateACLsReq",
            "required": [
                "fs_smb_share"
            ],
            "properties": {
                "fs_smb_share": {
                    "$ref": "#/definitions/FSSMBShareUpdateACLsReq_Share"
                }
            }
        },
        "FSSMBShareUpdateACLsReq_Share": {
            "type": "object",
            "title": "FSSMBShareUpdateACLsReq_Share",
            "properties": {
                "fs_smb_share_acls": {
                    "description": "access control array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSSMBShareUpdateACLReq"
                    }
                }
            }
        },
        "FSSMBShareUpdateReq": {
            "type": "object",
            "title": "FSSMBShareUpdateReq",
            "required": [
                "fs_smb_share"
            ],
            "properties": {
                "fs_smb_share": {
                    "$ref": "#/definitions/FSSMBShareUpdateReq_Share"
                }
            }
        },
        "FSSMBShareUpdateReq_Share": {
            "type": "object",
            "title": "FSSMBShareUpdateReq_Share",
            "properties": {
                "acl_inherited": {
                    "description": "default acl status",
                    "type": "boolean"
                },
                "case_sensitive": {
                    "description": "case sensitive",
                    "type": "boolean"
                },
                "recycled": {
                    "description": "recycle status",
                    "type": "boolean"
                }
            }
        },
        "FSSMBShare_Nestview": {
            "type": "object",
            "title": "FSSMBShare_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "FSSMBSharesResp": {
            "type": "object",
            "title": "FSSMBSharesResp",
            "required": [
                "fs_smb_shares"
            ],
            "properties": {
                "fs_smb_shares": {
                    "description": "fs smb shares",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSSMBShare"
                    }
                }
            }
        },
        "FSSnapshot": {
            "description": "FSSnapshot defines model of file storage snapshot",
            "type": "object",
            "title": "FSSnapshot",
            "properties": {
                "allocated_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "block_snapshot": {
                    "$ref": "#/definitions/Snapshot_Nestview"
                },
                "clone_folder_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "creator": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "formatted": {
                    "type": "boolean"
                },
                "fs_folder": {
                    "$ref": "#/definitions/FSFolder_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FSSnapshotCreateReq": {
            "type": "object",
            "title": "FSSnapshotCreateReq",
            "required": [
                "fs_snapshot"
            ],
            "properties": {
                "fs_snapshot": {
                    "$ref": "#/definitions/FSSnapshotCreateReq_Snapshot"
                }
            }
        },
        "FSSnapshotCreateReq_Snapshot": {
            "type": "object",
            "title": "FSSnapshotCreateReq_Snapshot",
            "required": [
                "name",
                "fs_folder_id"
            ],
            "properties": {
                "description": {
                    "description": "description of file storage snapshot",
                    "type": "string"
                },
                "fs_folder_id": {
                    "description": "file storage folder id",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name of snapshot",
                    "type": "string"
                }
            }
        },
        "FSSnapshotResp": {
            "type": "object",
            "title": "FSSnapshotResp",
            "required": [
                "fs_snapshot"
            ],
            "properties": {
                "fs_snapshot": {
                    "description": "file storage snapshot",
                    "$ref": "#/definitions/FSSnapshot"
                }
            }
        },
        "FSSnapshotUpdateReq": {
            "type": "object",
            "title": "FSSnapshotUpdateReq",
            "required": [
                "fs_snapshot"
            ],
            "properties": {
                "fs_snapshot": {
                    "$ref": "#/definitions/FSSnapshotUpdateReq_Snapshot"
                }
            }
        },
        "FSSnapshotUpdateReq_Snapshot": {
            "type": "object",
            "title": "FSSnapshotUpdateReq_Snapshot",
            "properties": {
                "description": {
                    "description": "description of file storage snapshot",
                    "type": "string"
                },
                "name": {
                    "description": "name of snapshot",
                    "type": "string"
                }
            }
        },
        "FSSnapshot_Nestview": {
            "type": "object",
            "title": "FSSnapshot_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "FSSnapshotsResp": {
            "type": "object",
            "title": "FSSnapshotsResp",
            "required": [
                "fs_snapshots"
            ],
            "properties": {
                "fs_snapshots": {
                    "description": "file storage snapshots",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSSnapshot"
                    }
                }
            }
        },
        "FSUser": {
            "description": "FSUser defines model of file storage user\n+X:model:generate;order_by=-ID;with_detailed +X:benchmark:",
            "type": "object",
            "title": "FSUser",
            "properties": {
                "bucket_limit": {
                    "type": "integer",
                    "format": "int64"
                },
                "bucket_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "bucket_parent_path": {
                    "$ref": "#/definitions/DfsPath_Nestview"
                },
                "bucket_permission": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fs_user_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "fs_user_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSUserGroup_Nestview"
                    }
                },
                "gateway_group": {
                    "$ref": "#/definitions/DfsGatewayGroup"
                },
                "hdfs_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "policy_filter_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "primary_group": {
                    "$ref": "#/definitions/FSUserGroup_Nestview"
                },
                "quota_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_enabled": {
                    "description": "dfs s3 support",
                    "type": "boolean"
                },
                "s3_status": {
                    "description": "indicate that s3 service is ok or not",
                    "type": "string"
                },
                "share_nums": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "version": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSUserCreateReq": {
            "type": "object",
            "title": "FSUserCreateReq",
            "required": [
                "fs_user"
            ],
            "properties": {
                "fs_user": {
                    "$ref": "#/definitions/FSUserCreateReq_User"
                }
            }
        },
        "FSUserCreateReq_User": {
            "type": "object",
            "title": "FSUserCreateReq_User",
            "required": [
                "name",
                "password"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/s3Req"
                },
                {
                    "properties": {
                        "email": {
                            "description": "email of file storage user",
                            "type": "string"
                        },
                        "name": {
                            "description": "name of file storage user",
                            "type": "string"
                        },
                        "password": {
                            "description": "password of file storage user",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "FSUserGroup": {
            "description": "FSUserGroup defines model of file storage user group",
            "type": "object",
            "title": "FSUserGroup",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "fs_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSUser_Nestview"
                    }
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "hdfs_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "policy_filter_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "quota_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "share_nums": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FSUserGroupAddUsersReq": {
            "type": "object",
            "title": "FSUserGroupAddUsersReq",
            "required": [
                "fs_user_group"
            ],
            "properties": {
                "fs_user_group": {
                    "$ref": "#/definitions/FSUserGroupAddUsersReq_UserGroup"
                }
            }
        },
        "FSUserGroupAddUsersReq_UserGroup": {
            "type": "object",
            "title": "FSUserGroupAddUsersReq_UserGroup",
            "properties": {
                "fs_user_ids": {
                    "description": "ids of users, which are required when type is smb or ftp",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "FSUserGroupCreateReq": {
            "type": "object",
            "title": "FSUserGroupCreateReq",
            "required": [
                "fs_user_group"
            ],
            "properties": {
                "fs_user_group": {
                    "$ref": "#/definitions/FSUserGroupCreateReq_UserGroup"
                }
            }
        },
        "FSUserGroupCreateReq_UserGroup": {
            "type": "object",
            "title": "FSUserGroupCreateReq_UserGroup",
            "required": [
                "name"
            ],
            "properties": {
                "fs_user_ids": {
                    "description": "ids of users, which are required when type is smb or ftp",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "name": {
                    "description": "name of user group",
                    "type": "string"
                }
            }
        },
        "FSUserGroupRemoveUsersReq": {
            "type": "object",
            "title": "FSUserGroupRemoveUsersReq",
            "required": [
                "fs_user_group"
            ],
            "properties": {
                "fs_user_group": {
                    "$ref": "#/definitions/FSUserGroupRemoveUsersReq_UserGroup"
                }
            }
        },
        "FSUserGroupRemoveUsersReq_UserGroup": {
            "type": "object",
            "title": "FSUserGroupRemoveUsersReq_UserGroup",
            "properties": {
                "fs_user_ids": {
                    "description": "ids of users, which are required when type is smb or ftp",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "FSUserGroupResp": {
            "type": "object",
            "title": "FSUserGroupResp",
            "required": [
                "fs_user_group"
            ],
            "properties": {
                "fs_user_group": {
                    "description": "file storage user group",
                    "$ref": "#/definitions/FSUserGroup"
                }
            }
        },
        "FSUserGroupUpdateReq": {
            "type": "object",
            "title": "FSUserGroupUpdateReq",
            "required": [
                "fs_user_group"
            ],
            "properties": {
                "fs_user_group": {
                    "$ref": "#/definitions/FSUserGroupUpdateReq_UserGroup"
                }
            }
        },
        "FSUserGroupUpdateReq_UserGroup": {
            "type": "object",
            "title": "FSUserGroupUpdateReq_UserGroup",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name of user group",
                    "type": "string"
                }
            }
        },
        "FSUserGroup_Nestview": {
            "type": "object",
            "title": "FSUserGroup_Nestview",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "FSUserGroupsResp": {
            "type": "object",
            "title": "FSUserGroupsResp",
            "required": [
                "fs_user_groups"
            ],
            "properties": {
                "fs_user_groups": {
                    "description": "file storage user groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSUserGroup"
                    }
                }
            }
        },
        "FSUserResp": {
            "type": "object",
            "title": "FSUserResp",
            "required": [
                "fs_user"
            ],
            "properties": {
                "fs_user": {
                    "description": "file storage user",
                    "$ref": "#/definitions/FSUser"
                }
            }
        },
        "FSUserUpdateReq": {
            "type": "object",
            "title": "FSUserUpdateReq",
            "required": [
                "fs_user"
            ],
            "properties": {
                "fs_user": {
                    "$ref": "#/definitions/FSUserUpdateReq_User"
                }
            }
        },
        "FSUserUpdateReq_User": {
            "type": "object",
            "title": "FSUserUpdateReq_User",
            "allOf": [
                {
                    "$ref": "#/definitions/s3Req"
                },
                {
                    "properties": {
                        "email": {
                            "description": "email of user",
                            "type": "string"
                        },
                        "name": {
                            "description": "name of user (deprecated, fs user name cannot be changed)",
                            "type": "string"
                        },
                        "password": {
                            "description": "password of user",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "FSUserVerifyReq": {
            "type": "object",
            "title": "FSUserVerifyReq",
            "required": [
                "fs_user"
            ],
            "properties": {
                "fs_user": {
                    "$ref": "#/definitions/FSUserVerifyReq_User"
                }
            }
        },
        "FSUserVerifyReq_User": {
            "type": "object",
            "title": "FSUserVerifyReq_User",
            "required": [
                "name"
            ],
            "properties": {
                "encrypted_password": {
                    "description": "encrypted password for user",
                    "type": "string"
                },
                "name": {
                    "description": "user name or email for user",
                    "type": "string"
                },
                "password": {
                    "description": "password for user",
                    "type": "string"
                },
                "rsa_key_id": {
                    "description": "rsa key id",
                    "type": "string"
                }
            }
        },
        "FSUser_Nestview": {
            "type": "object",
            "title": "FSUser_Nestview",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "FSUsersResp": {
            "type": "object",
            "title": "FSUsersResp",
            "required": [
                "fs_users"
            ],
            "properties": {
                "fs_users": {
                    "description": "file storage users",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FSUser"
                    }
                }
            }
        },
        "FilesPredictionPoint": {
            "description": "FilesPredictionPoint is a point in a files prediction graph",
            "type": "object",
            "title": "FilesPredictionPoint",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "used_files": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Host": {
            "description": "Host contains information of a host and it's stats.",
            "type": "object",
            "title": "Host",
            "required": [
                "admin_ip"
            ],
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "admin_host_group": {
                    "description": "admin host group of host",
                    "$ref": "#/definitions/AdminHostGroup_Nestview"
                },
                "admin_ip": {
                    "type": "string"
                },
                "clock_diff": {
                    "description": "clock diff in milliseconds with primary host",
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "cores": {
                    "type": "integer",
                    "format": "int64"
                },
                "cpu_arch": {
                    "type": "string"
                },
                "cpu_model": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "disk_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "enclosures": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "fcports": {
                    "description": "fc ports of host",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FCPort"
                    }
                },
                "gateway_ips": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_master_db": {
                    "type": "boolean"
                },
                "kvm_status": {
                    "$ref": "#/definitions/HostKVMStatus"
                },
                "memory_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numa_nodes": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "osp_cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "osp_cluster_ip": {
                    "type": "string"
                },
                "osp_gateway_ips": {
                    "type": "string"
                },
                "osp_placement_node": {
                    "$ref": "#/definitions/PlacementNode"
                },
                "osp_zone_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "placement_node": {
                    "$ref": "#/definitions/PlacementNode"
                },
                "private_ip": {
                    "type": "string"
                },
                "protection_domain": {
                    "description": "protection domain of host",
                    "$ref": "#/definitions/ProtectionDomain_Nestview"
                },
                "public_ips": {
                    "type": "string"
                },
                "rack": {
                    "type": "string"
                },
                "roles": {
                    "type": "string"
                },
                "root_disk": {
                    "$ref": "#/definitions/Disk_Nestview"
                },
                "serial": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "up": {
                    "type": "boolean"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "vendor": {
                    "type": "string"
                }
            }
        },
        "HostCreateReq": {
            "type": "object",
            "title": "HostCreateReq",
            "properties": {
                "host": {
                    "$ref": "#/definitions/HostCreateReq_Host"
                }
            }
        },
        "HostCreateReq_Host": {
            "type": "object",
            "title": "HostCreateReq_Host",
            "required": [
                "cluster_id",
                "admin_ip"
            ],
            "properties": {
                "admin_ip": {
                    "description": "admin ip",
                    "type": "string"
                },
                "cluster_id": {
                    "description": "cluster id",
                    "type": "integer",
                    "format": "int64"
                },
                "description": {
                    "description": "host description",
                    "type": "string"
                },
                "gateway_ips": {
                    "description": "gateway ips for s3",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "meta_device": {
                    "description": "meta device for docker",
                    "type": "string"
                },
                "osp_cluster_id": {
                    "description": "osp cluster id",
                    "type": "integer",
                    "format": "int64"
                },
                "osp_cluster_ip": {
                    "description": "osp cluster ip",
                    "type": "string"
                },
                "osp_gateway_ips": {
                    "description": "osp gateway ips",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "private_ip": {
                    "description": "cluster private ip for internal data access",
                    "type": "string"
                },
                "protection_domain_id": {
                    "description": "deprecated",
                    "type": "integer",
                    "format": "int64"
                },
                "public_ip": {
                    "description": "public ip for outside data access",
                    "type": "string"
                },
                "roles": {
                    "description": "host roles:\nadmin,monitor,block_storage_gateway,file_storage_gateway,s3_gateway,nfs_gateway",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "storage server or storage client",
                    "type": "string"
                }
            }
        },
        "HostEncSpec": {
            "description": "HostEncSpec defines host enclosure specification",
            "type": "object",
            "title": "HostEncSpec",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "enclosures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Enclosure"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "model": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "vendor": {
                    "type": "string"
                }
            }
        },
        "HostEncSpecCreateReq": {
            "type": "object",
            "title": "HostEncSpecCreateReq",
            "properties": {
                "host_enc_spec": {
                    "$ref": "#/definitions/HostEncSpecCreateReq_HostEncSpec"
                }
            }
        },
        "HostEncSpecCreateReq_HostEncSpec": {
            "type": "object",
            "title": "HostEncSpecCreateReq_HostEncSpec",
            "required": [
                "model",
                "vendor",
                "enclosures"
            ],
            "properties": {
                "enclosures": {
                    "description": "host enclosures",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Enclosure"
                    }
                },
                "model": {
                    "description": "host model",
                    "type": "string"
                },
                "vendor": {
                    "description": "host vendor",
                    "type": "string"
                }
            }
        },
        "HostEncSpecResp": {
            "type": "object",
            "title": "HostEncSpecResp",
            "required": [
                "host_enc_spec"
            ],
            "properties": {
                "host_enc_spec": {
                    "description": "host enclosure spec",
                    "$ref": "#/definitions/HostEncSpec"
                }
            }
        },
        "HostEncSpecsResp": {
            "type": "object",
            "title": "HostEncSpecsResp",
            "required": [
                "host_enc_specs"
            ],
            "properties": {
                "host_enc_specs": {
                    "description": "host enclosure specs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HostEncSpec"
                    }
                }
            }
        },
        "HostInfo": {
            "type": "object",
            "title": "HostInfo",
            "properties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "HostInfoResp": {
            "type": "object",
            "title": "HostInfoResp",
            "required": [
                "host_info"
            ],
            "properties": {
                "host_info": {
                    "description": "host info",
                    "$ref": "#/definitions/HostInfo"
                }
            }
        },
        "HostInitialization": {
            "description": "HostInitialization is the model of host initialization +X:model:etcd_lock;",
            "type": "object",
            "title": "HostInitialization",
            "properties": {
                "admin_ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "disable_firewalld": {
                    "type": "boolean"
                },
                "hostname_prefix": {
                    "type": "string"
                },
                "hostname_suffix_len": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "set_hostname": {
                    "type": "boolean"
                },
                "ssh_user": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "HostInitializationReq": {
            "type": "object",
            "title": "HostInitializationReq",
            "properties": {
                "host_initialization": {
                    "$ref": "#/definitions/HostInitializationReq_Initialization"
                }
            }
        },
        "HostInitializationReq_Initialization": {
            "type": "object",
            "title": "HostInitializationReq_Initialization",
            "required": [
                "admin_ips",
                "ssh_user"
            ],
            "properties": {
                "admin_ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disable_firewalld": {
                    "type": "boolean"
                },
                "hostname_prefix": {
                    "type": "string"
                },
                "hostname_suffix_len": {
                    "type": "integer",
                    "format": "int64"
                },
                "set_hostname": {
                    "type": "boolean"
                },
                "ssh_password": {
                    "type": "string"
                },
                "ssh_user": {
                    "type": "string"
                }
            }
        },
        "HostInitializationResp": {
            "type": "object",
            "title": "HostInitializationResp",
            "properties": {
                "host_initialization": {
                    "$ref": "#/definitions/HostInitialization"
                }
            }
        },
        "HostKVMStatus": {
            "description": "HostKVMStatus represent KVM status",
            "type": "integer",
            "format": "int64",
            "title": "HostKVMStatus"
        },
        "HostMaintainValidator": {
            "description": "HostMaintainValidator defines model of host maintain validatior\n+X:model:generate;check_get +X:benchmark:",
            "type": "object",
            "title": "HostMaintainValidator",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "host_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "report": {
                    "type": "object"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "HostMaintainValidatorCreateReq": {
            "type": "object",
            "title": "HostMaintainValidatorCreateReq",
            "properties": {
                "host_maintain_validator": {
                    "$ref": "#/definitions/HostMaintainValidatorCreateReq_Validator"
                }
            }
        },
        "HostMaintainValidatorCreateReq_Validator": {
            "type": "object",
            "title": "HostMaintainValidatorCreateReq_Validator",
            "properties": {
                "host_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "HostMaintainValidatorResp": {
            "type": "object",
            "title": "HostMaintainValidatorResp",
            "properties": {
                "host_maintain_validator": {
                    "$ref": "#/definitions/HostMaintainValidator"
                }
            }
        },
        "HostRecord": {
            "description": "HostRecord combine Host and HostStatus to let API comfortable",
            "type": "object",
            "title": "HostRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/Host"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HostStat"
                            }
                        }
                    }
                }
            ]
        },
        "HostResp": {
            "type": "object",
            "title": "HostResp",
            "required": [
                "host"
            ],
            "properties": {
                "host": {
                    "description": "host",
                    "$ref": "#/definitions/HostRecord"
                }
            }
        },
        "HostSamplesResp": {
            "type": "object",
            "title": "HostSamplesResp",
            "required": [
                "host_samples"
            ],
            "properties": {
                "host_samples": {
                    "description": "host samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HostStat"
                    }
                }
            }
        },
        "HostStat": {
            "description": "HostStat define the host statistics",
            "type": "object",
            "title": "HostStat",
            "properties": {
                "context_switch_ps": {
                    "type": "number",
                    "format": "double"
                },
                "cpu_util": {
                    "type": "number",
                    "format": "double"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "interrupts_ps": {
                    "type": "number",
                    "format": "double"
                },
                "load15min": {
                    "type": "number",
                    "format": "double"
                },
                "load1min": {
                    "type": "number",
                    "format": "double"
                },
                "load5min": {
                    "type": "number",
                    "format": "double"
                },
                "mem_usage_percent": {
                    "type": "number",
                    "format": "double"
                },
                "meta_docker_used_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "meta_elasticsearch_used_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "meta_etcd_used_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "meta_log_used_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "meta_mon_used_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "meta_postgres_used_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "meta_prometheus_used_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "network_drop_pps": {
                    "type": "number",
                    "format": "double"
                },
                "network_drop_ratio": {
                    "type": "number",
                    "format": "double"
                },
                "network_error_pps": {
                    "type": "number",
                    "format": "double"
                },
                "network_error_ratio": {
                    "type": "number",
                    "format": "double"
                },
                "network_rx_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "network_rx_drop_pps": {
                    "type": "number",
                    "format": "double"
                },
                "network_rx_drop_ratio": {
                    "type": "number",
                    "format": "double"
                },
                "network_rx_error_pps": {
                    "type": "number",
                    "format": "double"
                },
                "network_rx_error_ratio": {
                    "type": "number",
                    "format": "double"
                },
                "network_rx_pps": {
                    "type": "number",
                    "format": "double"
                },
                "network_tx_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "network_tx_drop_pps": {
                    "type": "number",
                    "format": "double"
                },
                "network_tx_drop_ratio": {
                    "type": "number",
                    "format": "double"
                },
                "network_tx_error_pps": {
                    "type": "number",
                    "format": "double"
                },
                "network_tx_error_ratio": {
                    "type": "number",
                    "format": "double"
                },
                "network_tx_pps": {
                    "type": "number",
                    "format": "double"
                },
                "page_paging_ps": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "HostUpdateReq": {
            "type": "object",
            "title": "HostUpdateReq",
            "required": [
                "host"
            ],
            "properties": {
                "host": {
                    "$ref": "#/definitions/HostUpdateReq_Host"
                }
            }
        },
        "HostUpdateReq_Host": {
            "type": "object",
            "title": "HostUpdateReq_Host",
            "properties": {
                "description": {
                    "type": "string"
                },
                "gateway_ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "HostValidator": {
            "description": "HostValidator defines the validator for host",
            "type": "object",
            "title": "HostValidator",
            "properties": {
                "admin_ip": {
                    "type": "string"
                },
                "check_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "gateway_ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "host": {
                    "$ref": "#/definitions/Host"
                },
                "host_roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "host_type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "osp_cluster_ip": {
                    "type": "string"
                },
                "osp_gateway_ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "private_ip": {
                    "type": "string"
                },
                "public_ip": {
                    "type": "string"
                },
                "report": {
                    "type": "object"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "HostValidatorCreateReq": {
            "type": "object",
            "title": "HostValidatorCreateReq",
            "properties": {
                "host_validator": {
                    "$ref": "#/definitions/HostValidatorCreateReq_Validator"
                }
            }
        },
        "HostValidatorCreateReq_Validator": {
            "type": "object",
            "title": "HostValidatorCreateReq_Validator",
            "required": [
                "admin_ip"
            ],
            "properties": {
                "admin_ip": {
                    "type": "string"
                },
                "check_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cluster_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "gateway_ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "host_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "host_roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "host_type": {
                    "type": "string"
                },
                "osp_cluster_ip": {
                    "type": "string"
                },
                "osp_gateway_ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "private_ip": {
                    "type": "string"
                },
                "public_ip": {
                    "type": "string"
                }
            }
        },
        "HostValidatorResp": {
            "type": "object",
            "title": "HostValidatorResp",
            "properties": {
                "host_validator": {
                    "$ref": "#/definitions/HostValidator"
                }
            }
        },
        "Host_Nestview": {
            "type": "object",
            "title": "Host_Nestview",
            "required": [
                "admin_ip"
            ],
            "properties": {
                "admin_ip": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "numa_nodes": {
                    "type": "string"
                },
                "up": {
                    "type": "boolean"
                }
            }
        },
        "HostsResp": {
            "type": "object",
            "title": "HostsResp",
            "required": [
                "hosts"
            ],
            "properties": {
                "hosts": {
                    "description": "hosts",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HostRecord"
                    }
                }
            }
        },
        "IdentityPlatform": {
            "description": "IdentityPlatform defines different platforms for auth",
            "type": "object",
            "title": "IdentityPlatform",
            "properties": {
                "create": {
                    "description": "time of creating identity platform",
                    "type": "string",
                    "format": "date-time"
                },
                "enabled": {
                    "description": "enable the identity platform or not",
                    "type": "boolean"
                },
                "extra": {
                    "type": "object"
                },
                "failure_num": {
                    "description": "num of failed authorization",
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "description": "id of identity platform",
                    "type": "integer",
                    "format": "int64"
                },
                "key": {
                    "description": "secret key of identity platform",
                    "type": "string"
                },
                "login_page_enabled": {
                    "type": "boolean"
                },
                "logout_url": {
                    "type": "string"
                },
                "name": {
                    "description": "name of identity platform",
                    "type": "string"
                },
                "success_num": {
                    "description": "num of successful authorization",
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "description": "type of identity platform",
                    "type": "string"
                },
                "update": {
                    "description": "time of updating identity platform",
                    "type": "string",
                    "format": "date-time"
                },
                "url": {
                    "description": "url of identity platform",
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vendor": {
                    "description": "vendor for type",
                    "type": "string"
                }
            }
        },
        "IdentityPlatformCreateReq": {
            "type": "object",
            "title": "IdentityPlatformCreateReq",
            "properties": {
                "identity_platform": {
                    "$ref": "#/definitions/IdentityPlatformCreateReq_Platform"
                }
            }
        },
        "IdentityPlatformCreateReq_Platform": {
            "type": "object",
            "title": "IdentityPlatformCreateReq_Platform",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "extra": {
                    "$ref": "#/definitions/IdentityPlatformExtra"
                },
                "login_page_enabled": {
                    "type": "boolean"
                },
                "name": {
                    "description": "name of identity platform",
                    "type": "string"
                },
                "type": {
                    "description": "type of identity platform",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "vendor": {
                    "type": "string"
                }
            }
        },
        "IdentityPlatformExtra": {
            "type": "object",
            "title": "IdentityPlatformExtra",
            "properties": {
                "callback_url": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "client_secret": {
                    "type": "string"
                },
                "insecure_skip_verify": {
                    "type": "boolean"
                },
                "logout_redirect_url": {
                    "type": "string"
                },
                "logout_url": {
                    "type": "string"
                },
                "user_keys": {
                    "$ref": "#/definitions/IdentityPlatformExtra_UserKeys"
                },
                "userinfo_url": {
                    "type": "string"
                },
                "verified_url": {
                    "type": "string"
                }
            }
        },
        "IdentityPlatformExtra_UserKeys": {
            "type": "object",
            "title": "IdentityPlatformExtra_UserKeys",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                },
                "user_roles": {
                    "type": "string"
                }
            }
        },
        "IdentityPlatformResp": {
            "type": "object",
            "title": "IdentityPlatformResp",
            "properties": {
                "identity_platform": {
                    "description": "identity platform",
                    "$ref": "#/definitions/IdentityPlatform"
                }
            }
        },
        "IdentityPlatformUpdateReq": {
            "type": "object",
            "title": "IdentityPlatformUpdateReq",
            "properties": {
                "identity_platform": {
                    "$ref": "#/definitions/IdentityPlatformUpdateReq_Platform"
                }
            }
        },
        "IdentityPlatformUpdateReq_Platform": {
            "type": "object",
            "title": "IdentityPlatformUpdateReq_Platform",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "extra": {
                    "$ref": "#/definitions/IdentityPlatformExtra"
                },
                "login_page_enabled": {
                    "type": "boolean"
                },
                "name": {
                    "description": "name of identity platform",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "IdentityPlatform_Nestview": {
            "type": "object",
            "title": "IdentityPlatform_Nestview",
            "properties": {
                "id": {
                    "description": "id of identity platform",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name of identity platform",
                    "type": "string"
                }
            }
        },
        "IdentityPlatformsResp": {
            "type": "object",
            "title": "IdentityPlatformsResp",
            "properties": {
                "identity_platforms": {
                    "description": "identity platforms",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IdentityPlatform"
                    }
                }
            }
        },
        "IdentityProvidersResp": {
            "type": "object",
            "title": "IdentityProvidersResp",
            "properties": {
                "providers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/identityProvidersRespDetail"
                    }
                }
            }
        },
        "JSONTextField": {
            "description": "JSONTextField defines field represented as JSON in API, while stored as string\nin db",
            "type": "string",
            "title": "JSONTextField"
        },
        "License": {
            "description": "License is used to manage backend license",
            "type": "object",
            "title": "License",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "cluster_type": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "customer": {
                    "type": "string"
                },
                "expired_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductFunction"
                    }
                },
                "fs_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "limits": {
                    "$ref": "#/definitions/ProductLimits"
                },
                "minor_version": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "name_cn": {
                    "type": "string"
                },
                "product_info": {
                    "$ref": "#/definitions/ProductInfo"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StorageProtocol"
                    }
                },
                "registered": {
                    "type": "boolean"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductService"
                    }
                },
                "signed_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/Type"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "description": "load from license info",
                    "type": "string"
                }
            }
        },
        "LicenseResp": {
            "type": "object",
            "title": "LicenseResp",
            "required": [
                "license"
            ],
            "properties": {
                "license": {
                    "description": "license",
                    "$ref": "#/definitions/License"
                }
            }
        },
        "LicenseSummary": {
            "type": "object",
            "title": "LicenseSummary",
            "required": [
                "product_info",
                "features",
                "protocols",
                "expired_features",
                "expired_protocols",
                "limits",
                "used_quota",
                "capacity_base",
                "osp_capacity_base"
            ],
            "properties": {
                "capacity_base": {
                    "type": "integer",
                    "format": "int64"
                },
                "expired_features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductFunction"
                    }
                },
                "expired_protocols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StorageProtocol"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductFunction"
                    }
                },
                "limits": {
                    "$ref": "#/definitions/ProductLimits"
                },
                "osp_capacity_base": {
                    "type": "integer",
                    "format": "int64"
                },
                "product_info": {
                    "$ref": "#/definitions/ProductInfo"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StorageProtocol"
                    }
                },
                "used_quota": {
                    "$ref": "#/definitions/UsedQuota"
                }
            }
        },
        "LicenseSummaryResp": {
            "type": "object",
            "title": "LicenseSummaryResp",
            "required": [
                "summary"
            ],
            "properties": {
                "summary": {
                    "$ref": "#/definitions/LicenseSummary"
                }
            }
        },
        "LicensesResp": {
            "type": "object",
            "title": "LicensesResp",
            "required": [
                "licenses"
            ],
            "properties": {
                "licenses": {
                    "description": "licenses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/License"
                    }
                }
            }
        },
        "LifecycleBase": {
            "description": "LifecycleBase define base lc info",
            "type": "object",
            "title": "LifecycleBase",
            "properties": {
                "days": {
                    "type": "integer",
                    "format": "int64"
                },
                "start_at": {
                    "type": "string"
                },
                "stop_at": {
                    "type": "string"
                }
            }
        },
        "LifecycleExpiration": {
            "description": "LifecycleExpiration is the details of expiration of LifecycleRule",
            "type": "object",
            "title": "LifecycleExpiration",
            "allOf": [
                {
                    "$ref": "#/definitions/LifecycleBase"
                },
                {
                    "properties": {
                        "delete_type": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "LifecycleRule": {
            "description": "LifecycleRule is the details of object storage lifecycle rule",
            "type": "object",
            "title": "LifecycleRule",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "expiration": {
                    "$ref": "#/definitions/LifecycleExpiration"
                },
                "name": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "transitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LifecycleTransition"
                    }
                }
            }
        },
        "LifecycleTransition": {
            "description": "LifecycleTransition is the details of transition of LifecycleRule",
            "type": "object",
            "title": "LifecycleTransition",
            "required": [
                "storage_class",
                "type"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/LifecycleBase"
                },
                {
                    "properties": {
                        "storage_class": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "LocalGroupInfo": {
            "type": "object",
            "title": "LocalGroupInfo",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "LocalUserInfo": {
            "type": "object",
            "title": "LocalUserInfo",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "LoginSsoTypesResp": {
            "type": "object",
            "title": "LoginSsoTypesResp",
            "properties": {
                "sso_types": {
                    "description": "SSO Protocol Types",
                    "$ref": "#/definitions/SSOTypes"
                }
            }
        },
        "Lun": {
            "description": "Lun defines lun id +X:model:generate +X:benchmark:",
            "type": "object",
            "title": "Lun",
            "properties": {
                "access_path": {
                    "$ref": "#/definitions/AccessPath_Nestview"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "lun_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "volume": {
                    "$ref": "#/definitions/Volume_Nestview"
                }
            }
        },
        "LunInfo": {
            "description": "LunInfo records lun info",
            "type": "object",
            "title": "LunInfo",
            "properties": {
                "alua_value": {
                    "type": "integer",
                    "format": "int32"
                },
                "dc_name": {
                    "type": "string"
                },
                "lun_cfg": {
                    "type": "string"
                },
                "lun_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "lun_name": {
                    "type": "string"
                },
                "lun_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "lun_sn": {
                    "type": "string"
                }
            }
        },
        "LunResp": {
            "type": "object",
            "title": "LunResp",
            "required": [
                "lun"
            ],
            "properties": {
                "lun": {
                    "description": "lun",
                    "$ref": "#/definitions/Lun"
                }
            }
        },
        "Lun_Nestview": {
            "type": "object",
            "title": "Lun_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "lun_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "LunsResp": {
            "type": "object",
            "title": "LunsResp",
            "required": [
                "luns"
            ],
            "properties": {
                "luns": {
                    "description": "luns",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Lun"
                    }
                }
            }
        },
        "MappingGroup": {
            "description": "MappingGroup defines the mapping group of volumes and client groups",
            "type": "object",
            "title": "MappingGroup",
            "properties": {
                "access_path": {
                    "$ref": "#/definitions/AccessPath_Nestview"
                },
                "client_group": {
                    "$ref": "#/definitions/ClientGroup_Nestview"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "MappingGroupAddVolumesReq": {
            "type": "object",
            "title": "MappingGroupAddVolumesReq",
            "required": [
                "block_volume_ids"
            ],
            "properties": {
                "block_volume_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "MappingGroupCreateReq": {
            "type": "object",
            "title": "MappingGroupCreateReq",
            "required": [
                "mapping_group"
            ],
            "properties": {
                "mapping_group": {
                    "$ref": "#/definitions/MappingGroupReq"
                }
            }
        },
        "MappingGroupRemoveVolumesReq": {
            "type": "object",
            "title": "MappingGroupRemoveVolumesReq",
            "required": [
                "block_volume_ids"
            ],
            "properties": {
                "block_volume_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "MappingGroupReq": {
            "type": "object",
            "title": "MappingGroupReq",
            "properties": {
                "access_path_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "block_volume_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "client_group_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "MappingGroupResp": {
            "type": "object",
            "title": "MappingGroupResp",
            "required": [
                "mapping_group"
            ],
            "properties": {
                "mapping_group": {
                    "$ref": "#/definitions/MappingGroup"
                }
            }
        },
        "MappingGroupUpdateClientGroupReq": {
            "type": "object",
            "title": "MappingGroupUpdateClientGroupReq",
            "required": [
                "client_group_id"
            ],
            "properties": {
                "client_group_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "MappingGroupUpdateReq": {
            "type": "object",
            "title": "MappingGroupUpdateReq",
            "required": [
                "mapping_group"
            ],
            "properties": {
                "mapping_group": {
                    "$ref": "#/definitions/MappingGroupUpdateReq_MappingGroup"
                }
            }
        },
        "MappingGroupUpdateReq_MappingGroup": {
            "type": "object",
            "title": "MappingGroupUpdateReq_MappingGroup",
            "properties": {
                "block_volume_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "MappingGroupsResp": {
            "type": "object",
            "title": "MappingGroupsResp",
            "required": [
                "mapping_groups"
            ],
            "properties": {
                "mapping_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MappingGroup"
                    }
                }
            }
        },
        "MatchingRule": {
            "description": "MatchingRule defines matching rule of object",
            "type": "object",
            "title": "MatchingRule",
            "properties": {
                "class_id": {
                    "type": "string"
                },
                "class_name": {
                    "type": "string"
                },
                "matching_condition": {
                    "$ref": "#/definitions/MatchingRule_MatchCondition"
                },
                "prior": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "MatchingRule_MatchCondition": {
            "type": "object",
            "title": "MatchingRule_MatchCondition",
            "properties": {
                "cond_operator": {
                    "type": "string"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Condition"
                    }
                }
            }
        },
        "MenuResp": {
            "type": "object",
            "title": "MenuResp",
            "required": [
                "menu"
            ],
            "properties": {
                "menu": {
                    "$ref": "#/definitions/JSONTextField"
                }
            }
        },
        "MetadataCluster": {
            "description": "MetadataCluster contains information of a metadata cluster and it's stats.",
            "type": "object",
            "title": "MetadataCluster",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "cluster_name": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dfs_rootfs": {
                    "$ref": "#/definitions/DfsRootfs_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "primary": {
                    "description": "primary xmds, its stat stands for cluster stat",
                    "$ref": "#/definitions/MetadataService_Nestview"
                },
                "primary_placement_node": {
                    "$ref": "#/definitions/PlacementNode_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "stretched": {
                    "type": "boolean"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "MetadataClusterAddServicesReq": {
            "type": "object",
            "title": "MetadataClusterAddServicesReq",
            "properties": {
                "metadata_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MetadataClusterAddServicesReq_MetadataServices_Elt"
                    }
                }
            }
        },
        "MetadataClusterAddServicesReq_MetadataServices_Elt": {
            "type": "object",
            "title": "MetadataClusterAddServicesReq_MetadataServices_Elt",
            "properties": {
                "disk_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "MetadataClusterCreateReq": {
            "type": "object",
            "title": "MetadataClusterCreateReq",
            "properties": {
                "metadata_cluster": {
                    "$ref": "#/definitions/MetadataClusterCreateReq_MetadataCluster"
                }
            }
        },
        "MetadataClusterCreateReq_MetadataCluster": {
            "type": "object",
            "title": "MetadataClusterCreateReq_MetadataCluster",
            "properties": {
                "metadata_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MetadataClusterCreateReq_MetadataCluster_MetadataServices_Elt"
                    }
                },
                "min_disk_in_dc": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "primary_placement_node_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "MetadataClusterCreateReq_MetadataCluster_MetadataServices_Elt": {
            "type": "object",
            "title": "MetadataClusterCreateReq_MetadataCluster_MetadataServices_Elt",
            "properties": {
                "disk_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "MetadataClusterPrediction": {
            "description": "MetadataClusterPrediction contains metadataCluster prediction data",
            "type": "object",
            "title": "MetadataClusterPrediction",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_data_kbyte_points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UsedDataKbytePrediction"
                    }
                },
                "used_kbyte_1day": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte_30days": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte_7days": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "MetadataClusterPredictionsResp": {
            "type": "object",
            "title": "MetadataClusterPredictionsResp",
            "required": [
                "metadata_cluster_predictions"
            ],
            "properties": {
                "metadata_cluster_predictions": {
                    "description": "metadata cluster predictions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MetadataClusterPrediction"
                    }
                }
            }
        },
        "MetadataClusterRecord": {
            "description": "MetadataClusterRecord contains information of a metadata cluster",
            "type": "object",
            "title": "MetadataClusterRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/MetadataCluster"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MetadataClusterStat"
                            }
                        }
                    }
                }
            ]
        },
        "MetadataClusterRemoveServicesReq": {
            "type": "object",
            "title": "MetadataClusterRemoveServicesReq",
            "properties": {
                "metadata_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MetadataClusterRemoveServicesReq_MetadataServices_Elt"
                    }
                }
            }
        },
        "MetadataClusterRemoveServicesReq_MetadataServices_Elt": {
            "type": "object",
            "title": "MetadataClusterRemoveServicesReq_MetadataServices_Elt",
            "properties": {
                "metadata_service_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "MetadataClusterResp": {
            "type": "object",
            "title": "MetadataClusterResp",
            "required": [
                "metadata_cluster"
            ],
            "properties": {
                "metadata_cluster": {
                    "$ref": "#/definitions/MetadataClusterRecord"
                }
            }
        },
        "MetadataClusterSamplesResp": {
            "type": "object",
            "title": "MetadataClusterSamplesResp",
            "required": [
                "metadata_cluster_samples"
            ],
            "properties": {
                "metadata_cluster_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MetadataClusterStat"
                    }
                }
            }
        },
        "MetadataClusterStat": {
            "description": "MetadataClusterStat defines the basic info of a metadata cluster",
            "type": "object",
            "title": "MetadataClusterStat",
            "properties": {
                "available_data_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "delete_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "delete_ops": {
                    "type": "number",
                    "format": "double"
                },
                "gc_data_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "list_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "list_ops": {
                    "type": "number",
                    "format": "double"
                },
                "num_available_inodes": {
                    "type": "integer",
                    "format": "int64"
                },
                "num_gc_inodes": {
                    "type": "integer",
                    "format": "int64"
                },
                "num_inodes": {
                    "type": "integer",
                    "format": "int64"
                },
                "num_used_inodes": {
                    "type": "integer",
                    "format": "int64"
                },
                "read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "read_ops": {
                    "description": "primary metadata service stat",
                    "type": "number",
                    "format": "double"
                },
                "recorded_data_kbyte": {
                    "description": "data kbyte used by user, different from UsedDataKbyte",
                    "type": "integer",
                    "format": "int64"
                },
                "recovery_done": {
                    "type": "integer",
                    "format": "int64"
                },
                "recovery_left_second": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_ops": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_total": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_data_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "trash_files": {
                    "type": "integer",
                    "format": "int64"
                },
                "trash_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_data_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "write_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "write_ops": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "MetadataClusterUpdatePrimaryDcReq": {
            "type": "object",
            "title": "MetadataClusterUpdatePrimaryDcReq",
            "properties": {
                "metadata_cluster": {
                    "$ref": "#/definitions/MetadataClusterUpdatePrimaryDcReq_MetadataCluster"
                }
            }
        },
        "MetadataClusterUpdatePrimaryDcReq_MetadataCluster": {
            "type": "object",
            "title": "MetadataClusterUpdatePrimaryDcReq_MetadataCluster",
            "properties": {
                "primary_placement_node_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "MetadataClusterUpdateReq": {
            "type": "object",
            "title": "MetadataClusterUpdateReq",
            "properties": {
                "metadata_cluster": {
                    "$ref": "#/definitions/MetadataClusterUpdateReq_MetadataCluster"
                }
            }
        },
        "MetadataClusterUpdateReq_MetadataCluster": {
            "type": "object",
            "title": "MetadataClusterUpdateReq_MetadataCluster",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "MetadataCluster_Nestview": {
            "type": "object",
            "title": "MetadataCluster_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "MetadataClustersResp": {
            "type": "object",
            "title": "MetadataClustersResp",
            "required": [
                "metadata_clusters"
            ],
            "properties": {
                "metadata_clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MetadataClusterRecord"
                    }
                }
            }
        },
        "MetadataService": {
            "description": "MetadataService contains information of a metadata service and it's stats.",
            "type": "object",
            "title": "MetadataService",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "complete": {
                    "type": "boolean"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "disk": {
                    "$ref": "#/definitions/Disk_Nestview"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "meta_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "metadata_cluster": {
                    "$ref": "#/definitions/MetadataCluster_Nestview"
                },
                "name": {
                    "type": "string"
                },
                "placement_node": {
                    "$ref": "#/definitions/PlacementNode_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "up": {
                    "type": "boolean"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "xmds_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "MetadataServiceRecord": {
            "description": "MetadataServiceRecord contains information of a metadata service",
            "type": "object",
            "title": "MetadataServiceRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/MetadataService"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MetadataServiceStat"
                            }
                        }
                    }
                }
            ]
        },
        "MetadataServiceResp": {
            "type": "object",
            "title": "MetadataServiceResp",
            "required": [
                "metadata_service"
            ],
            "properties": {
                "metadata_service": {
                    "$ref": "#/definitions/MetadataServiceRecord"
                }
            }
        },
        "MetadataServiceSamplesResp": {
            "type": "object",
            "title": "MetadataServiceSamplesResp",
            "required": [
                "metadata_service_samples"
            ],
            "properties": {
                "metadata_service_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MetadataServiceStat"
                    }
                }
            }
        },
        "MetadataServiceStat": {
            "description": "MetadataServiceStat defines the basic info of a metadata service",
            "type": "object",
            "title": "MetadataServiceStat",
            "properties": {
                "cpu_util": {
                    "type": "number",
                    "format": "double"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "delete_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "delete_ops": {
                    "type": "number",
                    "format": "double"
                },
                "disk": {
                    "$ref": "#/definitions/DiskStat"
                },
                "getattrs_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "list_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "list_ops": {
                    "type": "number",
                    "format": "double"
                },
                "mem_usage_percent": {
                    "type": "number",
                    "format": "double"
                },
                "op_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "open_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "read_ops": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_done": {
                    "type": "integer",
                    "format": "int64"
                },
                "recovery_left_second": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_ops": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_total": {
                    "description": "those fields are only for primary xmds",
                    "type": "integer",
                    "format": "int64"
                },
                "write_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "write_ops": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "MetadataService_Nestview": {
            "type": "object",
            "title": "MetadataService_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "MetadataServicesResp": {
            "type": "object",
            "title": "MetadataServicesResp",
            "required": [
                "metadata_services"
            ],
            "properties": {
                "metadata_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MetadataServiceRecord"
                    }
                }
            }
        },
        "MultiObjectStorageBucketsSamplesResp": {
            "type": "object",
            "title": "MultiObjectStorageBucketsSamplesResp",
            "properties": {
                "os_buckets_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageBucketSamplesElem"
                    }
                }
            }
        },
        "MultiS3LoadBalancersSamplesResp": {
            "type": "object",
            "title": "MultiS3LoadBalancersSamplesResp",
            "properties": {
                "s3_load_balancers_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/S3LoadBalancerSamplesElem"
                    }
                }
            }
        },
        "MultiVolumesSamplesResp": {
            "type": "object",
            "title": "MultiVolumesSamplesResp",
            "properties": {
                "block_volumes_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VolumeSamplesElem"
                    }
                }
            }
        },
        "NFSGateway": {
            "description": "NFSGateway contains information of a nfs gateway and it's stats.",
            "type": "object",
            "title": "NFSGateway",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "bucket_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "gateway_ip": {
                    "type": "string"
                },
                "gateway_name": {
                    "type": "string"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "mount_clients": {
                    "type": "string"
                },
                "mount_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "osp_zone_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "NFSGatewayActionReq": {
            "type": "object",
            "title": "NFSGatewayActionReq",
            "required": [
                "nfs_gateway"
            ],
            "properties": {
                "nfs_gateway": {
                    "$ref": "#/definitions/NFSGatewayActionReq_NFSGateway"
                }
            }
        },
        "NFSGatewayActionReq_NFSGateway": {
            "type": "object",
            "title": "NFSGatewayActionReq_NFSGateway",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "type": "string"
                }
            }
        },
        "NFSGatewayBucketMap": {
            "description": "NFSGatewayBucketMap defines nfs gateway bucket map",
            "type": "object",
            "title": "NFSGatewayBucketMap",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "bucket": {
                    "$ref": "#/definitions/ObjectStorageBucket_Nestview"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "key": {
                    "$ref": "#/definitions/ObjectStorageKey_Nestview"
                },
                "mount_clients": {
                    "type": "string"
                },
                "mount_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "nfs_gateway": {
                    "$ref": "#/definitions/NFSGateway_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "NFSGatewayBucketMapResp": {
            "type": "object",
            "title": "NFSGatewayBucketMapResp",
            "required": [
                "nfs_gateway_bucket_map"
            ],
            "properties": {
                "nfs_gateway_bucket_map": {
                    "description": "map of nfs gateway and bucket",
                    "$ref": "#/definitions/NFSGatewayBucketMap"
                }
            }
        },
        "NFSGatewayBucketMapUpdateReq": {
            "type": "object",
            "title": "NFSGatewayBucketMapUpdateReq",
            "required": [
                "nfs_gateway_bucket_map"
            ],
            "properties": {
                "nfs_gateway_bucket_map": {
                    "$ref": "#/definitions/NFSGatewayBucketMapUpdateReq_NFSGatewayBucketMap"
                }
            }
        },
        "NFSGatewayBucketMapUpdateReq_NFSGatewayBucketMap": {
            "type": "object",
            "title": "NFSGatewayBucketMapUpdateReq_NFSGatewayBucketMap",
            "properties": {
                "key_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "NFSGatewayBucketMapsResp": {
            "type": "object",
            "title": "NFSGatewayBucketMapsResp",
            "required": [
                "nfs_gateway_bucket_maps"
            ],
            "properties": {
                "nfs_gateway_bucket_maps": {
                    "description": "maps of nfs gateway and bucket",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NFSGatewayBucketMap"
                    }
                }
            }
        },
        "NFSGatewayCreateReq": {
            "type": "object",
            "title": "NFSGatewayCreateReq",
            "required": [
                "nfs_gateway"
            ],
            "properties": {
                "nfs_gateway": {
                    "$ref": "#/definitions/NFSGatewayCreateReq_NFSGateway"
                }
            }
        },
        "NFSGatewayCreateReq_NFSGateway": {
            "type": "object",
            "title": "NFSGatewayCreateReq_NFSGateway",
            "required": [
                "name",
                "description",
                "host_id",
                "port"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "gateway_ip": {
                    "type": "string"
                },
                "host_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "osp_zone_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "NFSGatewayRecord": {
            "description": "NFSGatewayRecord combine NFSGateway and NFSGatewayStat as API response",
            "type": "object",
            "title": "NFSGatewayRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/NFSGateway"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NFSGatewayStat"
                            }
                        }
                    }
                }
            ]
        },
        "NFSGatewayResp": {
            "type": "object",
            "title": "NFSGatewayResp",
            "required": [
                "nfs_gateway"
            ],
            "properties": {
                "nfs_gateway": {
                    "description": "nfs gateway",
                    "$ref": "#/definitions/NFSGatewayRecord"
                }
            }
        },
        "NFSGatewaySamplesResp": {
            "type": "object",
            "title": "NFSGatewaySamplesResp",
            "required": [
                "nfs_gateway_samples"
            ],
            "properties": {
                "nfs_gateway_samples": {
                    "description": "nfs gateway samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NFSGatewayStat"
                    }
                }
            }
        },
        "NFSGatewayStat": {
            "description": "NFSGatewayStat defines nfs gateway stat",
            "type": "object",
            "title": "NFSGatewayStat",
            "properties": {
                "all_requests": {
                    "type": "integer",
                    "format": "int64"
                },
                "compact_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "compact_ops": {
                    "type": "number",
                    "format": "double"
                },
                "cpu_util": {
                    "type": "number",
                    "format": "double"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "delete_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "delete_ops": {
                    "type": "number",
                    "format": "double"
                },
                "down_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "down_first_byte_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "down_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "down_ops": {
                    "type": "number",
                    "format": "double"
                },
                "list_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "list_ops": {
                    "type": "number",
                    "format": "double"
                },
                "mem_usage_percent": {
                    "type": "number",
                    "format": "double"
                },
                "merge_speed": {
                    "type": "integer",
                    "format": "int64"
                },
                "replication_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "replication_ops": {
                    "type": "number",
                    "format": "double"
                },
                "requests": {
                    "type": "integer",
                    "format": "int64"
                },
                "sync_down_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "sync_down_last_byte_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "sync_down_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "sync_down_ops": {
                    "type": "number",
                    "format": "double"
                },
                "sync_up_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "sync_up_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "sync_up_ops": {
                    "type": "number",
                    "format": "double"
                },
                "up_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "up_last_byte_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "up_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "up_ops": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "NFSGatewayUpdateReq": {
            "type": "object",
            "title": "NFSGatewayUpdateReq",
            "required": [
                "nfs_gateway"
            ],
            "properties": {
                "nfs_gateway": {
                    "$ref": "#/definitions/NFSGatewayUpdateReq_NFSGateway"
                }
            }
        },
        "NFSGatewayUpdateReq_NFSGateway": {
            "type": "object",
            "title": "NFSGatewayUpdateReq_NFSGateway",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "NFSGateway_Nestview": {
            "type": "object",
            "title": "NFSGateway_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "NFSGatewaysResp": {
            "type": "object",
            "title": "NFSGatewaysResp",
            "required": [
                "nfs_gateways"
            ],
            "properties": {
                "nfs_gateways": {
                    "description": "nfs gateways",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NFSGatewayRecord"
                    }
                }
            }
        },
        "NestedRootfs": {
            "type": "object",
            "title": "NestedRootfs",
            "properties": {
                "id": {
                    "description": "rootfs id",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "rootfs name",
                    "type": "string"
                }
            }
        },
        "NestedTrash": {
            "type": "object",
            "title": "NestedTrash",
            "properties": {
                "id": {
                    "description": "trash id",
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "description": "trash path",
                    "type": "string"
                }
            }
        },
        "NetworkAddress": {
            "description": "NetworkAddress defines model of network address\n+X:model:generate;plur=NetworkAddresses;related_depth=2; +X:benchmark:",
            "type": "object",
            "title": "NetworkAddress",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip": {
                    "type": "string"
                },
                "mask": {
                    "type": "integer",
                    "format": "int64"
                },
                "network_interface": {
                    "$ref": "#/definitions/NetworkInterface_Nestview"
                },
                "osp_cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "slave_switch_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "slave_switched": {
                    "type": "boolean"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "NetworkAddressResp": {
            "type": "object",
            "title": "NetworkAddressResp",
            "properties": {
                "network_address": {
                    "description": "network address record",
                    "$ref": "#/definitions/NetworkAddress"
                }
            }
        },
        "NetworkAddress_Nestview": {
            "type": "object",
            "title": "NetworkAddress_Nestview",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip": {
                    "type": "string"
                },
                "mask": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "NetworkAddressesResp": {
            "type": "object",
            "title": "NetworkAddressesResp",
            "properties": {
                "network_addresses": {
                    "description": "network address records",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkAddress"
                    }
                }
            }
        },
        "NetworkDiagnosesResp": {
            "type": "object",
            "title": "NetworkDiagnosesResp",
            "required": [
                "network_diagnoses"
            ],
            "properties": {
                "network_diagnoses": {
                    "description": "network diagnoses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkDiagnosis"
                    }
                }
            }
        },
        "NetworkDiagnosis": {
            "description": "NetworkDiagnosis defines model of network diagnosis",
            "type": "object",
            "title": "NetworkDiagnosis",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "diagnose_active_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "diagnose_error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "diagnose_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "diagnose_warning_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "diagnosing_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "host_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "not_diagnose_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "progress": {
                    "type": "number",
                    "format": "double"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "NetworkDiagnosisCreateReq": {
            "type": "object",
            "title": "NetworkDiagnosisCreateReq",
            "required": [
                "network_diagnosis"
            ],
            "properties": {
                "network_diagnosis": {
                    "$ref": "#/definitions/NetworkDiagnosisCreateReq_Diagnosis"
                }
            }
        },
        "NetworkDiagnosisCreateReq_Diagnosis": {
            "type": "object",
            "title": "NetworkDiagnosisCreateReq_Diagnosis",
            "required": [
                "networks",
                "host_scope",
                "host_ids"
            ],
            "properties": {
                "host_ids": {
                    "description": "ids of host",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "host_scope": {
                    "description": "host scope",
                    "type": "string"
                },
                "networks": {
                    "description": "network types",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "NetworkDiagnosisItem": {
            "description": "NetworkDiagnosisItem defines model of network diagnosis item",
            "type": "object",
            "title": "NetworkDiagnosisItem",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dst_host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "dst_interface": {
                    "type": "string"
                },
                "dst_ip": {
                    "type": "string"
                },
                "dst_megabits": {
                    "type": "integer",
                    "format": "int64"
                },
                "dst_type": {
                    "type": "string"
                },
                "execute": {
                    "type": "string",
                    "format": "date-time"
                },
                "finish": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "network_diagnosis": {
                    "$ref": "#/definitions/NetworkDiagnosis_Nestview"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "src_host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "src_interface": {
                    "type": "string"
                },
                "src_ip": {
                    "type": "string"
                },
                "src_megabits": {
                    "type": "integer",
                    "format": "int64"
                },
                "src_type": {
                    "type": "string"
                },
                "stat": {
                    "$ref": "#/definitions/NetworkDiagnosisStat"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "NetworkDiagnosisItemsResp": {
            "type": "object",
            "title": "NetworkDiagnosisItemsResp",
            "required": [
                "network_diagnosis_items"
            ],
            "properties": {
                "network_diagnosis_items": {
                    "description": "network diagnosis items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkDiagnosisItem"
                    }
                }
            }
        },
        "NetworkDiagnosisResp": {
            "type": "object",
            "title": "NetworkDiagnosisResp",
            "required": [
                "network_diagnosis"
            ],
            "properties": {
                "network_diagnosis": {
                    "description": "network diagnosis",
                    "$ref": "#/definitions/NetworkDiagnosis"
                }
            }
        },
        "NetworkDiagnosisStat": {
            "description": "NetworkDiagnosisStat defines model of network diagnosis stat",
            "type": "object",
            "title": "NetworkDiagnosisStat",
            "properties": {
                "bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "coll_pkgs": {
                    "type": "integer",
                    "format": "int64"
                },
                "err_pkg_ratio": {
                    "type": "number",
                    "format": "double"
                },
                "lost_pkg_ratio": {
                    "type": "number",
                    "format": "double"
                },
                "recv_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "recv_pkgs": {
                    "type": "integer",
                    "format": "int64"
                },
                "send_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "send_pkgs": {
                    "type": "integer",
                    "format": "int64"
                },
                "tcp_conn_errs": {
                    "type": "integer",
                    "format": "int64"
                },
                "tcp_segment_retrans": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "NetworkDiagnosis_Nestview": {
            "type": "object",
            "title": "NetworkDiagnosis_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "NetworkInterface": {
            "description": "NetworkInterface contains information of a network interface and it's stats.",
            "type": "object",
            "title": "NetworkInterface",
            "properties": {
                "bonding_mode": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "link_detected": {
                    "type": "boolean"
                },
                "mac_address": {
                    "type": "string"
                },
                "master_network_interface": {
                    "$ref": "#/definitions/NetworkInterface_Nestview"
                },
                "megabits": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "operstate": {
                    "type": "string"
                },
                "osp_cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "type": {
                    "description": "ethernet or bond",
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "vf_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "NetworkInterfaceRecord": {
            "description": "NetworkInterfaceRecord combine NetworkInterface and NetworkInterfaceStat as API\nresponse",
            "type": "object",
            "title": "NetworkInterfaceRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/NetworkInterface"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetworkInterfaceStat"
                            }
                        }
                    }
                }
            ]
        },
        "NetworkInterfaceResp": {
            "type": "object",
            "title": "NetworkInterfaceResp",
            "properties": {
                "network_interface": {
                    "description": "network interface record",
                    "$ref": "#/definitions/NetworkInterfaceRecord"
                }
            }
        },
        "NetworkInterfaceSamplesResp": {
            "type": "object",
            "title": "NetworkInterfaceSamplesResp",
            "properties": {
                "network_interface_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkInterfaceStat"
                    }
                }
            }
        },
        "NetworkInterfaceStat": {
            "description": "NetworkInterfaceStat define the statistics of network interface",
            "type": "object",
            "title": "NetworkInterfaceStat",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "drop_pps": {
                    "type": "number",
                    "format": "double"
                },
                "error_pps": {
                    "type": "number",
                    "format": "double"
                },
                "rx_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "rx_drop_pps": {
                    "type": "number",
                    "format": "double"
                },
                "rx_error_pps": {
                    "type": "number",
                    "format": "double"
                },
                "rx_pps": {
                    "type": "number",
                    "format": "double"
                },
                "tx_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "tx_drop_pps": {
                    "type": "number",
                    "format": "double"
                },
                "tx_error_pps": {
                    "type": "number",
                    "format": "double"
                },
                "tx_pps": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "NetworkInterface_Nestview": {
            "type": "object",
            "title": "NetworkInterface_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "mac_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "NetworkInterfacesResp": {
            "type": "object",
            "title": "NetworkInterfacesResp",
            "properties": {
                "network_interfaces": {
                    "description": "network interface records",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkInterfaceRecord"
                    }
                }
            }
        },
        "NgObjectStorage": {
            "description": "NgObjectStorage is the mode of next generation object storage +X:model:generate;",
            "type": "object",
            "title": "NgObjectStorage",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "cname_enabled": {
                    "type": "boolean"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "domain_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "NgObjectStorageResp": {
            "type": "object",
            "title": "NgObjectStorageResp",
            "properties": {
                "ng_object_storage": {
                    "description": "object storage",
                    "$ref": "#/definitions/NgObjectStorage"
                }
            }
        },
        "NgObjectStorageSetDomainNamesReq": {
            "type": "object",
            "title": "NgObjectStorageSetDomainNamesReq",
            "properties": {
                "ng_object_storage": {
                    "$ref": "#/definitions/NgObjectStorageSetDomainNamesReq_Info"
                }
            }
        },
        "NgObjectStorageSetDomainNamesReq_Info": {
            "type": "object",
            "title": "NgObjectStorageSetDomainNamesReq_Info",
            "properties": {
                "cname_enabled": {
                    "type": "boolean"
                },
                "domain_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "NgObjectStorage_Nestview": {
            "type": "object",
            "title": "NgObjectStorage_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSBucketAddReplicationPathsReq": {
            "type": "object",
            "title": "OSBucketAddReplicationPathsReq",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/OSBucketAddReplicationPathsReq_Bucket"
                }
            }
        },
        "OSBucketAddReplicationPathsReq_Bucket": {
            "type": "object",
            "title": "OSBucketAddReplicationPathsReq_Bucket",
            "properties": {
                "os_replication_path_uuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "os_replication_paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSReplicationPathReq"
                    }
                }
            }
        },
        "OSBucketAddReplicationZonesReq": {
            "type": "object",
            "title": "OSBucketAddReplicationZonesReq",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/OSBucketAddReplicationZonesReq_Bucket"
                }
            }
        },
        "OSBucketAddReplicationZonesReq_Bucket": {
            "type": "object",
            "title": "OSBucketAddReplicationZonesReq_Bucket",
            "properties": {
                "os_replication_zone_uuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "os_replication_zones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSReplicationZoneReq"
                    }
                }
            }
        },
        "OSBucketCustomLabelsAddReq": {
            "type": "object",
            "title": "OSBucketCustomLabelsAddReq",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/OSBucketCustomLabelsAddReq_Bucket"
                }
            }
        },
        "OSBucketCustomLabelsAddReq_Bucket": {
            "type": "object",
            "title": "OSBucketCustomLabelsAddReq_Bucket",
            "required": [
                "labels"
            ],
            "properties": {
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSBucketCustomLabelsAddReq_Bucket_Labels_Elt"
                    }
                }
            }
        },
        "OSBucketCustomLabelsAddReq_Bucket_Labels_Elt": {
            "type": "object",
            "title": "OSBucketCustomLabelsAddReq_Bucket_Labels_Elt",
            "required": [
                "category",
                "name",
                "type"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "OSBucketCustomLabelsRemoveReq": {
            "type": "object",
            "title": "OSBucketCustomLabelsRemoveReq",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/OSBucketCustomLabelsRemoveReq_Bucket"
                }
            }
        },
        "OSBucketCustomLabelsRemoveReq_Bucket": {
            "type": "object",
            "title": "OSBucketCustomLabelsRemoveReq_Bucket",
            "required": [
                "label_ids"
            ],
            "properties": {
                "label_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "OSBucketCustomLabelsUpdateReq": {
            "type": "object",
            "title": "OSBucketCustomLabelsUpdateReq",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/OSBucketCustomLabelsUpdateReq_Bucket"
                }
            }
        },
        "OSBucketCustomLabelsUpdateReq_Bucket": {
            "type": "object",
            "title": "OSBucketCustomLabelsUpdateReq_Bucket",
            "required": [
                "labels"
            ],
            "properties": {
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSBucketCustomLabelsUpdateReq_Bucket_Labels_Elt"
                    }
                }
            }
        },
        "OSBucketCustomLabelsUpdateReq_Bucket_Labels_Elt": {
            "type": "object",
            "title": "OSBucketCustomLabelsUpdateReq_Bucket_Labels_Elt",
            "required": [
                "id",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "OSBucketLogging": {
            "description": "OSBucketLogging defines models of os bucket logging. +X:model:generate;\n+X:benchmark:",
            "type": "object",
            "title": "OSBucketLogging",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "prefix": {
                    "type": "string"
                },
                "source_bucket_name": {
                    "type": "string"
                },
                "target_bucket_name": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OSBucketLoggingGrant": {
            "description": "OSBucketLoggingGrant defines logging permissions of os bucket",
            "type": "object",
            "title": "OSBucketLoggingGrant",
            "properties": {
                "os_user_email": {
                    "type": "string"
                },
                "os_user_name": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "OSBucketLoggingsResp": {
            "type": "object",
            "title": "OSBucketLoggingsResp",
            "properties": {
                "os_bucket_loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSBucketLogging"
                    }
                }
            }
        },
        "OSBucketMetadataSearchSetReq": {
            "type": "object",
            "title": "OSBucketMetadataSearchSetReq",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/OSBucketMetadataSearchSetReq_Bucket"
                }
            }
        },
        "OSBucketMetadataSearchSetReq_Bucket": {
            "type": "object",
            "title": "OSBucketMetadataSearchSetReq_Bucket",
            "required": [
                "metadata_search_enabled"
            ],
            "properties": {
                "metadata_search_enabled": {
                    "type": "boolean"
                }
            }
        },
        "OSBucketObjectCoverConf": {
            "description": "OSBucketObjectCoverConf defines configs of object cover mode",
            "type": "object",
            "title": "OSBucketObjectCoverConf",
            "properties": {
                "cover_quota": {
                    "type": "boolean"
                },
                "expiration_seconds": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSBucketObjectStorageClass": {
            "description": "OSBucketObjectStorageClass defines object storage class info of os bucket",
            "type": "object",
            "title": "OSBucketObjectStorageClass",
            "properties": {
                "matching_info": {
                    "$ref": "#/definitions/RuleMatchingInfo"
                },
                "type": {
                    "type": "string"
                },
                "x_amz_storage_class_enabled": {
                    "type": "boolean"
                }
            }
        },
        "OSBucketOriginPullSamplesResp": {
            "type": "object",
            "title": "OSBucketOriginPullSamplesResp",
            "properties": {
                "os_bucket_origin_pull_samples": {
                    "description": "os bucket origin pull samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSBucketOriginPullStat"
                    }
                }
            }
        },
        "OSBucketOriginPullStat": {
            "description": "OSBucketOriginPullStat define the origin pull statistics",
            "type": "object",
            "title": "OSBucketOriginPullStat",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "expired_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "expired_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "failure_ops": {
                    "type": "integer",
                    "format": "int64"
                },
                "rx_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "rx_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "storage_classes": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/OSOriginPullStorageClassStat"
                    }
                },
                "success_ops": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_ops": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_rx_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_rx_size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSBucketPolicySetReq": {
            "type": "object",
            "title": "OSBucketPolicySetReq",
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/OSBucketPolicySetReq_Bucket"
                }
            }
        },
        "OSBucketPolicySetReq_Bucket": {
            "type": "object",
            "title": "OSBucketPolicySetReq_Bucket",
            "required": [
                "bucket_policy"
            ],
            "properties": {
                "bucket_policy": {
                    "type": "string"
                }
            }
        },
        "OSBucketQos": {
            "description": "OSBucketQos defines os bucket qos info",
            "type": "object",
            "title": "OSBucketQos",
            "properties": {
                "user_request": {
                    "$ref": "#/definitions/OSBucketQosUserRequest"
                }
            }
        },
        "OSBucketQosUserRequest": {
            "description": "OSBucketQosUserRequest defines os bucket user request qos info",
            "type": "object",
            "title": "OSBucketQosUserRequest",
            "required": [
                "max_bandwidth_bytes",
                "requests_per_second"
            ],
            "properties": {
                "max_bandwidth_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "requests_per_second": {
                    "type": "integer",
                    "format": "int64"
                },
                "sudden_bandwidth_bytes": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSBucketRemoveLoggingsReq": {
            "type": "object",
            "title": "OSBucketRemoveLoggingsReq",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/OSBucketRemoveLoggingsReq_Bucket"
                }
            }
        },
        "OSBucketRemoveLoggingsReq_Bucket": {
            "type": "object",
            "title": "OSBucketRemoveLoggingsReq_Bucket",
            "required": [
                "os_bucket_logging_ids"
            ],
            "properties": {
                "os_bucket_logging_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "OSBucketRemoveReplicationPathsReq": {
            "type": "object",
            "title": "OSBucketRemoveReplicationPathsReq",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/OSBucketRemoveReplicationPathsReq_Bucket"
                }
            }
        },
        "OSBucketRemoveReplicationPathsReq_Bucket": {
            "type": "object",
            "title": "OSBucketRemoveReplicationPathsReq_Bucket",
            "required": [
                "os_replication_path_uuids"
            ],
            "properties": {
                "os_replication_path_uuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "OSBucketRemoveReplicationZonesReq": {
            "type": "object",
            "title": "OSBucketRemoveReplicationZonesReq",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/OSBucketRemoveReplicationZonesReq_Bucket"
                }
            }
        },
        "OSBucketRemoveReplicationZonesReq_Bucket": {
            "type": "object",
            "title": "OSBucketRemoveReplicationZonesReq_Bucket",
            "required": [
                "os_replication_zone_uuids"
            ],
            "properties": {
                "os_replication_zone_uuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "OSBucketSetAccessLoggingReq": {
            "type": "object",
            "title": "OSBucketSetAccessLoggingReq",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/OSBucketSetAccessLoggingReq_Bucket"
                }
            }
        },
        "OSBucketSetAccessLoggingReq_Bucket": {
            "type": "object",
            "title": "OSBucketSetAccessLoggingReq_Bucket",
            "properties": {
                "logging_grants": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "logging_owner_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "logging_prefix": {
                    "type": "string"
                },
                "logging_target_bucket_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSBucketSetObjectStorageClassReq": {
            "type": "object",
            "title": "OSBucketSetObjectStorageClassReq",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/OSBucketSetObjectStorageClassReq_Bucket"
                }
            }
        },
        "OSBucketSetObjectStorageClassReq_Bucket": {
            "type": "object",
            "title": "OSBucketSetObjectStorageClassReq_Bucket",
            "required": [
                "object_storage_class"
            ],
            "properties": {
                "object_storage_class": {
                    "$ref": "#/definitions/OSBucketObjectStorageClass"
                }
            }
        },
        "OSBucketSwitchOwnerOSZoneReq": {
            "type": "object",
            "title": "OSBucketSwitchOwnerOSZoneReq",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/OSBucketSwitchOwnerOSZoneReq_Bucket"
                }
            }
        },
        "OSBucketSwitchOwnerOSZoneReq_Bucket": {
            "type": "object",
            "title": "OSBucketSwitchOwnerOSZoneReq_Bucket",
            "properties": {
                "os_zone_uuid": {
                    "type": "string"
                }
            }
        },
        "OSBucketUpdateReplicationPathsReq": {
            "type": "object",
            "title": "OSBucketUpdateReplicationPathsReq",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/OSBucketUpdateReplicationPathsReq_Bucket"
                }
            }
        },
        "OSBucketUpdateReplicationPathsReq_Bucket": {
            "type": "object",
            "title": "OSBucketUpdateReplicationPathsReq_Bucket",
            "required": [
                "os_replication_path_uuids"
            ],
            "properties": {
                "os_replication_path_uuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "OSBucketUsageCategory": {
            "description": "OSBucketUsageCategory contain usage info",
            "type": "object",
            "title": "OSBucketUsageCategory",
            "properties": {
                "download_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "ops": {
                    "type": "integer",
                    "format": "int64"
                },
                "upload_bytes": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSBuiltinBluRay": {
            "description": "OSBuiltinBluRay is the model of os_builtin_blu_ray\n+X:model:generate;with_detailed;check_get=detailed +X:benchmark:",
            "type": "object",
            "title": "OSBuiltinBluRay",
            "properties": {
                "admin_endpoint": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "os_policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStoragePolicy"
                    }
                },
                "password": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "OSBuiltinBluRayCreateReq": {
            "type": "object",
            "title": "OSBuiltinBluRayCreateReq",
            "properties": {
                "os_builtin_blu_ray": {
                    "$ref": "#/definitions/OSBuiltinBluRayCreateReq_BuiltinBluRay"
                }
            }
        },
        "OSBuiltinBluRayCreateReq_BuiltinBluRay": {
            "type": "object",
            "title": "OSBuiltinBluRayCreateReq_BuiltinBluRay",
            "required": [
                "name",
                "admin_endpoint",
                "user_name",
                "password"
            ],
            "properties": {
                "admin_endpoint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "OSBuiltinBluRayResp": {
            "type": "object",
            "title": "OSBuiltinBluRayResp",
            "properties": {
                "os_builtin_blu_ray": {
                    "$ref": "#/definitions/OSBuiltinBluRay"
                }
            }
        },
        "OSBuiltinBluRayUpdateReq": {
            "type": "object",
            "title": "OSBuiltinBluRayUpdateReq",
            "properties": {
                "os_builtin_blu_ray": {
                    "$ref": "#/definitions/OSBuiltinBluRayUpdateReq_BuiltinBluRay"
                }
            }
        },
        "OSBuiltinBluRayUpdateReq_BuiltinBluRay": {
            "type": "object",
            "title": "OSBuiltinBluRayUpdateReq_BuiltinBluRay",
            "properties": {
                "admin_endpoint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "OSBuiltinBluRaysResp": {
            "type": "object",
            "title": "OSBuiltinBluRaysResp",
            "properties": {
                "os_builtin_blu_rays": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSBuiltinBluRay"
                    }
                }
            }
        },
        "OSCustomLabel": {
            "description": "OSCustomLabel the struct of object storage custom label\n+X:model:generate;order_by=ID +X:benchmark:",
            "type": "object",
            "title": "OSCustomLabel",
            "properties": {
                "bucket": {
                    "$ref": "#/definitions/ObjectStorageBucket_Nestview"
                },
                "category": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OSCustomLabelResp": {
            "type": "object",
            "title": "OSCustomLabelResp",
            "required": [
                "os_custom_label"
            ],
            "properties": {
                "os_custom_label": {
                    "description": "object storage custom label",
                    "$ref": "#/definitions/OSCustomLabel"
                }
            }
        },
        "OSCustomLabelsResp": {
            "type": "object",
            "title": "OSCustomLabelsResp",
            "required": [
                "os_custom_labels"
            ],
            "properties": {
                "os_custom_labels": {
                    "description": "object storage custom labels",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSCustomLabel"
                    }
                }
            }
        },
        "OSExStoragePlatformValidator": {
            "description": "OSExStoragePlatformValidator is the model of os external storage platform\nvaldator +X:model:generate;check_get +X:benchmark:",
            "type": "object",
            "title": "OSExStoragePlatformValidator",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "platform_info": {
                    "type": "object"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "OSExStoragePlatformValidatorCreateReq": {
            "type": "object",
            "title": "OSExStoragePlatformValidatorCreateReq",
            "properties": {
                "os_external_storage_platform_validator": {
                    "$ref": "#/definitions/OSExStoragePlatformValidator"
                }
            }
        },
        "OSExStoragePlatformValidatorResp": {
            "type": "object",
            "title": "OSExStoragePlatformValidatorResp",
            "properties": {
                "os_external_storage_platform_validator": {
                    "$ref": "#/definitions/OSExStoragePlatformValidator"
                }
            }
        },
        "OSExternalStorageBucketInfo": {
            "description": "OSExternalStorageBucketInfo contains bucket info of external storage platform",
            "type": "object",
            "title": "OSExternalStorageBucketInfo",
            "required": [
                "name",
                "weight"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSExternalStorageClass": {
            "description": "OSExternalStorageClass is the model of os external storage class\n+X:model:generate;plur=OSExternalStorageClasses;with_detailed +X:benchmark:",
            "type": "object",
            "title": "OSExternalStorageClass",
            "properties": {
                "Create": {
                    "type": "string",
                    "format": "date-time"
                },
                "class_id": {
                    "type": "string"
                },
                "class_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "description": {
                    "type": "string"
                },
                "external_storage_platforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSExternalStoragePlatform"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "os_policy": {
                    "description": "used for alert",
                    "$ref": "#/definitions/ObjectStoragePolicy"
                },
                "os_policy_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "platform": {
                    "type": "string"
                },
                "platform_type": {
                    "type": "string"
                },
                "prefix_enabled": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "storage_pattern": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "OSExternalStorageClassCreateReq": {
            "type": "object",
            "title": "OSExternalStorageClassCreateReq",
            "properties": {
                "os_external_storage_class": {
                    "$ref": "#/definitions/OSExternalStorageClassCreateReq_ExternalStorageClass"
                }
            }
        },
        "OSExternalStorageClassCreateReq_ExternalStorageClass": {
            "type": "object",
            "title": "OSExternalStorageClassCreateReq_ExternalStorageClass",
            "required": [
                "name",
                "os_policy_id",
                "class_id",
                "platform",
                "platform_type",
                "external_storage_platforms"
            ],
            "properties": {
                "class_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "external_storage_platforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSExternalStorageClassCreateReq_ExternalStorageClass_ExternalStoragePlatforms_Elt"
                    }
                },
                "name": {
                    "type": "string"
                },
                "os_policy_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "platform": {
                    "type": "string"
                },
                "platform_type": {
                    "type": "string"
                },
                "prefix_enabled": {
                    "type": "boolean"
                },
                "storage_pattern": {
                    "$ref": "#/definitions/SliceStringField"
                }
            }
        },
        "OSExternalStorageClassCreateReq_ExternalStorageClass_ExternalStoragePlatforms_Elt": {
            "type": "object",
            "title": "OSExternalStorageClassCreateReq_ExternalStorageClass_ExternalStoragePlatforms_Elt",
            "properties": {
                "access_key": {
                    "type": "string"
                },
                "authentication": {
                    "type": "string"
                },
                "blu_ray_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "buckets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSExternalStorageBucketInfo"
                    }
                },
                "endpoint": {
                    "type": "string"
                },
                "host_style": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSExternalStorageClassResp": {
            "type": "object",
            "title": "OSExternalStorageClassResp",
            "properties": {
                "os_external_storage_class": {
                    "$ref": "#/definitions/OSExternalStorageClass"
                }
            }
        },
        "OSExternalStorageClassUpdateReq": {
            "type": "object",
            "title": "OSExternalStorageClassUpdateReq",
            "properties": {
                "os_external_storage_class": {
                    "$ref": "#/definitions/OSExternalStorageClassUpdateReq_ExternalStorageClass"
                }
            }
        },
        "OSExternalStorageClassUpdateReq_ExternalStorageClass": {
            "type": "object",
            "title": "OSExternalStorageClassUpdateReq_ExternalStorageClass",
            "properties": {
                "description": {
                    "type": "string"
                },
                "external_storage_platforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSExternalStoragePlatformInfo"
                    }
                },
                "name": {
                    "type": "string"
                },
                "prefix_enabled": {
                    "type": "boolean"
                },
                "storage_pattern": {
                    "$ref": "#/definitions/SliceStringField"
                }
            }
        },
        "OSExternalStorageClassesResp": {
            "type": "object",
            "title": "OSExternalStorageClassesResp",
            "properties": {
                "os_external_storage_classes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSExternalStorageClass"
                    }
                }
            }
        },
        "OSExternalStoragePlatform": {
            "description": "OSExternalStoragePlatform is the model of os_external_storage_platform\n+X:model:generate;with_detailed;order_by=ID +X:benchmark:",
            "type": "object",
            "title": "OSExternalStoragePlatform",
            "properties": {
                "access_key": {
                    "type": "string"
                },
                "authentication": {
                    "type": "string"
                },
                "blu_ray": {
                    "$ref": "#/definitions/OSBuiltinBluRay"
                },
                "buckets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSExternalStorageBucketInfo"
                    }
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "connected": {
                    "type": "boolean"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "endpoint": {
                    "type": "string"
                },
                "host_style": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "os_external_storage_class": {
                    "description": "used for alert",
                    "$ref": "#/definitions/OSExternalStorageClass"
                },
                "region": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSExternalStoragePlatformInfo": {
            "description": "OSExternalStoragePlatformInfo used for update os external storage class",
            "type": "object",
            "title": "OSExternalStoragePlatformInfo",
            "properties": {
                "access_key": {
                    "type": "string"
                },
                "authentication": {
                    "type": "string"
                },
                "blu_ray_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "buckets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSExternalStorageBucketInfo"
                    }
                },
                "endpoint": {
                    "type": "string"
                },
                "host_style": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSExternalStoragePlatformType": {
            "description": "OSExternalStoragePlatformType is the model of os_external_storage_platform_type\n+X:model:generate;check_get +X:benchmark:",
            "type": "object",
            "title": "OSExternalStoragePlatformType",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "platform": {
                    "type": "string"
                },
                "platform_type": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "region_zh": {
                    "type": "string"
                }
            }
        },
        "OSExternalStoragePlatformTypeCreateReq": {
            "type": "object",
            "title": "OSExternalStoragePlatformTypeCreateReq",
            "properties": {
                "os_external_storage_platform_type": {
                    "$ref": "#/definitions/OSExternalStoragePlatformType"
                }
            }
        },
        "OSExternalStoragePlatformTypeResp": {
            "type": "object",
            "title": "OSExternalStoragePlatformTypeResp",
            "properties": {
                "os_external_storage_platform_type": {
                    "$ref": "#/definitions/OSExternalStoragePlatformType"
                }
            }
        },
        "OSExternalStoragePlatformTypesResp": {
            "type": "object",
            "title": "OSExternalStoragePlatformTypesResp",
            "properties": {
                "os_external_storage_platform_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSExternalStoragePlatformType"
                    }
                }
            }
        },
        "OSOriginPullRule": {
            "description": "OSOriginPullRule is the model of os_origin_pull_rule\n+X:model:generate;check_get=detailed;with_detailed; +X:benchmark:",
            "type": "object",
            "title": "OSOriginPullRule",
            "properties": {
                "bucket_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "connected": {
                    "type": "boolean"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "escape_to_slash": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "mode_type": {
                    "type": "string"
                },
                "origin_conf": {
                    "$ref": "#/definitions/OriginConf"
                },
                "origin_info": {
                    "$ref": "#/definitions/OriginInfo"
                },
                "prefix": {
                    "type": "string"
                },
                "s3_load_balancer_group": {
                    "$ref": "#/definitions/S3LoadBalancerGroup"
                },
                "status": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                }
            }
        },
        "OSOriginPullRuleCreateReq": {
            "type": "object",
            "title": "OSOriginPullRuleCreateReq",
            "properties": {
                "os_origin_pull_rule": {
                    "$ref": "#/definitions/OSOriginPullRule"
                }
            }
        },
        "OSOriginPullRuleResp": {
            "type": "object",
            "title": "OSOriginPullRuleResp",
            "properties": {
                "os_origin_pull_rule": {
                    "$ref": "#/definitions/OSOriginPullRule"
                }
            }
        },
        "OSOriginPullRuleUpdateReq": {
            "type": "object",
            "title": "OSOriginPullRuleUpdateReq",
            "properties": {
                "os_origin_pull_rule": {
                    "$ref": "#/definitions/OSOriginPullRule"
                }
            }
        },
        "OSOriginPullRulesResp": {
            "type": "object",
            "title": "OSOriginPullRulesResp",
            "properties": {
                "os_origin_pull_rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSOriginPullRule"
                    }
                }
            }
        },
        "OSOriginPullStorageClassStat": {
            "description": "OSOriginPullStorageClassStat define the os origin pull storage class statistics",
            "type": "object",
            "title": "OSOriginPullStorageClassStat",
            "properties": {
                "class_name": {
                    "type": "string"
                },
                "expired_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "expired_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "rx_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "rx_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_rx_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_rx_size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSRemotePoliciesResp": {
            "type": "object",
            "title": "OSRemotePoliciesResp",
            "properties": {
                "os_remote_policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSRemotePolicy"
                    }
                }
            }
        },
        "OSRemotePolicy": {
            "description": "OSRemotePolicy defines model of cached remote os policy.\n+X:model:generate;plur=OSRemotePolicies; +X:benchmark:",
            "type": "object",
            "title": "OSRemotePolicy",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "default": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "uuid": {
                    "type": "string"
                },
                "zone_uuid": {
                    "type": "string"
                }
            }
        },
        "OSRemotePolicyResp": {
            "type": "object",
            "title": "OSRemotePolicyResp",
            "properties": {
                "os_remote_policy": {
                    "$ref": "#/definitions/OSRemotePolicy"
                }
            }
        },
        "OSRemotePolicy_Nestview": {
            "type": "object",
            "title": "OSRemotePolicy_Nestview",
            "properties": {
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "OSReplicationPath": {
            "description": "OSReplicationPath defines models of os replication path.\n+X:model:generate;with_detailed; +X:benchmark:",
            "type": "object",
            "title": "OSReplicationPath",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "os_zone_uuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "os_zones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageZone_Nestview"
                    }
                },
                "replication_uuid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "suspended": {
                    "type": "boolean"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "OSReplicationPathReq": {
            "type": "object",
            "title": "OSReplicationPathReq",
            "required": [
                "os_zone_uuids"
            ],
            "properties": {
                "os_zone_uuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "OSReplicationPathResp": {
            "type": "object",
            "title": "OSReplicationPathResp",
            "properties": {
                "os_replication_path": {
                    "$ref": "#/definitions/OSReplicationPath"
                }
            }
        },
        "OSReplicationPathsResp": {
            "type": "object",
            "title": "OSReplicationPathsResp",
            "properties": {
                "os_replication_paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSReplicationPath"
                    }
                }
            }
        },
        "OSReplicationZone": {
            "description": "OSReplicationZone contains information of a os replication zone and it's stats.",
            "type": "object",
            "title": "OSReplicationZone",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dirty": {
                    "type": "boolean"
                },
                "os_bucket": {
                    "$ref": "#/definitions/ObjectStorageBucket_Nestview"
                },
                "os_bucket_owner_cluster": {
                    "$ref": "#/definitions/RemoteCluster_Nestview"
                },
                "os_bucket_owner_zone": {
                    "$ref": "#/definitions/ObjectStorageZone_Nestview"
                },
                "os_remote_policy": {
                    "$ref": "#/definitions/OSRemotePolicy_Nestview"
                },
                "os_remote_policy_uuid": {
                    "type": "string"
                },
                "os_replication_path_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_zone": {
                    "$ref": "#/definitions/ObjectStorageZone_Nestview"
                },
                "os_zone_uuid": {
                    "type": "string"
                },
                "readonly": {
                    "type": "boolean"
                },
                "replication_uuid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "OSReplicationZoneCreateReq": {
            "type": "object",
            "title": "OSReplicationZoneCreateReq",
            "required": [
                "os_replication_zone"
            ],
            "properties": {
                "os_replication_zone": {
                    "$ref": "#/definitions/OSReplicationZoneCreateReq_OSReplicationZone"
                }
            }
        },
        "OSReplicationZoneCreateReq_OSReplicationZone": {
            "type": "object",
            "title": "OSReplicationZoneCreateReq_OSReplicationZone",
            "required": [
                "uuid",
                "os_bucket_id"
            ],
            "properties": {
                "os_bucket_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "OSReplicationZoneRecord": {
            "description": "OSReplicationZoneRecord is used to combine OSReplicationZone and\nOSReplicationZoneStat",
            "type": "object",
            "title": "OSReplicationZoneRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/OSReplicationZone"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OSReplicationZoneStat"
                            }
                        }
                    }
                }
            ]
        },
        "OSReplicationZoneRecordResp": {
            "type": "object",
            "title": "OSReplicationZoneRecordResp",
            "properties": {
                "os_replication_zone": {
                    "$ref": "#/definitions/OSReplicationZoneRecord"
                }
            }
        },
        "OSReplicationZoneRecordsResp": {
            "type": "object",
            "title": "OSReplicationZoneRecordsResp",
            "properties": {
                "os_replication_zones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSReplicationZoneRecord"
                    }
                }
            }
        },
        "OSReplicationZoneReq": {
            "type": "object",
            "title": "OSReplicationZoneReq",
            "required": [
                "os_remote_policy_uuid"
            ],
            "properties": {
                "os_remote_policy_uuid": {
                    "type": "string"
                },
                "readonly": {
                    "type": "boolean"
                }
            }
        },
        "OSReplicationZoneResp": {
            "type": "object",
            "title": "OSReplicationZoneResp",
            "properties": {
                "os_replication_zone": {
                    "$ref": "#/definitions/OSReplicationZone"
                }
            }
        },
        "OSReplicationZoneSamplesResp": {
            "type": "object",
            "title": "OSReplicationZoneSamplesResp",
            "required": [
                "os_replication_zone_samples"
            ],
            "properties": {
                "os_replication_zone_samples": {
                    "description": "os replication zone samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSReplicationZoneStat"
                    }
                }
            }
        },
        "OSReplicationZoneStat": {
            "description": "OSReplicationZoneStat contains sync stat info of os replication zone",
            "type": "object",
            "title": "OSReplicationZoneStat",
            "properties": {
                "bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "object_kbytes_ps": {
                    "type": "number",
                    "format": "double"
                },
                "objects_pm": {
                    "type": "number",
                    "format": "double"
                },
                "total_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_object_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_objects": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSSample": {
            "description": "OSSample contains os samples",
            "type": "object",
            "title": "OSSample",
            "properties": {
                "delete_obj_category": {
                    "$ref": "#/definitions/OSBucketUsageCategory"
                },
                "get_obj_category": {
                    "$ref": "#/definitions/OSBucketUsageCategory"
                },
                "list_bucket_category": {
                    "$ref": "#/definitions/OSBucketUsageCategory"
                },
                "objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "post_obj_category": {
                    "$ref": "#/definitions/OSBucketUsageCategory"
                },
                "put_obj_category": {
                    "$ref": "#/definitions/OSBucketUsageCategory"
                },
                "used_capacity_bytes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "OSSampleResp": {
            "type": "object",
            "title": "OSSampleResp",
            "properties": {
                "os_samples": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "$ref": "#/definitions/OSSample"
                                }
                            }
                        }
                    }
                }
            }
        },
        "OSSearchEngine": {
            "description": "OSSearchEngine contains information of a os search engine and it's stats.",
            "type": "object",
            "title": "OSSearchEngine",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "allocated_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "gateway_data_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "gateway_flavor": {
                    "$ref": "#/definitions/VMFlavor_Nestview"
                },
                "gateway_http_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "gateway_transport_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "search_s3_load_balancer_group": {
                    "$ref": "#/definitions/S3LoadBalancerGroup_Nestview"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "sync_s3_load_balancer_group": {
                    "$ref": "#/definitions/S3LoadBalancerGroup_Nestview"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OSSearchEngineAddGatewaysReq": {
            "type": "object",
            "title": "OSSearchEngineAddGatewaysReq",
            "required": [
                "os_search_engine"
            ],
            "properties": {
                "os_search_engine": {
                    "$ref": "#/definitions/OSSearchEngineAddGatewaysReq_SearchEngine"
                }
            }
        },
        "OSSearchEngineAddGatewaysReq_SearchEngine": {
            "type": "object",
            "title": "OSSearchEngineAddGatewaysReq_SearchEngine",
            "required": [
                "os_search_gateways"
            ],
            "properties": {
                "os_search_gateways": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSSearchGatewayReq"
                    }
                }
            }
        },
        "OSSearchEngineCreateReq": {
            "type": "object",
            "title": "OSSearchEngineCreateReq",
            "required": [
                "os_search_engine"
            ],
            "properties": {
                "os_search_engine": {
                    "$ref": "#/definitions/OSSearchEngineCreateReq_SearchEngine"
                }
            }
        },
        "OSSearchEngineCreateReq_SearchEngine": {
            "type": "object",
            "title": "OSSearchEngineCreateReq_SearchEngine",
            "required": [
                "os_search_gateways",
                "gateway_data_size",
                "gateway_flavor_id"
            ],
            "properties": {
                "gateway_data_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "gateway_flavor_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "gateway_http_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "gateway_transport_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_search_gateways": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSSearchGatewayReq"
                    }
                }
            }
        },
        "OSSearchEngineRecord": {
            "description": "OSSearchEngineRecord is used to combine OSSearchEngine and OSSearchEngineStat",
            "type": "object",
            "title": "OSSearchEngineRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/OSSearchEngine"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OSSearchEngineStat"
                            }
                        }
                    }
                }
            ]
        },
        "OSSearchEngineRemoveGatewaysReq": {
            "type": "object",
            "title": "OSSearchEngineRemoveGatewaysReq",
            "required": [
                "os_search_engine"
            ],
            "properties": {
                "os_search_engine": {
                    "$ref": "#/definitions/OSSearchEngineRemoveGatewaysReq_SearchEngine"
                }
            }
        },
        "OSSearchEngineRemoveGatewaysReq_SearchEngine": {
            "type": "object",
            "title": "OSSearchEngineRemoveGatewaysReq_SearchEngine",
            "required": [
                "os_search_gateway_ids"
            ],
            "properties": {
                "os_search_gateway_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "OSSearchEngineResp": {
            "type": "object",
            "title": "OSSearchEngineResp",
            "required": [
                "os_search_engine"
            ],
            "properties": {
                "os_search_engine": {
                    "description": "object storage search engine",
                    "$ref": "#/definitions/OSSearchEngineRecord"
                }
            }
        },
        "OSSearchEngineSamplesResp": {
            "type": "object",
            "title": "OSSearchEngineSamplesResp",
            "required": [
                "os_search_engine_samples"
            ],
            "properties": {
                "os_search_engine_samples": {
                    "description": "os search engine samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSSearchEngineStat"
                    }
                }
            }
        },
        "OSSearchEngineStat": {
            "description": "OSSearchEngineStat contains info of os search engine",
            "type": "object",
            "title": "OSSearchEngineStat",
            "properties": {
                "average_meta_query_latency": {
                    "type": "number",
                    "format": "double"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "meta_query_pm": {
                    "type": "number",
                    "format": "double"
                },
                "sync_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "sync_objects_pm": {
                    "type": "number",
                    "format": "double"
                },
                "total_meta_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_meta_size_bytes": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSSearchEngineUpdateReq": {
            "type": "object",
            "title": "OSSearchEngineUpdateReq",
            "required": [
                "os_search_engine"
            ],
            "properties": {
                "os_search_engine": {
                    "$ref": "#/definitions/OSSearchEngineUpdateReq_SearchEngine"
                }
            }
        },
        "OSSearchEngineUpdateReq_SearchEngine": {
            "type": "object",
            "title": "OSSearchEngineUpdateReq_SearchEngine",
            "properties": {
                "gateway_data_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "gateway_flavor_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSSearchEngine_Nestview": {
            "type": "object",
            "title": "OSSearchEngine_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSSearchEnginesResp": {
            "type": "object",
            "title": "OSSearchEnginesResp",
            "required": [
                "os_search_engines"
            ],
            "properties": {
                "os_search_engines": {
                    "description": "object storage search engine",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSSearchEngineRecord"
                    }
                }
            }
        },
        "OSSearchGateway": {
            "description": "OSSearchGateway contains information of a os search gateway and it's stats.",
            "type": "object",
            "title": "OSSearchGateway",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "search_engine": {
                    "$ref": "#/definitions/OSSearchEngine_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OSSearchGatewayRecord": {
            "description": "OSSearchGatewayRecord combine OSSearchGateway and OSSearchGatewayStat to let API\ncomfortable",
            "type": "object",
            "title": "OSSearchGatewayRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/OSSearchGateway"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OSSearchGatewayStat"
                            }
                        }
                    }
                }
            ]
        },
        "OSSearchGatewayReq": {
            "type": "object",
            "title": "OSSearchGatewayReq",
            "required": [
                "host_id",
                "pool_id"
            ],
            "properties": {
                "host_id": {
                    "description": "host id",
                    "type": "integer",
                    "format": "int64"
                },
                "pool_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSSearchGatewayResp": {
            "type": "object",
            "title": "OSSearchGatewayResp",
            "required": [
                "os_search_gateway"
            ],
            "properties": {
                "os_search_gateway": {
                    "$ref": "#/definitions/OSSearchGatewayRecord"
                }
            }
        },
        "OSSearchGatewaySamplesResp": {
            "type": "object",
            "title": "OSSearchGatewaySamplesResp",
            "required": [
                "os_search_gateway_samples"
            ],
            "properties": {
                "os_search_gateway_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSSearchGatewayStat"
                    }
                }
            }
        },
        "OSSearchGatewayStat": {
            "description": "OSSearchGatewayStat defines model os OS search gateway stat",
            "type": "object",
            "title": "OSSearchGatewayStat",
            "properties": {
                "cpu_util": {
                    "type": "number",
                    "format": "double"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "mem_usage_percent": {
                    "type": "number",
                    "format": "double"
                },
                "read_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "read_iops": {
                    "type": "number",
                    "format": "double"
                },
                "read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "write_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "write_iops": {
                    "type": "number",
                    "format": "double"
                },
                "write_latency_us": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "OSSearchGatewaysResp": {
            "type": "object",
            "title": "OSSearchGatewaysResp",
            "required": [
                "os_search_gateways"
            ],
            "properties": {
                "os_search_gateways": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSSearchGatewayRecord"
                    }
                }
            }
        },
        "OSStorageClass": {
            "description": "OSStorageClass is the model of os_storage_class\n+X:model:generate;plur=OSStorageClasses;with_detailed;order_by=ID;check_get=detailed\n+X:benchmark:",
            "type": "object",
            "title": "OSStorageClass",
            "properties": {
                "active_pool_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "class_id": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "inactive_pool_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "name": {
                    "type": "string"
                },
                "os_policy": {
                    "$ref": "#/definitions/ObjectStoragePolicy"
                },
                "os_policy_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OSStorageClassCreateReq": {
            "type": "object",
            "title": "OSStorageClassCreateReq",
            "properties": {
                "os_storage_class": {
                    "$ref": "#/definitions/OSStorageClass"
                }
            }
        },
        "OSStorageClassResp": {
            "type": "object",
            "title": "OSStorageClassResp",
            "properties": {
                "os_storage_class": {
                    "$ref": "#/definitions/OSStorageClass"
                }
            }
        },
        "OSStorageClassStat": {
            "description": "OSStorageClassStat define the os storage class or os external storage class\nstatistics of a user or bucket",
            "type": "object",
            "title": "OSStorageClassStat",
            "properties": {
                "allocated_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "allocated_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "cache_allocated_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "cache_allocated_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "class_name": {
                    "description": "ClassName used in GetObjectStorageUserSamples",
                    "type": "string"
                }
            }
        },
        "OSStorageClassUpdateReq": {
            "type": "object",
            "title": "OSStorageClassUpdateReq",
            "properties": {
                "os_storage_class": {
                    "$ref": "#/definitions/OSStorageClassUpdateReq_StorageClass"
                }
            }
        },
        "OSStorageClassUpdateReq_StorageClass": {
            "type": "object",
            "title": "OSStorageClassUpdateReq_StorageClass",
            "properties": {
                "active_pool_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "description": {
                    "type": "string"
                },
                "inactive_pool_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "OSStorageClassesResp": {
            "type": "object",
            "title": "OSStorageClassesResp",
            "properties": {
                "os_storage_classes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSStorageClass"
                    }
                }
            }
        },
        "OSUserProperties": {
            "description": "OSUserProperties contains properties for a os user.",
            "type": "object",
            "title": "OSUserProperties",
            "properties": {
                "area_code": {
                    "type": "string"
                },
                "contact_person": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                },
                "user_type": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSUserPropertiesReq": {
            "type": "object",
            "title": "OSUserPropertiesReq",
            "properties": {
                "area_code": {
                    "type": "string"
                },
                "contact_person": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                },
                "user_type": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OSZoneLock": {
            "description": "OSZoneLock defines model of os zone lock. +X:model:generate; +X:benchmark:",
            "type": "object",
            "title": "OSZoneLock",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "expired_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "key": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "uuid": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "OSZoneLockCreateReq": {
            "type": "object",
            "title": "OSZoneLockCreateReq",
            "properties": {
                "os_zone_lock": {
                    "$ref": "#/definitions/OSZoneLockCreateReq_Lock"
                }
            }
        },
        "OSZoneLockCreateReq_Lock": {
            "type": "object",
            "title": "OSZoneLockCreateReq_Lock",
            "required": [
                "resource_type",
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "description": "key of lock, for example name of os bucket",
                    "type": "string"
                },
                "resource_type": {
                    "description": "resource type of lock, including os_bucket",
                    "type": "string"
                },
                "value": {
                    "description": "value of lock, for example action of os bucket",
                    "type": "string"
                }
            }
        },
        "OSZoneLockResp": {
            "type": "object",
            "title": "OSZoneLockResp",
            "required": [
                "os_zone_lock"
            ],
            "properties": {
                "os_zone_lock": {
                    "$ref": "#/definitions/OSZoneLock"
                }
            }
        },
        "OSZoneLocksResp": {
            "type": "object",
            "title": "OSZoneLocksResp",
            "required": [
                "os_zone_locks"
            ],
            "properties": {
                "os_zone_locks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSZoneLock"
                    }
                }
            }
        },
        "OSZonePair": {
            "description": "OSZonePair contains relation info from source zone to target zone\n+X:model:generate;order_by=ID; +X:benchmark:",
            "type": "object",
            "title": "OSZonePair",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int64"
                },
                "clock_diff": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "source_zone_uuid": {
                    "type": "string"
                },
                "target_zone_uuid": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OSZonePairsResp": {
            "type": "object",
            "title": "OSZonePairsResp",
            "required": [
                "os_zone_pairs"
            ],
            "properties": {
                "os_zone_pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSZonePair"
                    }
                }
            }
        },
        "OSZonePairsUpdateReq": {
            "type": "object",
            "title": "OSZonePairsUpdateReq",
            "properties": {
                "os_zone": {
                    "$ref": "#/definitions/OSZonePairsUpdateReq_Zone"
                }
            }
        },
        "OSZonePairsUpdateReq_Zone": {
            "type": "object",
            "title": "OSZonePairsUpdateReq_Zone",
            "properties": {
                "target_zones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSZonePairsUpdateReq_Zone_TargetZones_Elt"
                    }
                }
            }
        },
        "OSZonePairsUpdateReq_Zone_TargetZones_Elt": {
            "type": "object",
            "title": "OSZonePairsUpdateReq_Zone_TargetZones_Elt",
            "required": [
                "zone_uuid",
                "clock_diff"
            ],
            "properties": {
                "clock_diff": {
                    "type": "integer",
                    "format": "int64"
                },
                "zone_uuid": {
                    "type": "string"
                }
            }
        },
        "OSZonePeriod": {
            "description": "OSZonePeriod records progressing of a zone group operation. +X:model:generate;\n+X:benchmark:",
            "type": "object",
            "title": "OSZonePeriod",
            "properties": {
                "action": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "master_os_zone_uuid": {
                    "type": "string"
                },
                "next_master_os_zone_uuid": {
                    "type": "string"
                },
                "period_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "OSZonePeriodResp": {
            "type": "object",
            "title": "OSZonePeriodResp",
            "required": [
                "os_zone_period"
            ],
            "properties": {
                "os_zone_period": {
                    "$ref": "#/definitions/OSZonePeriod"
                }
            }
        },
        "OSZonePeriodsResp": {
            "type": "object",
            "title": "OSZonePeriodsResp",
            "required": [
                "os_zone_periods"
            ],
            "properties": {
                "os_zone_periods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSZonePeriod"
                    }
                }
            }
        },
        "OSZoneTranslog": {
            "description": "OSZoneTranslog defines model of os zone translog.\n+X:model:generate;order_by=ID;etcd_lock; +X:benchmark:",
            "type": "object",
            "title": "OSZoneTranslog",
            "properties": {
                "action": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "resource_type": {
                    "type": "string"
                },
                "resource_uuid": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "OSZoneTranslogResp": {
            "type": "object",
            "title": "OSZoneTranslogResp",
            "properties": {
                "os_zone_translog": {
                    "$ref": "#/definitions/OSZoneTranslog"
                }
            }
        },
        "OSZoneTranslogsResp": {
            "type": "object",
            "title": "OSZoneTranslogsResp",
            "properties": {
                "os_zone_translogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSZoneTranslog"
                    }
                }
            }
        },
        "ObjectStorage": {
            "description": "ObjectStorage contains information of a object storage and it's stats.",
            "type": "object",
            "title": "ObjectStorage",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "cname_enabled": {
                    "type": "boolean"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dns_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "index_pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "lifecycle_end_on": {
                    "type": "string"
                },
                "lifecycle_start_on": {
                    "type": "string"
                },
                "multi_zone_enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "origin_pull_host_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "s3_lb_system_user_ak": {
                    "type": "string"
                },
                "s3_lb_system_user_sk": {
                    "type": "string"
                },
                "search_enabled": {
                    "type": "boolean"
                },
                "second_mergence_enabled": {
                    "type": "boolean"
                },
                "second_mergence_end_on": {
                    "type": "string"
                },
                "second_mergence_start_on": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tiering_host_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ObjectStorageBucket": {
            "description": "ObjectStorageBucket contains information of a object storage bucket and it's\nstats.",
            "type": "object",
            "title": "ObjectStorageBucket",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "all_user_permission": {
                    "type": "string"
                },
                "auth_user_permission": {
                    "type": "string"
                },
                "bucket_policy": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "delete_archive_storage_class": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "external_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "external_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "flag": {
                    "$ref": "#/definitions/BucketFlag"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "lifecycle": {
                    "$ref": "#/definitions/ObjectStorageLifecycle"
                },
                "local_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "log_delivery_permission": {
                    "type": "string"
                },
                "logging_enabled": {
                    "type": "boolean"
                },
                "logging_grants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OSBucketLoggingGrant"
                    }
                },
                "logging_owner": {
                    "$ref": "#/definitions/ObjectStorageUser_Nestview"
                },
                "logging_prefix": {
                    "type": "string"
                },
                "logging_suspended": {
                    "type": "boolean"
                },
                "logging_target_bucket": {
                    "$ref": "#/definitions/ObjectStorageBucket_Nestview"
                },
                "metadata_search_enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "nfs_client_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "object_cover": {
                    "$ref": "#/definitions/OSBucketObjectCoverConf"
                },
                "object_storage_class": {
                    "$ref": "#/definitions/OSBucketObjectStorageClass"
                },
                "os_replication_path_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_replication_zone_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "os_zone": {
                    "$ref": "#/definitions/ObjectStorageZone_Nestview"
                },
                "os_zone_uuid": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/ObjectStorageUser_Nestview"
                },
                "owner_permission": {
                    "type": "string"
                },
                "policy": {
                    "$ref": "#/definitions/ObjectStoragePolicy_Nestview"
                },
                "policy_enabled": {
                    "type": "boolean"
                },
                "qos": {
                    "$ref": "#/definitions/OSBucketQos"
                },
                "quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "remote_cluster": {
                    "$ref": "#/definitions/RemoteCluster_Nestview"
                },
                "replication_uuid": {
                    "description": "NOTE: Use name of bucket as replication uuid for simplicity",
                    "type": "string"
                },
                "restore_days": {
                    "type": "integer",
                    "format": "int64"
                },
                "shards": {
                    "type": "integer",
                    "format": "int64"
                },
                "specification_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "virtual": {
                    "type": "boolean"
                }
            }
        },
        "ObjectStorageBucketCreateReq": {
            "type": "object",
            "title": "ObjectStorageBucketCreateReq",
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/ObjectStorageBucketCreateReq_Bucket"
                }
            }
        },
        "ObjectStorageBucketCreateReq_Bucket": {
            "type": "object",
            "title": "ObjectStorageBucketCreateReq_Bucket",
            "required": [
                "name",
                "owner_id",
                "policy_id"
            ],
            "properties": {
                "all_user_permission": {
                    "description": "permission setting of all users",
                    "type": "string"
                },
                "auth_user_permission": {
                    "description": "permission setting of authenticated users",
                    "type": "string"
                },
                "delete_archive_storage_class": {
                    "description": "delete archive storage class",
                    "type": "string"
                },
                "description": {
                    "description": "bucket description",
                    "type": "string"
                },
                "external_quota_max_objects": {
                    "description": "max number of external storage objects",
                    "type": "integer",
                    "format": "int64"
                },
                "external_quota_max_size": {
                    "description": "max size of external storage objects",
                    "type": "integer",
                    "format": "int64"
                },
                "flag": {
                    "description": "bucket options",
                    "$ref": "#/definitions/BucketFlag"
                },
                "local_quota_max_objects": {
                    "description": "max number of local storage objects",
                    "type": "integer",
                    "format": "int64"
                },
                "local_quota_max_size": {
                    "description": "max size of local storage objects",
                    "type": "integer",
                    "format": "int64"
                },
                "log_delivery_permission": {
                    "description": "permission setting of log delivery group",
                    "type": "string"
                },
                "name": {
                    "description": "bucket name",
                    "type": "string"
                },
                "object_cover": {
                    "$ref": "#/definitions/OSBucketObjectCoverConf"
                },
                "object_storage_class": {
                    "description": "bucket object storage class",
                    "$ref": "#/definitions/OSBucketObjectStorageClass"
                },
                "owner_id": {
                    "description": "bucket owner",
                    "type": "integer",
                    "format": "int64"
                },
                "owner_permission": {
                    "description": "permission setting of owner",
                    "type": "string"
                },
                "policy_id": {
                    "description": "storage policy",
                    "type": "integer",
                    "format": "int64"
                },
                "quota_max_objects": {
                    "description": "max number of objects",
                    "type": "integer",
                    "format": "int64"
                },
                "quota_max_size": {
                    "description": "max size of all objects",
                    "type": "integer",
                    "format": "int64"
                },
                "restore_days": {
                    "description": "restore expiration days",
                    "type": "integer",
                    "format": "int64"
                },
                "specification_objects": {
                    "description": "specification objects",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ObjectStorageBucketNFSClient": {
            "description": "ObjectStorageBucketNFSClient defines nfs client",
            "type": "object",
            "title": "ObjectStorageBucketNFSClient",
            "properties": {
                "bucket": {
                    "$ref": "#/definitions/ObjectStorageBucket_Nestview"
                },
                "client": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "permission": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ObjectStorageBucketNFSClientResp": {
            "type": "object",
            "title": "ObjectStorageBucketNFSClientResp",
            "required": [
                "os_bucket_nfs_client"
            ],
            "properties": {
                "os_bucket_nfs_client": {
                    "description": "nfs client of object storage bucket",
                    "$ref": "#/definitions/ObjectStorageBucketNFSClient"
                }
            }
        },
        "ObjectStorageBucketNFSClientUpdateReq": {
            "type": "object",
            "title": "ObjectStorageBucketNFSClientUpdateReq",
            "required": [
                "os_bucket_nfs_client"
            ],
            "properties": {
                "os_bucket_nfs_client": {
                    "$ref": "#/definitions/ObjectStorageBucketNFSClientUpdateReq_Client"
                }
            }
        },
        "ObjectStorageBucketNFSClientUpdateReq_Client": {
            "type": "object",
            "title": "ObjectStorageBucketNFSClientUpdateReq_Client",
            "properties": {
                "permission": {
                    "type": "string"
                }
            }
        },
        "ObjectStorageBucketNFSClientsCreateReq": {
            "type": "object",
            "title": "ObjectStorageBucketNFSClientsCreateReq",
            "required": [
                "os_bucket_nfs_clients"
            ],
            "properties": {
                "os_bucket_nfs_clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageBucketNFSClientsCreateReq_Clients_Elt"
                    }
                }
            }
        },
        "ObjectStorageBucketNFSClientsCreateReq_Clients_Elt": {
            "type": "object",
            "title": "ObjectStorageBucketNFSClientsCreateReq_Clients_Elt",
            "required": [
                "client",
                "permission"
            ],
            "properties": {
                "client": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                }
            }
        },
        "ObjectStorageBucketNFSClientsDeleteReq": {
            "type": "object",
            "title": "ObjectStorageBucketNFSClientsDeleteReq",
            "required": [
                "client_ids"
            ],
            "properties": {
                "client_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ObjectStorageBucketNFSClientsResp": {
            "type": "object",
            "title": "ObjectStorageBucketNFSClientsResp",
            "required": [
                "os_bucket_nfs_clients"
            ],
            "properties": {
                "os_bucket_nfs_clients": {
                    "description": "nfs clients of object storage bucket",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageBucketNFSClient"
                    }
                }
            }
        },
        "ObjectStorageBucketRecord": {
            "description": "ObjectStorageBucketRecord is used to combine ObjectStorageBucket and\nObjectStorageBucketStat",
            "type": "object",
            "title": "ObjectStorageBucketRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/ObjectStorageBucket"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ObjectStorageBucketStat"
                            }
                        }
                    }
                }
            ]
        },
        "ObjectStorageBucketResp": {
            "type": "object",
            "title": "ObjectStorageBucketResp",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "description": "record of object storage bucket",
                    "$ref": "#/definitions/ObjectStorageBucketRecord"
                }
            }
        },
        "ObjectStorageBucketSamplesElem": {
            "type": "object",
            "title": "ObjectStorageBucketSamplesElem",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "paging": {
                    "$ref": "#/definitions/Paging"
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageBucketStat"
                    }
                }
            }
        },
        "ObjectStorageBucketSamplesResp": {
            "type": "object",
            "title": "ObjectStorageBucketSamplesResp",
            "required": [
                "os_bucket_samples"
            ],
            "properties": {
                "os_bucket_samples": {
                    "description": "object storage bucket samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageBucketStat"
                    }
                }
            }
        },
        "ObjectStorageBucketStat": {
            "description": "ObjectStorageBucketStat define the object storage bucket statistics",
            "type": "object",
            "title": "ObjectStorageBucketStat",
            "allOf": [
                {
                    "$ref": "#/definitions/OSSample"
                },
                {
                    "properties": {
                        "allocated_objects": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "allocated_size": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "cache_allocated_objects": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "cache_allocated_size": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "create": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "del_ops_pm": {
                            "type": "number",
                            "format": "double"
                        },
                        "down_latency_us": {
                            "type": "number",
                            "format": "double"
                        },
                        "external_allocated_objects": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "external_allocated_size": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "latency_down": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "latency_up": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "list_ops_pm": {
                            "type": "number",
                            "format": "double"
                        },
                        "local_allocated_objects": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "local_allocated_size": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "num_down": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "num_up": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "rx_bandwidth_kbyte": {
                            "type": "number",
                            "format": "double"
                        },
                        "rx_ops_pm": {
                            "type": "number",
                            "format": "double"
                        },
                        "storage_classes": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/OSStorageClassStat"
                            }
                        },
                        "total_del_ops": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "total_del_success_ops": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "total_rx_bytes": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "total_rx_ops": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "total_rx_success_ops": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "total_tx_bytes": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "total_tx_ops": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "total_tx_success_ops": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "tx_bandwidth_kbyte": {
                            "type": "number",
                            "format": "double"
                        },
                        "tx_ops_pm": {
                            "type": "number",
                            "format": "double"
                        },
                        "up_latency_us": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                }
            ]
        },
        "ObjectStorageBucketUpdateReq": {
            "type": "object",
            "title": "ObjectStorageBucketUpdateReq",
            "properties": {
                "os_bucket": {
                    "$ref": "#/definitions/ObjectStorageBucketUpdateReq_Bucket"
                }
            }
        },
        "ObjectStorageBucketUpdateReq_Bucket": {
            "type": "object",
            "title": "ObjectStorageBucketUpdateReq_Bucket",
            "properties": {
                "all_user_permission": {
                    "type": "string"
                },
                "auth_user_permission": {
                    "type": "string"
                },
                "delete_archive_storage_class": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "external_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "external_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "flag": {
                    "$ref": "#/definitions/BucketFlagReq"
                },
                "local_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "log_delivery_permission": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "owner_permission": {
                    "type": "string"
                },
                "qos": {
                    "$ref": "#/definitions/OSBucketQos"
                },
                "quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "restore_days": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ObjectStorageBucket_Nestview": {
            "type": "object",
            "title": "ObjectStorageBucket_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "lifecycle": {
                    "type": "object",
                    "properties": {
                        "cluster": {
                            "$ref": "#/definitions/Cluster_Nestview"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "rules": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        },
                        "status": {
                            "type": "string"
                        }
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ObjectStorageBucketsResp": {
            "type": "object",
            "title": "ObjectStorageBucketsResp",
            "required": [
                "os_buckets"
            ],
            "properties": {
                "os_buckets": {
                    "description": "records of object storage bucket",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageBucketRecord"
                    }
                }
            }
        },
        "ObjectStorageGateway": {
            "description": "ObjectStorageGateway contains information of a object storage gateway and it's\nstats.",
            "type": "object",
            "title": "ObjectStorageGateway",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "etag": {
                    "type": "string"
                },
                "gateway_ip": {
                    "type": "string"
                },
                "gateway_name": {
                    "type": "string"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "os_zone": {
                    "$ref": "#/definitions/ObjectStorageZone_Nestview"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ObjectStorageGatewayCreateReq": {
            "type": "object",
            "title": "ObjectStorageGatewayCreateReq",
            "properties": {
                "os_gateway": {
                    "$ref": "#/definitions/ObjectStorageGatewayCreateReq_Gateway"
                }
            }
        },
        "ObjectStorageGatewayCreateReq_Gateway": {
            "type": "object",
            "title": "ObjectStorageGatewayCreateReq_Gateway",
            "required": [
                "name",
                "host_id",
                "port"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "gateway_ip": {
                    "type": "string"
                },
                "host_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "ObjectStorageGatewayRecord": {
            "description": "ObjectStorageGatewayRecord combine ObjectStorageGateway and\nObjectStorageGatewayStat as API response",
            "type": "object",
            "title": "ObjectStorageGatewayRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/ObjectStorageGateway"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ObjectStorageGatewayStat"
                            }
                        }
                    }
                }
            ]
        },
        "ObjectStorageGatewayResp": {
            "type": "object",
            "title": "ObjectStorageGatewayResp",
            "required": [
                "os_gateway"
            ],
            "properties": {
                "os_gateway": {
                    "description": "object storage gateway",
                    "$ref": "#/definitions/ObjectStorageGatewayRecord"
                }
            }
        },
        "ObjectStorageGatewaySamplesResp": {
            "type": "object",
            "title": "ObjectStorageGatewaySamplesResp",
            "required": [
                "os_gateway_samples"
            ],
            "properties": {
                "os_gateway_samples": {
                    "description": "object storage gateway samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageGatewayStat"
                    }
                }
            }
        },
        "ObjectStorageGatewayStat": {
            "description": "ObjectStorageGatewayStat is the model of object_storage_gateway_stat",
            "type": "object",
            "title": "ObjectStorageGatewayStat",
            "properties": {
                "cpu_util": {
                    "type": "number",
                    "format": "double"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "down_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "down_ops": {
                    "type": "number",
                    "format": "double"
                },
                "mem_usage_percent": {
                    "type": "number",
                    "format": "double"
                },
                "merge_speed": {
                    "type": "integer",
                    "format": "int64"
                },
                "requests": {
                    "type": "integer",
                    "format": "int64"
                },
                "sync_down_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "sync_down_ops": {
                    "type": "number",
                    "format": "double"
                },
                "up_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "up_ops": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ObjectStorageGatewayUpdateReq": {
            "type": "object",
            "title": "ObjectStorageGatewayUpdateReq",
            "properties": {
                "os_gateway": {
                    "$ref": "#/definitions/ObjectStorageGatewayUpdateReq_Gateway"
                }
            }
        },
        "ObjectStorageGatewayUpdateReq_Gateway": {
            "type": "object",
            "title": "ObjectStorageGatewayUpdateReq_Gateway",
            "properties": {
                "action": {
                    "type": "string"
                }
            }
        },
        "ObjectStorageGatewaysResp": {
            "type": "object",
            "title": "ObjectStorageGatewaysResp",
            "required": [
                "os_gateways"
            ],
            "properties": {
                "os_gateways": {
                    "description": "object storage gateways",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageGatewayRecord"
                    }
                }
            }
        },
        "ObjectStorageInitReq": {
            "type": "object",
            "title": "ObjectStorageInitReq",
            "required": [
                "object_storage"
            ],
            "properties": {
                "object_storage": {
                    "$ref": "#/definitions/ObjectStorageInitReq_Info"
                }
            }
        },
        "ObjectStorageInitReq_Info": {
            "type": "object",
            "title": "ObjectStorageInitReq_Info",
            "required": [
                "pool_id"
            ],
            "properties": {
                "pool_id": {
                    "description": "system pool id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ObjectStorageKey": {
            "description": "ObjectStorageKey defines access key and secret key for object storage\n+X:model:generate;with_detailed;etcd_lock +X:benchmark:",
            "type": "object",
            "title": "ObjectStorageKey",
            "properties": {
                "access_key": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "reserved": {
                    "type": "boolean"
                },
                "secret_key": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/ObjectStorageUser_Nestview"
                }
            }
        },
        "ObjectStorageKeyCreateReq": {
            "type": "object",
            "title": "ObjectStorageKeyCreateReq",
            "properties": {
                "os_key": {
                    "$ref": "#/definitions/ObjectStorageKeyCreateReq_Key"
                }
            }
        },
        "ObjectStorageKeyCreateReq_Key": {
            "type": "object",
            "title": "ObjectStorageKeyCreateReq_Key",
            "required": [
                "user_id",
                "access_key"
            ],
            "properties": {
                "access_key": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ObjectStorageKeyResp": {
            "type": "object",
            "title": "ObjectStorageKeyResp",
            "required": [
                "os_key"
            ],
            "properties": {
                "os_key": {
                    "description": "object storage key",
                    "$ref": "#/definitions/ObjectStorageKey"
                }
            }
        },
        "ObjectStorageKeyUpdateReq": {
            "type": "object",
            "title": "ObjectStorageKeyUpdateReq",
            "properties": {
                "os_key": {
                    "$ref": "#/definitions/ObjectStorageKeyUpdateReq_Key"
                }
            }
        },
        "ObjectStorageKeyUpdateReq_Key": {
            "type": "object",
            "title": "ObjectStorageKeyUpdateReq_Key",
            "properties": {
                "secret_key": {
                    "type": "string"
                }
            }
        },
        "ObjectStorageKey_Nestview": {
            "type": "object",
            "title": "ObjectStorageKey_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ObjectStorageKeysResp": {
            "type": "object",
            "title": "ObjectStorageKeysResp",
            "required": [
                "os_keys"
            ],
            "properties": {
                "os_keys": {
                    "description": "object storage keys",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageKey"
                    }
                }
            }
        },
        "ObjectStorageLifecycle": {
            "description": "ObjectStorageLifecycle is the model of object_storage_lifecycle\n+X:model:generate; +X:benchmark:",
            "type": "object",
            "title": "ObjectStorageLifecycle",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "ObjectStorageLifecycleResp": {
            "type": "object",
            "title": "ObjectStorageLifecycleResp",
            "required": [
                "os_lifecycle"
            ],
            "properties": {
                "os_lifecycle": {
                    "description": "object storage lifecycle",
                    "$ref": "#/definitions/ObjectStorageLifecycle"
                }
            }
        },
        "ObjectStorageLifecycleSetReq": {
            "type": "object",
            "title": "ObjectStorageLifecycleSetReq",
            "properties": {
                "lifecycle_rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LifecycleRule"
                    }
                }
            }
        },
        "ObjectStorageLifecyclesResp": {
            "type": "object",
            "title": "ObjectStorageLifecyclesResp",
            "required": [
                "os_lifecycles"
            ],
            "properties": {
                "os_lifecycles": {
                    "description": "object storage lifecycles",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageLifecycle"
                    }
                }
            }
        },
        "ObjectStoragePoliciesResp": {
            "type": "object",
            "title": "ObjectStoragePoliciesResp",
            "required": [
                "os_policies"
            ],
            "properties": {
                "os_policies": {
                    "description": "object storage policies",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStoragePolicy"
                    }
                }
            }
        },
        "ObjectStoragePolicy": {
            "description": "ObjectStoragePolicy is the model of object_storage_policy\n+X:model:generate;plur=ObjectStoragePolicies;with_detailed;etcd_lock;\n+X:benchmark:",
            "type": "object",
            "title": "ObjectStoragePolicy",
            "properties": {
                "bucket_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cache_pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "compress": {
                    "type": "boolean"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "crypto": {
                    "type": "boolean"
                },
                "deduplication": {
                    "type": "boolean"
                },
                "default": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "index_pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "name": {
                    "type": "string"
                },
                "object_size_threshold": {
                    "type": "integer",
                    "format": "int64"
                },
                "policy_name": {
                    "type": "string"
                },
                "shared": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ObjectStoragePolicyCreateReq": {
            "type": "object",
            "title": "ObjectStoragePolicyCreateReq",
            "properties": {
                "os_policy": {
                    "$ref": "#/definitions/ObjectStoragePolicyCreateReq_Policy"
                }
            }
        },
        "ObjectStoragePolicyCreateReq_Policy": {
            "type": "object",
            "title": "ObjectStoragePolicyCreateReq_Policy",
            "required": [
                "name",
                "index_pool_id",
                "storage_classes"
            ],
            "properties": {
                "cache_pool_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "compress": {
                    "type": "boolean"
                },
                "crypto": {
                    "type": "boolean"
                },
                "deduplication": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "index_pool_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "shared": {
                    "type": "boolean"
                },
                "storage_classes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStoragePolicyCreateReq_Policy_StorageClasses_Elt"
                    }
                }
            }
        },
        "ObjectStoragePolicyCreateReq_Policy_StorageClasses_Elt": {
            "type": "object",
            "title": "ObjectStoragePolicyCreateReq_Policy_StorageClasses_Elt",
            "required": [
                "name",
                "active_pool_ids"
            ],
            "properties": {
                "active_pool_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "class": {
                    "type": "integer",
                    "format": "int32"
                },
                "class_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "inactive_pool_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ObjectStoragePolicyResp": {
            "type": "object",
            "title": "ObjectStoragePolicyResp",
            "required": [
                "os_policy"
            ],
            "properties": {
                "os_policy": {
                    "description": "object storage policy",
                    "$ref": "#/definitions/ObjectStoragePolicy"
                }
            }
        },
        "ObjectStoragePolicyStat": {
            "description": "ObjectStoragePolicyStat define the object storage policy statistics of a user",
            "type": "object",
            "title": "ObjectStoragePolicyStat",
            "properties": {
                "storage_classes": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/OSStorageClassStat"
                    }
                }
            }
        },
        "ObjectStoragePolicyUpdateReq": {
            "type": "object",
            "title": "ObjectStoragePolicyUpdateReq",
            "properties": {
                "os_policy": {
                    "$ref": "#/definitions/ObjectStoragePolicyUpdateReq_Policy"
                }
            }
        },
        "ObjectStoragePolicyUpdateReq_Policy": {
            "type": "object",
            "title": "ObjectStoragePolicyUpdateReq_Policy",
            "properties": {
                "cache_pool_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "compress": {
                    "type": "boolean"
                },
                "crypto": {
                    "type": "boolean"
                },
                "deduplication": {
                    "type": "boolean"
                },
                "default": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "shared": {
                    "type": "boolean"
                }
            }
        },
        "ObjectStoragePolicy_Nestview": {
            "type": "object",
            "title": "ObjectStoragePolicy_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ObjectStorageRecord": {
            "description": "ObjectStorageRecord combine ObjectStorage and ObjectStorageStat as API response",
            "type": "object",
            "title": "ObjectStorageRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/ObjectStorage"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ObjectStorageStat"
                            }
                        }
                    }
                }
            ]
        },
        "ObjectStorageResp": {
            "type": "object",
            "title": "ObjectStorageResp",
            "properties": {
                "object_storage": {
                    "description": "object storage",
                    "$ref": "#/definitions/ObjectStorageRecord"
                }
            }
        },
        "ObjectStorageSamplesResp": {
            "type": "object",
            "title": "ObjectStorageSamplesResp",
            "properties": {
                "object_storage_samples": {
                    "description": "object storage samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageStat"
                    }
                }
            }
        },
        "ObjectStorageSetDNSNamesReq": {
            "type": "object",
            "title": "ObjectStorageSetDNSNamesReq",
            "required": [
                "object_storage"
            ],
            "properties": {
                "object_storage": {
                    "$ref": "#/definitions/ObjectStorageSetDNSNamesReq_Info"
                }
            }
        },
        "ObjectStorageSetDNSNamesReq_Info": {
            "type": "object",
            "title": "ObjectStorageSetDNSNamesReq_Info",
            "properties": {
                "cname_enabled": {
                    "type": "boolean"
                },
                "dns_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ObjectStorageSetFunctionEnableHostsReq": {
            "type": "object",
            "title": "ObjectStorageSetFunctionEnableHostsReq",
            "required": [
                "object_storage"
            ],
            "properties": {
                "object_storage": {
                    "$ref": "#/definitions/ObjectStorageSetFunctionEnableHostsReq_Info"
                }
            }
        },
        "ObjectStorageSetFunctionEnableHostsReq_Info": {
            "type": "object",
            "title": "ObjectStorageSetFunctionEnableHostsReq_Info",
            "properties": {
                "host_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "ObjectStorageSetReq": {
            "type": "object",
            "title": "ObjectStorageSetReq",
            "required": [
                "object_storage"
            ],
            "properties": {
                "object_storage": {
                    "$ref": "#/definitions/ObjectStorageSetReq_Info"
                }
            }
        },
        "ObjectStorageSetReq_Info": {
            "type": "object",
            "title": "ObjectStorageSetReq_Info",
            "properties": {
                "lifecycle_end_on": {
                    "description": "lifecycle end execute time",
                    "type": "string"
                },
                "lifecycle_start_on": {
                    "description": "lifecycle start execute time",
                    "type": "string"
                },
                "second_mergence_enabled": {
                    "description": "SecondMergenceEnabled enable second mergence or not",
                    "type": "boolean"
                },
                "second_mergence_end_on": {
                    "description": "SecondMergenceEndOn indicates second mergence end time",
                    "type": "string"
                },
                "second_mergence_start_on": {
                    "description": "SecondMergenceStartOn indicates second mergence start time",
                    "type": "string"
                }
            }
        },
        "ObjectStorageStat": {
            "description": "ObjectStorageStat defines stat of object storage",
            "type": "object",
            "title": "ObjectStorageStat",
            "properties": {
                "allocated_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "allocated_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "external_allocated_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "external_allocated_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_allocated_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_allocated_size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ObjectStorageUser": {
            "description": "ObjectStorageUser contains information of a object storage user and it's stats.",
            "type": "object",
            "title": "ObjectStorageUser",
            "properties": {
                "bucket_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "bucket_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "bucket_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_bucket_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "external_bucket_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "external_user_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "external_user_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_bucket_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_bucket_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_user_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_user_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "location_constraint_enabled": {
                    "type": "boolean"
                },
                "max_buckets": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "op_mask": {
                    "type": "string"
                },
                "parent": {
                    "$ref": "#/definitions/ObjectStorageUser_Nestview"
                },
                "policy": {
                    "$ref": "#/definitions/ObjectStoragePolicy_Nestview"
                },
                "policy_polling_enabled": {
                    "type": "boolean"
                },
                "properties": {
                    "$ref": "#/definitions/OSUserProperties"
                },
                "status": {
                    "type": "string"
                },
                "suspended": {
                    "type": "boolean"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "user_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ObjectStorageUserCreateReq": {
            "type": "object",
            "title": "ObjectStorageUserCreateReq",
            "properties": {
                "os_user": {
                    "$ref": "#/definitions/ObjectStorageUserCreateReq_Info"
                }
            }
        },
        "ObjectStorageUserCreateReq_Info": {
            "type": "object",
            "title": "ObjectStorageUserCreateReq_Info",
            "required": [
                "name"
            ],
            "properties": {
                "bucket_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "bucket_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "description": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_bucket_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "external_bucket_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "external_user_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "external_user_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageKey"
                    }
                },
                "local_bucket_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_bucket_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_user_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_user_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "location_constraint_enabled": {
                    "type": "boolean"
                },
                "max_buckets": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "op_mask": {
                    "type": "string"
                },
                "policy_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "policy_polling_enabled": {
                    "type": "boolean"
                },
                "properties": {
                    "$ref": "#/definitions/OSUserPropertiesReq"
                },
                "user_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "user_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ObjectStorageUserRecord": {
            "description": "ObjectStorageUserRecord is used to combine ObjectStorageUser and\nObjectStorageUserStat",
            "type": "object",
            "title": "ObjectStorageUserRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/ObjectStorageUser"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ObjectStorageUserStat"
                            }
                        }
                    }
                }
            ]
        },
        "ObjectStorageUserResp": {
            "type": "object",
            "title": "ObjectStorageUserResp",
            "required": [
                "os_user"
            ],
            "properties": {
                "os_user": {
                    "description": "object storage user",
                    "$ref": "#/definitions/ObjectStorageUserRecord"
                }
            }
        },
        "ObjectStorageUserSamplesResp": {
            "type": "object",
            "title": "ObjectStorageUserSamplesResp",
            "required": [
                "os_user_samples"
            ],
            "properties": {
                "os_user_samples": {
                    "description": "object storage user samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageUserStat"
                    }
                }
            }
        },
        "ObjectStorageUserStat": {
            "description": "ObjectStorageUserStat define the object storage user statistics",
            "type": "object",
            "title": "ObjectStorageUserStat",
            "properties": {
                "allocated_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "allocated_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "cache_allocated_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "cache_allocated_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "del_ops_pm": {
                    "type": "number",
                    "format": "double"
                },
                "external_allocated_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "external_allocated_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_allocated_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_allocated_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "policies": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ObjectStoragePolicyStat"
                    }
                },
                "rx_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "rx_ops_pm": {
                    "type": "number",
                    "format": "double"
                },
                "total_del_ops": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_del_success_ops": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_rx_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_rx_ops": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_rx_success_ops": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_tx_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_tx_ops": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_tx_success_ops": {
                    "type": "integer",
                    "format": "int64"
                },
                "tx_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "tx_ops_pm": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ObjectStorageUserUpdateReq": {
            "type": "object",
            "title": "ObjectStorageUserUpdateReq",
            "properties": {
                "os_user": {
                    "$ref": "#/definitions/ObjectStorageUserUpdateReq_Info"
                }
            }
        },
        "ObjectStorageUserUpdateReq_Info": {
            "type": "object",
            "title": "ObjectStorageUserUpdateReq_Info",
            "properties": {
                "bucket_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "bucket_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "description": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_bucket_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "external_bucket_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "external_user_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "external_user_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_bucket_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_bucket_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_user_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "local_user_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "location_constraint_enabled": {
                    "type": "boolean"
                },
                "max_buckets": {
                    "type": "integer",
                    "format": "int64"
                },
                "op_mask": {
                    "type": "string"
                },
                "policy_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "policy_polling_enabled": {
                    "type": "boolean"
                },
                "properties": {
                    "$ref": "#/definitions/OSUserPropertiesReq"
                },
                "suspended": {
                    "type": "boolean"
                },
                "user_quota_max_objects": {
                    "type": "integer",
                    "format": "int64"
                },
                "user_quota_max_size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ObjectStorageUser_Nestview": {
            "type": "object",
            "title": "ObjectStorageUser_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ObjectStorageUsersResp": {
            "type": "object",
            "title": "ObjectStorageUsersResp",
            "required": [
                "os_users"
            ],
            "properties": {
                "os_users": {
                    "description": "object storage users",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageUserRecord"
                    }
                }
            }
        },
        "ObjectStorageZone": {
            "description": "ObjectStorageZone contains information of a object storage zone and it's stats.",
            "type": "object",
            "title": "ObjectStorageZone",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "connected": {
                    "type": "boolean"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "epoch_uuid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "local": {
                    "type": "boolean"
                },
                "master": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "realm_name": {
                    "type": "string"
                },
                "remote_cluster": {
                    "$ref": "#/definitions/RemoteCluster_Nestview"
                },
                "s3_load_balancer_group": {
                    "$ref": "#/definitions/S3LoadBalancerGroup_Nestview"
                },
                "search_zone_uuid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "switch_status": {
                    "type": "string"
                },
                "system_access_key": {
                    "type": "string"
                },
                "system_secret_key": {
                    "type": "string"
                },
                "system_user": {
                    "type": "string"
                },
                "tier_type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "uuid": {
                    "type": "string"
                },
                "zonegroup_name": {
                    "type": "string"
                }
            }
        },
        "ObjectStorageZoneCreateReq": {
            "type": "object",
            "title": "ObjectStorageZoneCreateReq",
            "properties": {
                "os_zone": {
                    "$ref": "#/definitions/ObjectStorageZoneCreateReq_Zone"
                }
            }
        },
        "ObjectStorageZoneCreateReq_Zone": {
            "type": "object",
            "title": "ObjectStorageZoneCreateReq_Zone",
            "required": [
                "master",
                "remote_cluster_id"
            ],
            "properties": {
                "alias": {
                    "description": "os zone alias",
                    "type": "string"
                },
                "master": {
                    "description": "is a master zone",
                    "type": "boolean"
                },
                "remote_cluster_id": {
                    "description": "remote cluster id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ObjectStorageZoneRecord": {
            "description": "ObjectStorageZoneRecord combine ObjectStorageZone and ObjectStorageZoneStat as\nAPI response",
            "type": "object",
            "title": "ObjectStorageZoneRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/ObjectStorageZone"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ObjectStorageZoneStat"
                            }
                        }
                    }
                }
            ]
        },
        "ObjectStorageZoneRecordResp": {
            "type": "object",
            "title": "ObjectStorageZoneRecordResp",
            "properties": {
                "os_zone": {
                    "$ref": "#/definitions/ObjectStorageZoneRecord"
                }
            }
        },
        "ObjectStorageZoneResp": {
            "type": "object",
            "title": "ObjectStorageZoneResp",
            "properties": {
                "os_zone": {
                    "$ref": "#/definitions/ObjectStorageZone"
                }
            }
        },
        "ObjectStorageZoneSamplesResp": {
            "type": "object",
            "title": "ObjectStorageZoneSamplesResp",
            "required": [
                "os_zone_samples"
            ],
            "properties": {
                "os_zone_samples": {
                    "description": "object storage zone samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageZoneStat"
                    }
                }
            }
        },
        "ObjectStorageZoneStat": {
            "description": "ObjectStorageZoneStat contains info of os zone",
            "type": "object",
            "title": "ObjectStorageZoneStat",
            "properties": {
                "bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "object_kbytes_ps": {
                    "type": "number",
                    "format": "double"
                },
                "objects_pm": {
                    "type": "number",
                    "format": "double"
                },
                "total_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_object_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_objects": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ObjectStorageZone_Nestview": {
            "type": "object",
            "title": "ObjectStorageZone_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "ObjectStorageZonesRecordResp": {
            "type": "object",
            "title": "ObjectStorageZonesRecordResp",
            "properties": {
                "os_zones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectStorageZoneRecord"
                    }
                }
            }
        },
        "OpHostsZoneReq": {
            "type": "object",
            "title": "OpHostsZoneReq",
            "properties": {
                "hosts_zone_info": {
                    "$ref": "#/definitions/OpHostsZoneReq_HostsZoneInfo"
                }
            }
        },
        "OpHostsZoneReq_HostsZoneInfo": {
            "type": "object",
            "title": "OpHostsZoneReq_HostsZoneInfo",
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "zone": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OriginConf": {
            "description": "OriginConf defines some others origin configuration",
            "type": "object",
            "title": "OriginConf",
            "properties": {
                "class_id": {
                    "type": "string"
                },
                "class_name": {
                    "type": "string"
                },
                "delete_origin": {
                    "type": "boolean"
                },
                "expiration_days": {
                    "type": "integer",
                    "format": "int64"
                },
                "follow_redirect": {
                    "type": "boolean"
                },
                "policy_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "redirect_code": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OriginInfo": {
            "description": "OriginInfo defines os origin info",
            "type": "object",
            "title": "OriginInfo",
            "properties": {
                "access_key": {
                    "type": "string"
                },
                "authentication": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "directory": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "host_style": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "platform_type": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "Osd": {
            "description": "Osd contains information of a osd and it's stats.",
            "type": "object",
            "title": "Osd",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "bind_osd_group": {
                    "$ref": "#/definitions/OsdGroup_Nestview"
                },
                "bind_pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "data_dir": {
                    "type": "string"
                },
                "disk": {
                    "$ref": "#/definitions/Disk"
                },
                "exit_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "exit_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "in": {
                    "type": "boolean"
                },
                "init_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "last_scrub_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "meta_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "min_alloc_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "numa_node": {
                    "type": "integer",
                    "format": "int64"
                },
                "omap_byte": {
                    "type": "integer",
                    "format": "int64"
                },
                "osd_group": {
                    "$ref": "#/definitions/OsdGroup_Nestview"
                },
                "osd_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "osp_metadata_cluster": {
                    "$ref": "#/definitions/OspMetadataCluster"
                },
                "osp_partition_type": {
                    "description": "see Partition.Type",
                    "type": "string"
                },
                "partition": {
                    "$ref": "#/definitions/Partition"
                },
                "pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "read_cache_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "status_class": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "up": {
                    "type": "boolean"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "OsdCreateReq": {
            "type": "object",
            "title": "OsdCreateReq",
            "properties": {
                "osd": {
                    "$ref": "#/definitions/OsdCreateReq_Osd"
                }
            }
        },
        "OsdCreateReq_Osd": {
            "type": "object",
            "title": "OsdCreateReq_Osd",
            "properties": {
                "bind_pool_id": {
                    "description": "bind pool id",
                    "type": "integer",
                    "format": "int64"
                },
                "disk_id": {
                    "description": "data disk id",
                    "type": "integer",
                    "format": "int64"
                },
                "min_alloc_size": {
                    "description": "for xstore_min_alloc_size_hdd/xstore_min_alloc_size_ssd",
                    "type": "integer",
                    "format": "int64"
                },
                "omap_byte": {
                    "description": "size of omap partition",
                    "type": "integer",
                    "format": "int64"
                },
                "partition_id": {
                    "description": "cache partition id",
                    "type": "integer",
                    "format": "int64"
                },
                "read_cache_size": {
                    "description": "read cache size in bytes",
                    "type": "integer",
                    "format": "int64"
                },
                "role": {
                    "description": "osd role: \"data\" or \"index\", default is \"data\"",
                    "type": "string"
                }
            }
        },
        "OsdGroup": {
            "description": "OsdGroup contains information of a osd group and it's stats.",
            "type": "object",
            "title": "OsdGroup",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "device_type": {
                    "type": "string"
                },
                "device_type_check_disabled": {
                    "type": "boolean"
                },
                "failure_domain_type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "numa_bind_policy": {
                    "type": "string"
                },
                "numa_enabled": {
                    "type": "boolean"
                },
                "osd_async_recovery_max_updates": {
                    "type": "integer",
                    "format": "int64"
                },
                "osd_full_ratio": {
                    "type": "number",
                    "format": "double"
                },
                "osd_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Pool_Nestview"
                    }
                },
                "qos": {
                    "$ref": "#/definitions/OsdQos"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OsdGroupOsdsUpdateReq": {
            "type": "object",
            "title": "OsdGroupOsdsUpdateReq",
            "required": [
                "osd_group"
            ],
            "properties": {
                "osd_group": {
                    "$ref": "#/definitions/OsdGroupOsdsUpdateReq_OsdGroup"
                }
            }
        },
        "OsdGroupOsdsUpdateReq_OsdGroup": {
            "type": "object",
            "title": "OsdGroupOsdsUpdateReq_OsdGroup",
            "required": [
                "osd_ids"
            ],
            "properties": {
                "osd_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "OsdGroupRecord": {
            "description": "OsdGroupRecord combine OsdGroup and OsdGroupStat as API response",
            "type": "object",
            "title": "OsdGroupRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/OsdGroup"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OsdGroupStat"
                            }
                        }
                    }
                }
            ]
        },
        "OsdGroupResp": {
            "type": "object",
            "title": "OsdGroupResp",
            "properties": {
                "osd_group": {
                    "$ref": "#/definitions/OsdGroupRecord"
                }
            }
        },
        "OsdGroupSamplesResp": {
            "type": "object",
            "title": "OsdGroupSamplesResp",
            "required": [
                "osd_group_samples"
            ],
            "properties": {
                "osd_group_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OsdGroupStat"
                    }
                }
            }
        },
        "OsdGroupSetQosReq": {
            "type": "object",
            "title": "OsdGroupSetQosReq",
            "required": [
                "osd_group"
            ],
            "properties": {
                "osd_group": {
                    "$ref": "#/definitions/OsdGroupSetQosReq_OsdGroup"
                }
            }
        },
        "OsdGroupSetQosReq_OsdGroup": {
            "type": "object",
            "title": "OsdGroupSetQosReq_OsdGroup",
            "required": [
                "qos"
            ],
            "properties": {
                "qos": {
                    "$ref": "#/definitions/OsdQos"
                }
            }
        },
        "OsdGroupStat": {
            "description": "OsdGroupStat defines stat of a osd group",
            "type": "object",
            "title": "OsdGroupStat",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "max_available_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "min_available_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OsdGroup_Nestview": {
            "type": "object",
            "title": "OsdGroup_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "numa_enabled": {
                    "type": "boolean"
                }
            }
        },
        "OsdGroupsResp": {
            "type": "object",
            "title": "OsdGroupsResp",
            "properties": {
                "osd_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OsdGroupRecord"
                    }
                }
            }
        },
        "OsdOverview": {
            "type": "object",
            "title": "OsdOverview",
            "required": [
                "active_num",
                "warn_num",
                "error_num",
                "offline_num",
                "doing_num",
                "warn_usage_num",
                "critical_usage_num",
                "data_num",
                "index_num",
                "compound_num",
                "tier_cache_num",
                "tier_data_num",
                "hdd_type_num",
                "ssd_type_num",
                "hybrid_type_num"
            ],
            "properties": {
                "active_num": {
                    "description": "status",
                    "type": "integer",
                    "format": "int64"
                },
                "compound_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "critical_usage_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_num": {
                    "description": "role",
                    "type": "integer",
                    "format": "int64"
                },
                "doing_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "error_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "hdd_type_num": {
                    "description": "disk type",
                    "type": "integer",
                    "format": "int64"
                },
                "hybrid_type_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "index_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "offline_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "ssd_type_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "tier_cache_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "tier_data_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "warn_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "warn_usage_num": {
                    "description": "usage",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OsdOverviewResp": {
            "type": "object",
            "title": "OsdOverviewResp",
            "properties": {
                "osd_overview": {
                    "$ref": "#/definitions/OsdOverview"
                }
            }
        },
        "OsdPredictionsResp": {
            "type": "object",
            "title": "OsdPredictionsResp",
            "required": [
                "osd_predictions"
            ],
            "properties": {
                "osd_predictions": {
                    "description": "osd predictions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DiskPrediction"
                    }
                }
            }
        },
        "OsdQos": {
            "description": "OsdQos defines qos for osd",
            "type": "object",
            "title": "OsdQos",
            "properties": {
                "bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "bandwidth_max": {
                    "type": "integer",
                    "format": "int64"
                },
                "client_threshold": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "mode": {
                    "type": "integer",
                    "format": "int64"
                },
                "recovery_rate_type": {
                    "type": "string"
                }
            }
        },
        "OsdRebuildReq": {
            "type": "object",
            "title": "OsdRebuildReq",
            "properties": {
                "osd": {
                    "$ref": "#/definitions/OsdRebuildReq_Osd"
                }
            }
        },
        "OsdRebuildReq_Osd": {
            "type": "object",
            "title": "OsdRebuildReq_Osd",
            "properties": {
                "new_disk_id": {
                    "description": "new data disk id",
                    "type": "integer",
                    "format": "int64"
                },
                "new_min_alloc_size": {
                    "description": "see OsdCreateReq.Osd.MinAllocSize",
                    "type": "integer",
                    "format": "int64"
                },
                "new_omap_byte": {
                    "description": "new size of omap partition",
                    "type": "integer",
                    "format": "int64"
                },
                "new_partition_id": {
                    "description": "new cache partition id",
                    "type": "integer",
                    "format": "int64"
                },
                "new_read_cache_size": {
                    "description": "new read cache size in bytes",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OsdRecord": {
            "description": "OsdRecord contains information of a osd",
            "type": "object",
            "title": "OsdRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/Osd"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OsdStat"
                            }
                        }
                    }
                }
            ]
        },
        "OsdResp": {
            "type": "object",
            "title": "OsdResp",
            "required": [
                "osd"
            ],
            "properties": {
                "osd": {
                    "description": "osd",
                    "$ref": "#/definitions/OsdRecord"
                }
            }
        },
        "OsdSamplesResp": {
            "type": "object",
            "title": "OsdSamplesResp",
            "required": [
                "osd_samples"
            ],
            "properties": {
                "osd_samples": {
                    "description": "osd samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OsdStat"
                    }
                }
            }
        },
        "OsdStat": {
            "description": "OsdStat defines the basic info of a OsdStat",
            "type": "object",
            "title": "OsdStat",
            "allOf": [
                {
                    "$ref": "#/definitions/DiskStat"
                },
                {
                    "properties": {
                        "compressed_byte": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "compressed_origin_byte": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "create": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "degraded_percent": {
                            "type": "number",
                            "format": "double"
                        },
                        "healthy_percent": {
                            "type": "number",
                            "format": "double"
                        },
                        "omap_total_kbyte": {
                            "type": "number",
                            "format": "double"
                        },
                        "omap_used_kbyte": {
                            "type": "number",
                            "format": "double"
                        },
                        "omap_used_percent": {
                            "type": "number",
                            "format": "double"
                        },
                        "partition": {
                            "$ref": "#/definitions/PartitionStat"
                        },
                        "recovery_percent": {
                            "type": "number",
                            "format": "double"
                        },
                        "unavailable_percent": {
                            "type": "number",
                            "format": "double"
                        },
                        "water_level": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                }
            ]
        },
        "OsdUpdateNumaNodeReq": {
            "type": "object",
            "title": "OsdUpdateNumaNodeReq",
            "properties": {
                "numa_apply_policy": {
                    "description": "apply policy in binding numa",
                    "type": "string"
                },
                "numa_node": {
                    "description": "numa node id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Osd_Nestview": {
            "type": "object",
            "title": "Osd_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "numa_node": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OsdsAddReq": {
            "type": "object",
            "title": "OsdsAddReq",
            "required": [
                "osd_ids"
            ],
            "properties": {
                "osd_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "OsdsRemoveReq": {
            "type": "object",
            "title": "OsdsRemoveReq",
            "required": [
                "osd_ids"
            ],
            "properties": {
                "osd_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "OsdsResp": {
            "type": "object",
            "title": "OsdsResp",
            "required": [
                "osds"
            ],
            "properties": {
                "osds": {
                    "description": "osds",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OsdRecord"
                    }
                }
            }
        },
        "OspClusterOverview": {
            "type": "object",
            "title": "OspClusterOverview",
            "properties": {
                "buckets": {
                    "type": "integer",
                    "format": "int64"
                },
                "building_data_backends": {
                    "type": "integer",
                    "format": "int64"
                },
                "building_error_data_backends": {
                    "type": "integer",
                    "format": "int64"
                },
                "building_error_zones": {
                    "type": "integer",
                    "format": "int64"
                },
                "building_s3_lb_groups": {
                    "type": "integer",
                    "format": "int64"
                },
                "building_zones": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_backends": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleting_buckets": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleting_data_backends": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleting_error_buckets": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleting_error_data_backends": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleting_error_storage_policies": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleting_error_users": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleting_error_zones": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleting_s3_lb_groups": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleting_storage_policies": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleting_users": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleting_zones": {
                    "type": "integer",
                    "format": "int64"
                },
                "error_data_backends": {
                    "type": "integer",
                    "format": "int64"
                },
                "error_s3_lb_groups": {
                    "type": "integer",
                    "format": "int64"
                },
                "error_zones": {
                    "type": "integer",
                    "format": "int64"
                },
                "normal_hosts": {
                    "type": "integer",
                    "format": "int64"
                },
                "object_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "offline_hosts": {
                    "type": "integer",
                    "format": "int64"
                },
                "operation_failed_hosts": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_lb_groups": {
                    "type": "integer",
                    "format": "int64"
                },
                "storage_policies": {
                    "type": "integer",
                    "format": "int64"
                },
                "system_metadata_cluster_status": {
                    "type": "string"
                },
                "users": {
                    "type": "integer",
                    "format": "int64"
                },
                "warning_hosts": {
                    "type": "integer",
                    "format": "int64"
                },
                "warning_zones": {
                    "type": "integer",
                    "format": "int64"
                },
                "zones": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OspClusterOverviewResp": {
            "type": "object",
            "title": "OspClusterOverviewResp",
            "properties": {
                "cluster_overview": {
                    "$ref": "#/definitions/OspClusterOverview"
                }
            }
        },
        "OspDataBackendPoolsOperateReq": {
            "type": "object",
            "title": "OspDataBackendPoolsOperateReq",
            "properties": {
                "cluster_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_backend_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "pool_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "OspGateway": {
            "description": "OspGateway contains information of a osp gateway and it's stats.",
            "type": "object",
            "title": "OspGateway",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "etag": {
                    "type": "string"
                },
                "gateway_ip": {
                    "type": "string"
                },
                "gateway_name": {
                    "type": "string"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "s3_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "xms_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "zone_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OspGatewayCreateReq": {
            "type": "object",
            "title": "OspGatewayCreateReq",
            "properties": {
                "osp_gateway": {
                    "$ref": "#/definitions/OspGatewayCreateReq_Gateway"
                }
            }
        },
        "OspGatewayCreateReq_Gateway": {
            "type": "object",
            "title": "OspGatewayCreateReq_Gateway",
            "required": [
                "name",
                "host_id",
                "role",
                "s3_port"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "gateway_ip": {
                    "type": "string"
                },
                "host_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "osp_zone_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "role": {
                    "type": "string"
                },
                "s3_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "xms_port": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OspGatewayRecord": {
            "description": "OspGatewayRecord combine OspGateway and OspGatewayStat as API response",
            "type": "object",
            "title": "OspGatewayRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/OspGateway"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OspGatewayStat"
                            }
                        }
                    }
                }
            ]
        },
        "OspGatewayResp": {
            "type": "object",
            "title": "OspGatewayResp",
            "properties": {
                "osp_gateway": {
                    "description": "osp gateway",
                    "$ref": "#/definitions/OspGatewayRecord"
                }
            }
        },
        "OspGatewaySamplesResp": {
            "type": "object",
            "title": "OspGatewaySamplesResp",
            "required": [
                "osp_gateway_samples"
            ],
            "properties": {
                "osp_gateway_samples": {
                    "description": "osp gateway samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OspGatewayStat"
                    }
                }
            }
        },
        "OspGatewayStat": {
            "description": "OspGatewayStat is the model of osp_gateway_stat",
            "type": "object",
            "title": "OspGatewayStat",
            "properties": {
                "all_requests": {
                    "type": "integer",
                    "format": "int64"
                },
                "compact_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "compact_ops": {
                    "type": "number",
                    "format": "double"
                },
                "cpu_util": {
                    "type": "number",
                    "format": "double"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "delete_latency": {
                    "type": "number",
                    "format": "double"
                },
                "delete_ops": {
                    "type": "number",
                    "format": "double"
                },
                "down_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "down_first_byte_latency": {
                    "type": "number",
                    "format": "double"
                },
                "down_latency": {
                    "type": "number",
                    "format": "double"
                },
                "down_ops": {
                    "type": "number",
                    "format": "double"
                },
                "list_latency": {
                    "type": "number",
                    "format": "double"
                },
                "list_ops": {
                    "type": "number",
                    "format": "double"
                },
                "mem_usage_percent": {
                    "type": "number",
                    "format": "double"
                },
                "merge_speed": {
                    "type": "integer",
                    "format": "int64"
                },
                "replication_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "replication_ops": {
                    "type": "number",
                    "format": "double"
                },
                "requests": {
                    "type": "integer",
                    "format": "int64"
                },
                "sync_down_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "sync_down_last_byte_latency": {
                    "type": "number",
                    "format": "double"
                },
                "sync_down_latency": {
                    "type": "number",
                    "format": "double"
                },
                "sync_down_ops": {
                    "type": "number",
                    "format": "double"
                },
                "sync_up_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "sync_up_latency": {
                    "type": "number",
                    "format": "double"
                },
                "sync_up_ops": {
                    "type": "number",
                    "format": "double"
                },
                "up_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "up_last_byte_latency": {
                    "type": "number",
                    "format": "double"
                },
                "up_latency": {
                    "type": "number",
                    "format": "double"
                },
                "up_ops": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "OspGatewaysResp": {
            "type": "object",
            "title": "OspGatewaysResp",
            "properties": {
                "osp_gateways": {
                    "description": "osp gateways",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OspGatewayRecord"
                    }
                }
            }
        },
        "OspHostReq": {
            "type": "object",
            "title": "OspHostReq",
            "required": [
                "host_id",
                "osp_gateway_ips",
                "osp_cluster_ip"
            ],
            "properties": {
                "host_id": {
                    "description": "host id",
                    "type": "integer",
                    "format": "int64"
                },
                "osp_cluster_ip": {
                    "description": "osp cluster ip",
                    "type": "string"
                },
                "osp_gateway_ips": {
                    "description": "osp gateway ip",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "description": "host roles",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "OspMdClusterPlacementNode_Nestview": {
            "type": "object",
            "title": "OspMdClusterPlacementNode_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OspMetadataCluster": {
            "description": "OspMetadataCluster contains information of a osp metadata cluster and it's\nstats.",
            "type": "object",
            "title": "OspMetadataCluster",
            "required": [
                "log_num"
            ],
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "coordinator_host_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "coordinator_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "datacenters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PlacementNode_Nestview"
                    }
                },
                "deploy_mode": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "log_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "object_storage": {
                    "$ref": "#/definitions/NgObjectStorage_Nestview"
                },
                "placement_node": {
                    "$ref": "#/definitions/OspMdClusterPlacementNode_Nestview"
                },
                "protection_type": {
                    "type": "string"
                },
                "proxy_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "region": {
                    "$ref": "#/definitions/Region_Nestview"
                },
                "replication_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "resolver_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "stateless_server_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OspMetadataClusterCreateReq": {
            "type": "object",
            "title": "OspMetadataClusterCreateReq",
            "properties": {
                "osp_metadata_cluster": {
                    "$ref": "#/definitions/OspMetadataClusterCreateReq_OspMetadataCluster"
                }
            }
        },
        "OspMetadataClusterCreateReq_OspMetadataCluster": {
            "type": "object",
            "title": "OspMetadataClusterCreateReq_OspMetadataCluster",
            "required": [
                "name",
                "replication_num",
                "protection_type",
                "type",
                "log_num",
                "proxy_num",
                "resolver_num",
                "coordinator_num",
                "stateless_server_num",
                "coordinator_host_ids",
                "partition_ids",
                "osd_ids"
            ],
            "properties": {
                "cluster_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "coordinator_host_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "coordinator_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "deploy_mode": {
                    "type": "string"
                },
                "log_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "osd_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "partition_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "protection_type": {
                    "type": "string"
                },
                "proxy_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "replication_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "resolver_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "stateless_server_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "OspMetadataClusterRecord": {
            "description": "OspMetadataClusterRecord combines OspMetadataClusterStat and OspMetadataCluster\nas api response",
            "type": "object",
            "title": "OspMetadataClusterRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/OspMetadataCluster"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OspMetadataClusterStat"
                            }
                        }
                    }
                }
            ]
        },
        "OspMetadataClusterResp": {
            "type": "object",
            "title": "OspMetadataClusterResp",
            "properties": {
                "osp_metadata_cluster": {
                    "$ref": "#/definitions/OspMetadataClusterRecord"
                }
            }
        },
        "OspMetadataClusterSamplesResp": {
            "type": "object",
            "title": "OspMetadataClusterSamplesResp",
            "properties": {
                "osp_metadata_cluster_samples": {
                    "description": "osp metadata cluster samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OspMetadataClusterStat"
                    }
                }
            }
        },
        "OspMetadataClusterStat": {
            "description": "OspMetadataClusterStat reprents osp metadata cluster stat info",
            "type": "object",
            "title": "OspMetadataClusterStat",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "moving_data_size_byte": {
                    "type": "integer",
                    "format": "int64"
                },
                "read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "read_ops": {
                    "type": "number",
                    "format": "double"
                },
                "total_byte": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_kv_size_byte": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_byte": {
                    "type": "integer",
                    "format": "int64"
                },
                "write_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "write_ops": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "OspMetadataClusterUpdateReq": {
            "type": "object",
            "title": "OspMetadataClusterUpdateReq",
            "properties": {
                "osp_metadata_cluster": {
                    "$ref": "#/definitions/OspMetadataClusterUpdateReq_OspMetadataCluster"
                }
            }
        },
        "OspMetadataClusterUpdateReq_OspMetadataCluster": {
            "type": "object",
            "title": "OspMetadataClusterUpdateReq_OspMetadataCluster",
            "properties": {
                "coordinator_host_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "coordinator_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "deploy_mode": {
                    "type": "string"
                },
                "log_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "new_osd_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "new_partition_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "protection_type": {
                    "type": "string"
                },
                "proxy_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "remove_metadata_server_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "replication_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "resolver_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "stateless_server_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OspMetadataCluster_Nestview": {
            "type": "object",
            "title": "OspMetadataCluster_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OspMetadataClustersResp": {
            "type": "object",
            "title": "OspMetadataClustersResp",
            "properties": {
                "osp_metadata_clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OspMetadataClusterRecord"
                    }
                }
            }
        },
        "OspMetadataServer": {
            "description": "OspMetadataServer contains information of a osp metadata server and it's stats.",
            "type": "object",
            "title": "OspMetadataServer",
            "properties": {
                "class": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "datacenter": {
                    "$ref": "#/definitions/PlacementNode_Nestview"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip": {
                    "type": "string"
                },
                "metadata_cluster": {
                    "$ref": "#/definitions/OspMetadataCluster_Nestview"
                },
                "osd": {
                    "$ref": "#/definitions/Osd_Nestview"
                },
                "partition": {
                    "$ref": "#/definitions/Partition_Nestview"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "OspMetadataServerRecord": {
            "description": "OspMetadataServerRecord combines OspMetadataServer and OspMetadataServerStat as\napi response",
            "type": "object",
            "title": "OspMetadataServerRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/OspMetadataServer"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OspMetadataServerStat"
                            }
                        }
                    }
                }
            ]
        },
        "OspMetadataServerResp": {
            "type": "object",
            "title": "OspMetadataServerResp",
            "properties": {
                "osp_metadata_server": {
                    "$ref": "#/definitions/OspMetadataServerRecord"
                }
            }
        },
        "OspMetadataServerSamplesResp": {
            "type": "object",
            "title": "OspMetadataServerSamplesResp",
            "properties": {
                "osp_metadata_server_samples": {
                    "description": "osp metadata server samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OspMetadataServerStat"
                    }
                }
            }
        },
        "OspMetadataServerStat": {
            "description": "OspMetadataServerStat represents osp metadata server stat info",
            "type": "object",
            "title": "OspMetadataServerStat",
            "properties": {
                "cpu_util": {
                    "type": "number",
                    "format": "double"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "disk_util": {
                    "type": "number",
                    "format": "double"
                },
                "mem_usage_percent": {
                    "type": "number",
                    "format": "double"
                },
                "recv_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "send_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "total_size_byte": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_size_byte": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "OspMetadataServersResp": {
            "type": "object",
            "title": "OspMetadataServersResp",
            "properties": {
                "osp_metadata_servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OspMetadataServerRecord"
                    }
                }
            }
        },
        "OspZoneStatResp": {
            "type": "object",
            "title": "OspZoneStatResp",
            "properties": {
                "sum_samples": {
                    "description": "sum of osp gateway stat",
                    "$ref": "#/definitions/SumOspGatewayStat"
                }
            }
        },
        "Paging": {
            "description": "Paging defines paging object",
            "type": "object",
            "title": "Paging",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int64"
                },
                "duration": {
                    "type": "integer",
                    "format": "int64"
                },
                "duration_begin": {
                    "type": "string",
                    "format": "date-time"
                },
                "duration_end": {
                    "type": "string",
                    "format": "date-time"
                },
                "limit": {
                    "type": "integer",
                    "format": "int64"
                },
                "next": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer",
                    "format": "int64"
                },
                "period": {
                    "type": "string"
                },
                "total_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "truncated": {
                    "type": "boolean"
                }
            }
        },
        "Partition": {
            "description": "Partition contains information of a partition and it's stats.",
            "type": "object",
            "title": "Partition",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "disk": {
                    "$ref": "#/definitions/Disk_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "omap_byte": {
                    "type": "integer",
                    "format": "int64"
                },
                "omap_device_path": {
                    "description": "omap part path",
                    "type": "string"
                },
                "osp_metadata_cluster": {
                    "$ref": "#/definitions/OspMetadataCluster"
                },
                "path": {
                    "description": "part path, generated from part num and disk device",
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "used": {
                    "type": "boolean"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PartitionResp": {
            "type": "object",
            "title": "PartitionResp",
            "properties": {
                "partition": {
                    "$ref": "#/definitions/Partition"
                }
            }
        },
        "PartitionStat": {
            "description": "PartitionStat defines the basic info of a PartitionStat",
            "type": "object",
            "title": "PartitionStat",
            "allOf": [
                {
                    "$ref": "#/definitions/DiskStat"
                },
                {
                    "properties": {
                        "create": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "Partition_Nestview": {
            "type": "object",
            "title": "Partition_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PartitionsCreateReq": {
            "type": "object",
            "title": "PartitionsCreateReq",
            "properties": {
                "partitions": {
                    "$ref": "#/definitions/PartitionsCreateReq_Partitions"
                }
            }
        },
        "PartitionsCreateReq_Partitions": {
            "type": "object",
            "title": "PartitionsCreateReq_Partitions",
            "properties": {
                "journal_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "metadata_partition_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "num": {
                    "type": "integer",
                    "format": "int64"
                },
                "omap_byte": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_cache_bytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_metadata_bytes": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PartitionsResp": {
            "type": "object",
            "title": "PartitionsResp",
            "properties": {
                "partitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Partition"
                    }
                }
            }
        },
        "PdRecord": {
            "description": "PdRecord defines the response content of protection domain related API",
            "type": "object",
            "title": "PdRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/ProtectionDomain"
                }
            ]
        },
        "PlacementGroup": {
            "description": "PlacementGroup defines the statistics metric of a placement group PG is not\nexposed to user, rename it as chunk",
            "type": "object",
            "title": "PlacementGroup",
            "properties": {
                "Cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "chunk_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "PlacementGroupScrub": {
            "description": "PlacementGroupScrub defines the statistics info of placement group",
            "type": "object",
            "title": "PlacementGroupScrub",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "repair_status": {
                    "type": "string"
                },
                "repair_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "scrub_status": {
                    "type": "string"
                },
                "scrub_time": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "PlacementNode": {
            "description": "PlacementNode defines a placement node managing a range of hosts",
            "type": "object",
            "title": "PlacementNode",
            "properties": {
                "cluster": {
                    "description": "cluster of placement node",
                    "$ref": "#/definitions/Cluster"
                },
                "create": {
                    "description": "time of creating placement node",
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "description": "id of placement node",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name of placement node",
                    "type": "string"
                },
                "parent": {
                    "description": "parent of placement node",
                    "$ref": "#/definitions/PlacementNode"
                },
                "properties": {
                    "description": "properties for this placement node like is_witness",
                    "$ref": "#/definitions/PlacementNodeProperties"
                },
                "type": {
                    "description": "type of placement node",
                    "type": "string"
                },
                "update": {
                    "description": "time of updating placement node",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "PlacementNodeCreateReq": {
            "type": "object",
            "title": "PlacementNodeCreateReq",
            "properties": {
                "placement_node": {
                    "$ref": "#/definitions/PlacementNodeCreateReq_PlacementNode"
                }
            }
        },
        "PlacementNodeCreateReq_PlacementNode": {
            "type": "object",
            "title": "PlacementNodeCreateReq_PlacementNode",
            "required": [
                "name",
                "type",
                "parent_id"
            ],
            "properties": {
                "cluster_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_witness": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "PlacementNodeProperties": {
            "description": "PlacementNodeProperties contains properties for a placement node.",
            "type": "object",
            "title": "PlacementNodeProperties",
            "properties": {
                "is_witness": {
                    "description": "whether this is a witness node",
                    "type": "boolean"
                }
            }
        },
        "PlacementNodeRecord": {
            "type": "object",
            "title": "PlacementNodeRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/PlacementNode"
                },
                {
                    "properties": {
                        "payload": {}
                    }
                }
            ]
        },
        "PlacementNodeResp": {
            "type": "object",
            "title": "PlacementNodeResp",
            "required": [
                "placement_node"
            ],
            "properties": {
                "placement_node": {
                    "description": "placement node",
                    "$ref": "#/definitions/PlacementNodeRecord"
                }
            }
        },
        "PlacementNodeTopology": {
            "description": "PlacementNodeTopology defines the response content of placement node topology",
            "type": "object",
            "title": "PlacementNodeTopology",
            "allOf": [
                {
                    "$ref": "#/definitions/PlacementNode"
                },
                {
                    "properties": {
                        "available_osd_num": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "children": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PlacementNodeTopology"
                            }
                        },
                        "host_num": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "payload": {}
                    }
                }
            ]
        },
        "PlacementNodeTopologyResp": {
            "type": "object",
            "title": "PlacementNodeTopologyResp",
            "required": [
                "topology"
            ],
            "properties": {
                "topology": {
                    "description": "topology of placement nodes",
                    "$ref": "#/definitions/PlacementNodeTopology"
                }
            }
        },
        "PlacementNodeUpdateReq": {
            "type": "object",
            "title": "PlacementNodeUpdateReq",
            "properties": {
                "placement_node": {
                    "$ref": "#/definitions/PlacementNodeUpdateReq_PlacementNode"
                }
            }
        },
        "PlacementNodeUpdateReq_PlacementNode": {
            "type": "object",
            "title": "PlacementNodeUpdateReq_PlacementNode",
            "required": [
                "name",
                "parent_id"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PlacementNode_Nestview": {
            "type": "object",
            "title": "PlacementNode_Nestview",
            "properties": {
                "id": {
                    "description": "id of placement node",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name of placement node",
                    "type": "string"
                },
                "parent": {
                    "description": "parent of placement node",
                    "type": "object",
                    "properties": {
                        "cluster": {
                            "description": "cluster of placement node",
                            "$ref": "#/definitions/Cluster"
                        },
                        "create": {
                            "description": "time of creating placement node",
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "description": "id of placement node",
                            "type": "integer",
                            "format": "int64"
                        },
                        "name": {
                            "description": "name of placement node",
                            "type": "string"
                        },
                        "parent": {
                            "description": "parent of placement node",
                            "$ref": "#/definitions/PlacementNode"
                        },
                        "properties": {
                            "description": "properties for this placement node like is_witness",
                            "$ref": "#/definitions/PlacementNodeProperties"
                        },
                        "type": {
                            "description": "type of placement node",
                            "type": "string"
                        },
                        "update": {
                            "description": "time of updating placement node",
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            }
        },
        "PlacementNodesResp": {
            "type": "object",
            "title": "PlacementNodesResp",
            "required": [
                "placement_nodes"
            ],
            "properties": {
                "placement_nodes": {
                    "description": "placement nodes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PlacementNodeRecord"
                    }
                }
            }
        },
        "PolicyLinkPathInfo": {
            "type": "object",
            "title": "PolicyLinkPathInfo",
            "properties": {
                "dfs_path_id": {
                    "description": "id of path",
                    "type": "integer",
                    "format": "int64"
                },
                "hdfs_num": {
                    "description": "hdfs num of path",
                    "type": "integer",
                    "format": "int64"
                },
                "is_bucket": {
                    "description": "if bucket of path",
                    "type": "boolean"
                },
                "path": {
                    "description": "name of path",
                    "type": "string"
                },
                "shares": {
                    "description": "share type of path",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "storage_policy_ids": {
                    "description": "link storage policy ids",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "Pool": {
            "description": "Pool contains information of a pool and it's stats.",
            "type": "object",
            "title": "Pool",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "allocated_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "bind_osd_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "block_volume_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cache_pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "coding_chunk_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "compress_algorithm": {
                    "type": "string"
                },
                "compressed": {
                    "type": "boolean"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "data_chunk_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "default_managed_volume_format": {
                    "type": "integer",
                    "format": "int64"
                },
                "device_type": {
                    "type": "string"
                },
                "device_type_check_disabled": {
                    "type": "boolean"
                },
                "failure_domain_type": {
                    "type": "string"
                },
                "gc_qos_plan": {
                    "$ref": "#/definitions/PoolGCPolicyPlan"
                },
                "hidden": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "inner_pool_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "io_bypass_enabled": {
                    "type": "boolean"
                },
                "io_bypass_mode": {
                    "type": "string"
                },
                "io_bypass_threshold": {
                    "type": "integer",
                    "format": "int64"
                },
                "min_alloc_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "min_osd_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "numa_apply_policy": {
                    "type": "string"
                },
                "numa_bind_balanced": {
                    "type": "boolean"
                },
                "numa_bind_policy": {
                    "type": "string"
                },
                "numa_enabled": {
                    "type": "boolean"
                },
                "osd_group": {
                    "$ref": "#/definitions/OsdGroup_Nestview"
                },
                "osd_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "osd_num_per_host": {
                    "type": "integer",
                    "format": "int64"
                },
                "out_failure_domain_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pool_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "pool_mode": {
                    "type": "string"
                },
                "pool_name": {
                    "type": "string"
                },
                "pool_role": {
                    "type": "string"
                },
                "pool_type": {
                    "type": "string"
                },
                "primary_placement_node": {
                    "description": "placement node with the primary replica",
                    "$ref": "#/definitions/PlacementNode_Nestview"
                },
                "product_type": {
                    "type": "string"
                },
                "property": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "protection_domain": {
                    "$ref": "#/definitions/ProtectionDomain_Nestview"
                },
                "qos": {
                    "$ref": "#/definitions/OsdQos"
                },
                "replicate_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "reserved_percent": {
                    "type": "number",
                    "format": "double"
                },
                "size_per_osd": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "stretched": {
                    "type": "boolean"
                },
                "stripe_unit": {
                    "type": "integer",
                    "format": "int64"
                },
                "sub_failure_domain_type": {
                    "type": "string"
                },
                "suggested_omap_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "thin_provisioned": {
                    "type": "boolean"
                },
                "tier_status": {
                    "type": "string"
                },
                "transport_mode": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "PoolCapacityReq": {
            "type": "object",
            "title": "PoolCapacityReq",
            "properties": {
                "coding_chunk_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_chunk_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "osd_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "pool_type": {
                    "type": "string"
                },
                "replicate_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "thin_provisioned": {
                    "type": "boolean"
                }
            }
        },
        "PoolCapacityResp": {
            "type": "object",
            "title": "PoolCapacityResp",
            "properties": {
                "actual_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_kbyte": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PoolCreateReq": {
            "type": "object",
            "title": "PoolCreateReq",
            "properties": {
                "pool": {
                    "$ref": "#/definitions/PoolCreateReq_Pool"
                }
            }
        },
        "PoolCreateReq_Pool": {
            "type": "object",
            "title": "PoolCreateReq_Pool",
            "properties": {
                "cache": {
                    "$ref": "#/definitions/PoolCreateReq_Pool_Cache"
                },
                "coding_chunk_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_chunk_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "failure_domain_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "osd_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "out_failure_domain_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "pool_name": {
                    "type": "string"
                },
                "pool_role": {
                    "type": "string"
                },
                "pool_type": {
                    "type": "string"
                },
                "primary_placement_node_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "product_type": {
                    "type": "string"
                },
                "protection_domain_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ruleset": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PoolRuleReq"
                    }
                },
                "shared_pool_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "stretched": {
                    "type": "boolean"
                },
                "thin_provisioned": {
                    "type": "boolean"
                }
            }
        },
        "PoolCreateReq_Pool_Cache": {
            "type": "object",
            "title": "PoolCreateReq_Pool_Cache",
            "properties": {
                "compress_algorithm": {
                    "type": "string"
                },
                "compressed": {
                    "type": "boolean"
                },
                "osd_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PoolFullCheckReq": {
            "type": "object",
            "title": "PoolFullCheckReq",
            "required": [
                "pool_ids"
            ],
            "properties": {
                "pool_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "PoolFullCheckResp": {
            "type": "object",
            "title": "PoolFullCheckResp",
            "properties": {
                "backfill_full_pool_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "full_pool_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "near_full_pool_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "PoolGCPolicyPlan": {
            "description": "PoolGCPolicyPlan defines request and response for tier pool gc qos policy plan",
            "type": "object",
            "title": "PoolGCPolicyPlan",
            "required": [
                "gc_policy_plans"
            ],
            "properties": {
                "gc_policy_plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gcPlan"
                    }
                }
            }
        },
        "PoolPlacementNode": {
            "description": "PoolPlacementNode defines a shadow placement node in a pool",
            "type": "object",
            "title": "PoolPlacementNode",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PoolPlacementNode"
                    }
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "placement_node": {
                    "$ref": "#/definitions/PlacementNode"
                },
                "replicate_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "PoolPrediction": {
            "description": "PoolPrediction contains pool prediction data",
            "type": "object",
            "title": "PoolPrediction",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "data_kbyte_1day": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_kbyte_30days": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_kbyte_7days": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_kbyte_points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DataKbytePredictionPoint"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte_1day": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte_30days": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte_7days": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_kbyte_points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PredictionPoint"
                    }
                }
            }
        },
        "PoolPredictionsResp": {
            "type": "object",
            "title": "PoolPredictionsResp",
            "required": [
                "pool_predictions"
            ],
            "properties": {
                "pool_predictions": {
                    "description": "pool predictions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PoolPrediction"
                    }
                }
            }
        },
        "PoolRecord": {
            "description": "PoolRecord is used to combine Pool and PoolStat to let API comfortable",
            "type": "object",
            "title": "PoolRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/Pool"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PoolStat"
                            }
                        }
                    }
                }
            ]
        },
        "PoolResp": {
            "type": "object",
            "title": "PoolResp",
            "required": [
                "pool"
            ],
            "properties": {
                "pool": {
                    "description": "pool",
                    "$ref": "#/definitions/PoolRecord"
                }
            }
        },
        "PoolRuleReq": {
            "type": "object",
            "title": "PoolRuleReq",
            "properties": {
                "placement_node_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "replicate_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PoolSamplesResp": {
            "type": "object",
            "title": "PoolSamplesResp",
            "required": [
                "pool_samples"
            ],
            "properties": {
                "pool_samples": {
                    "description": "pool samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PoolStat"
                    }
                }
            }
        },
        "PoolStat": {
            "description": "PoolStat contains pool stats data",
            "type": "object",
            "title": "PoolStat",
            "properties": {
                "actual_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "available_actual_kbyte": {
                    "description": "actual_kbyte*(1-reserved_data_percent)",
                    "type": "number",
                    "format": "double"
                },
                "client_read_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "client_read_io_size_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "client_read_iops": {
                    "type": "number",
                    "format": "double"
                },
                "client_read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "client_write_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "client_write_io_size_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "client_write_iops": {
                    "type": "number",
                    "format": "double"
                },
                "client_write_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "compress_ratio": {
                    "type": "number",
                    "format": "double"
                },
                "compressed_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "creating_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "data_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "degraded_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "degraded_percent": {
                    "type": "number",
                    "format": "double"
                },
                "error_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "flush_read_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "flush_read_io_size_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "flush_read_iops": {
                    "type": "number",
                    "format": "double"
                },
                "flush_read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "flush_write_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "flush_write_io_size_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "flush_write_iops": {
                    "type": "number",
                    "format": "double"
                },
                "flush_write_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "garbage_ratio": {
                    "type": "number",
                    "format": "double"
                },
                "gc_read_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "gc_read_io_size_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "gc_read_iops": {
                    "type": "number",
                    "format": "double"
                },
                "gc_read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "gc_remove_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "gc_remove_io_size_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "gc_remove_iops": {
                    "type": "number",
                    "format": "double"
                },
                "gc_write_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "gc_write_io_size_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "gc_write_iops": {
                    "type": "number",
                    "format": "double"
                },
                "gc_write_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "healthy_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "healthy_percent": {
                    "type": "number",
                    "format": "double"
                },
                "max_avail_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "min_garbage_kbyte": {
                    "description": "garbage size, for tier pool",
                    "type": "integer",
                    "format": "int64"
                },
                "omap_total_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "omap_used_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "omap_used_percent": {
                    "type": "number",
                    "format": "double"
                },
                "read_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "read_cache_hit_rate": {
                    "type": "number",
                    "format": "double"
                },
                "read_cache_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "read_cache_percent": {
                    "type": "number",
                    "format": "double"
                },
                "read_io_size_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "read_iops": {
                    "type": "number",
                    "format": "double"
                },
                "read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_iops": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "recovery_percent": {
                    "type": "number",
                    "format": "double"
                },
                "recovery_remain_second": {
                    "type": "integer",
                    "format": "int64"
                },
                "remove_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "remove_iops": {
                    "type": "number",
                    "format": "double"
                },
                "reserved_data_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "reserved_data_percent": {
                    "type": "number",
                    "format": "double"
                },
                "reserved_used_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "snap_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "total_cache_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "total_iops": {
                    "type": "number",
                    "format": "double"
                },
                "total_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "unavailable_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "unavailable_percent": {
                    "type": "number",
                    "format": "double"
                },
                "unused_data_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "used_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_percent": {
                    "type": "number",
                    "format": "double"
                },
                "water_level": {
                    "description": "tier pool stat",
                    "type": "number",
                    "format": "double"
                },
                "write_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "write_cache_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "write_cache_merge_rate": {
                    "type": "number",
                    "format": "double"
                },
                "write_cache_percent": {
                    "type": "number",
                    "format": "double"
                },
                "write_io_size_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "write_iops": {
                    "type": "number",
                    "format": "double"
                },
                "write_latency_us": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "PoolTopologyResp": {
            "type": "object",
            "title": "PoolTopologyResp",
            "required": [
                "pool_topology"
            ],
            "properties": {
                "pool_topology": {
                    "description": "pool topology",
                    "$ref": "#/definitions/PoolPlacementNode"
                }
            }
        },
        "PoolUpdateReq": {
            "type": "object",
            "title": "PoolUpdateReq",
            "required": [
                "pool"
            ],
            "properties": {
                "pool": {
                    "$ref": "#/definitions/PoolUpdateReq_Pool"
                }
            }
        },
        "PoolUpdateReq_Pool": {
            "type": "object",
            "title": "PoolUpdateReq_Pool",
            "properties": {
                "compress_algorithm": {
                    "type": "string"
                },
                "compressed": {
                    "type": "boolean"
                },
                "default_managed_volume_format": {
                    "description": "default managed volume format: 128 or 129",
                    "type": "integer",
                    "format": "int64"
                },
                "failure_domain_type": {
                    "type": "string"
                },
                "io_bypass_enabled": {
                    "type": "boolean"
                },
                "io_bypass_mode": {
                    "type": "string"
                },
                "io_bypass_threshold": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "out_failure_domain_num": {
                    "description": "ec k+m:h\u003c-\u003ek+m",
                    "type": "integer",
                    "format": "int64"
                },
                "primary_placement_node_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "property": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/RawMessage"
                    }
                },
                "qos": {
                    "$ref": "#/definitions/OsdQos"
                },
                "ruleset": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PoolRuleReq"
                    }
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "thin_provisioned": {
                    "type": "boolean"
                }
            }
        },
        "Pool_Nestview": {
            "type": "object",
            "title": "Pool_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "numa_apply_policy": {
                    "type": "string"
                },
                "numa_bind_policy": {
                    "type": "string"
                },
                "numa_enabled": {
                    "type": "boolean"
                },
                "pool_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "stretched": {
                    "type": "boolean"
                }
            }
        },
        "PoolsResp": {
            "type": "object",
            "title": "PoolsResp",
            "required": [
                "pools"
            ],
            "properties": {
                "pools": {
                    "description": "pools",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PoolRecord"
                    }
                }
            }
        },
        "PortMapPair": {
            "description": "PortMapPair defines a pair of port used to map to VM for now, it only support\ntcp protocol",
            "type": "object",
            "title": "PortMapPair",
            "properties": {
                "dest_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "protocol": {
                    "type": "string"
                },
                "src_addr": {
                    "type": "string"
                },
                "src_port": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PredictionPoint": {
            "description": "PredictionPoint is a point in a prediction graph",
            "type": "object",
            "title": "PredictionPoint",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "used_kbyte": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PrivilegedTokenReq": {
            "type": "object",
            "title": "PrivilegedTokenReq",
            "required": [
                "privileged_token"
            ],
            "properties": {
                "privileged_token": {
                    "type": "string"
                }
            }
        },
        "PrivilegedTokenResp": {
            "type": "object",
            "title": "PrivilegedTokenResp",
            "required": [
                "privileged_token"
            ],
            "properties": {
                "privileged_token": {
                    "type": "string"
                }
            }
        },
        "ProductFunction": {
            "description": "ProductFunction defines product feature",
            "type": "string",
            "title": "ProductFunction"
        },
        "ProductInfo": {
            "description": "ProductInfo defines product info",
            "type": "object",
            "title": "ProductInfo",
            "properties": {
                "model": {
                    "type": "string"
                },
                "series": {
                    "type": "string"
                }
            }
        },
        "ProductLimits": {
            "description": "ProductLimits defines product limits",
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "ProductService": {
            "description": "ProductService defines product service",
            "type": "object",
            "title": "ProductService",
            "properties": {
                "expired_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ProgressInfo": {
            "description": "ProgressInfo defines the progress info",
            "type": "object",
            "title": "ProgressInfo",
            "properties": {
                "action": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "current_progress": {
                    "type": "number",
                    "format": "double"
                },
                "data": {
                    "type": "string"
                },
                "fail_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "success_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_progress": {
                    "type": "number",
                    "format": "double"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ProtectionDomain": {
            "description": "ProtectionDomain defines protection domain objects",
            "type": "object",
            "title": "ProtectionDomain",
            "properties": {
                "create": {
                    "description": "time of creating protection domain",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "description of protection domain",
                    "type": "string"
                },
                "id": {
                    "description": "id of protection domain",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name of protection domain",
                    "type": "string"
                },
                "placement_node": {
                    "description": "placement node of protection domain",
                    "$ref": "#/definitions/PlacementNode_Nestview"
                },
                "status": {
                    "description": "status protection domain",
                    "type": "string"
                },
                "update": {
                    "description": "time of updating protection domain",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ProtectionDomainRecordResp": {
            "type": "object",
            "title": "ProtectionDomainRecordResp",
            "required": [
                "protection_domain"
            ],
            "properties": {
                "protection_domain": {
                    "description": "protection domain",
                    "$ref": "#/definitions/PdRecord"
                }
            }
        },
        "ProtectionDomainRecordsResp": {
            "type": "object",
            "title": "ProtectionDomainRecordsResp",
            "required": [
                "protection_domains"
            ],
            "properties": {
                "protection_domains": {
                    "description": "protection domains",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PdRecord"
                    }
                }
            }
        },
        "ProtectionDomain_Nestview": {
            "type": "object",
            "title": "ProtectionDomain_Nestview",
            "properties": {
                "id": {
                    "description": "id of protection domain",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name of protection domain",
                    "type": "string"
                }
            }
        },
        "RBDClient": {
            "description": "RBDClient defines the rbd client +X:model:generate;",
            "type": "object",
            "title": "RBDClient",
            "properties": {
                "admin_ip": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster"
                },
                "cpu_arch": {
                    "type": "string"
                },
                "cpu_core_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cpu_model": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "memory_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "public_ip": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "vendor": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "volume_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "xdc_status": {
                    "type": "string"
                }
            }
        },
        "RBDClientCreateReq": {
            "type": "object",
            "title": "RBDClientCreateReq",
            "properties": {
                "rbd_client": {
                    "$ref": "#/definitions/RBDClientCreateReq_RBDClient"
                }
            }
        },
        "RBDClientCreateReq_RBDClient": {
            "type": "object",
            "title": "RBDClientCreateReq_RBDClient",
            "required": [
                "admin_ip"
            ],
            "properties": {
                "admin_ip": {
                    "description": "admin ip",
                    "type": "string"
                },
                "port": {
                    "description": "rbdc monitor listen port",
                    "type": "integer",
                    "format": "int64"
                },
                "public_ip": {
                    "description": "public ip",
                    "type": "string"
                },
                "token": {
                    "description": "token to access rbd client",
                    "type": "string"
                },
                "type": {
                    "description": "rbd client type (managed or standalone)",
                    "type": "string"
                }
            }
        },
        "RBDClientResp": {
            "type": "object",
            "title": "RBDClientResp",
            "required": [
                "rbd_client"
            ],
            "properties": {
                "rbd_client": {
                    "$ref": "#/definitions/RBDClient"
                }
            }
        },
        "RBDClientUpdateReq": {
            "type": "object",
            "title": "RBDClientUpdateReq",
            "required": [
                "rbd_client"
            ],
            "properties": {
                "rbd_client": {
                    "$ref": "#/definitions/RBDClientUpdateReq_RBDClient"
                }
            }
        },
        "RBDClientUpdateReq_RBDClient": {
            "type": "object",
            "title": "RBDClientUpdateReq_RBDClient",
            "properties": {
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "token": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "RBDClientValidateHostReq": {
            "type": "object",
            "title": "RBDClientValidateHostReq",
            "properties": {
                "rbd_client": {
                    "$ref": "#/definitions/RBDClientValidateHostReq_RBDClient"
                }
            }
        },
        "RBDClientValidateHostReq_RBDClient": {
            "type": "object",
            "title": "RBDClientValidateHostReq_RBDClient",
            "required": [
                "admin_ip"
            ],
            "properties": {
                "admin_ip": {
                    "description": "admin ip",
                    "type": "string"
                },
                "port": {
                    "description": "rbdc monitor listen port",
                    "type": "integer",
                    "format": "int64"
                },
                "token": {
                    "description": "storage server or storage client",
                    "type": "string"
                }
            }
        },
        "RBDClientValidateHostResp": {
            "type": "object",
            "title": "RBDClientValidateHostResp",
            "properties": {
                "admin_ip": {
                    "description": "admin ip of rbd client",
                    "type": "string"
                },
                "hostname": {
                    "description": "hostname of rbd client, only appears when name_exist is true",
                    "type": "string"
                },
                "ip_exist": {
                    "description": "ip of rbd client already exist",
                    "type": "boolean"
                },
                "name_exist": {
                    "description": "name of rbd client already exist",
                    "type": "boolean"
                },
                "public_ip": {
                    "description": "public ip of rbd client",
                    "type": "string"
                },
                "token_invalid": {
                    "description": "token is invalid",
                    "type": "boolean"
                },
                "unreachable": {
                    "description": "rbd client is unreachable or not",
                    "type": "boolean"
                }
            }
        },
        "RBDClientsResp": {
            "type": "object",
            "title": "RBDClientsResp",
            "required": [
                "rbd_clients"
            ],
            "properties": {
                "rbd_clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RBDClient"
                    }
                }
            }
        },
        "RawMessage": {
            "description": "RawMessage is a raw encoded JSON value. It implements Marshaler and Unmarshaler\nand can be used to delay JSON decoding or precompute a JSON encoding.",
            "type": "array",
            "items": {
                "type": "string",
                "format": "byte"
            }
        },
        "RawObjectStorageBucketResp": {
            "type": "object",
            "title": "RawObjectStorageBucketResp",
            "required": [
                "os_bucket"
            ],
            "properties": {
                "os_bucket": {
                    "description": "object storage bucket",
                    "$ref": "#/definitions/ObjectStorageBucket"
                }
            }
        },
        "Region": {
            "description": "Region is the model of region +X:model:generate;",
            "type": "object",
            "title": "Region",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "access_url": {
                    "type": "string"
                },
                "admin_network": {
                    "description": "TODO(siming): removed in 602",
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_local": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "stats_reserved_days": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "RegionAccessInfoReq": {
            "type": "object",
            "title": "RegionAccessInfoReq",
            "properties": {
                "region": {
                    "$ref": "#/definitions/RegionAccessInfoReq_Region"
                }
            }
        },
        "RegionAccessInfoReq_Region": {
            "type": "object",
            "title": "RegionAccessInfoReq_Region",
            "required": [
                "access_url",
                "access_token"
            ],
            "properties": {
                "access_token": {
                    "description": "AccessToken of a region",
                    "type": "string"
                },
                "access_url": {
                    "description": "AccessURL of a region",
                    "type": "string"
                }
            }
        },
        "RegionJoinReq": {
            "type": "object",
            "title": "RegionJoinReq",
            "properties": {
                "region": {
                    "$ref": "#/definitions/RegionJoinReq_Region"
                }
            }
        },
        "RegionJoinReq_Region": {
            "type": "object",
            "title": "RegionJoinReq_Region",
            "required": [
                "name",
                "uuid",
                "access_url",
                "access_token"
            ],
            "properties": {
                "access_token": {
                    "description": "AccessToken token of remote region",
                    "type": "string"
                },
                "access_url": {
                    "description": "AccessURL URL of remote region",
                    "type": "string"
                },
                "name": {
                    "description": "Name of remote region",
                    "type": "string"
                },
                "uuid": {
                    "description": "UUID of remote region",
                    "type": "string"
                }
            }
        },
        "RegionResp": {
            "type": "object",
            "title": "RegionResp",
            "properties": {
                "region": {
                    "$ref": "#/definitions/Region"
                }
            }
        },
        "RegionStatsPredictionResp": {
            "type": "object",
            "title": "RegionStatsPredictionResp",
            "properties": {
                "stats_usage_bytes_per_day": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "RegionUpdateReq": {
            "type": "object",
            "title": "RegionUpdateReq",
            "required": [
                "region"
            ],
            "properties": {
                "region": {
                    "description": "region",
                    "$ref": "#/definitions/RegionUpdateReq_Region"
                }
            }
        },
        "RegionUpdateReq_Region": {
            "type": "object",
            "title": "RegionUpdateReq_Region",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "retion name",
                    "type": "string"
                },
                "stats_reserved_days": {
                    "description": "region stats reserved day",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Region_Nestview": {
            "type": "object",
            "title": "Region_Nestview",
            "properties": {
                "access_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "RegionsResp": {
            "type": "object",
            "title": "RegionsResp",
            "properties": {
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Region"
                    }
                }
            }
        },
        "RelatedResourceInfo": {
            "type": "object",
            "title": "RelatedResourceInfo",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "related_resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resource": {
                    "type": "string"
                }
            }
        },
        "RemoteCluster": {
            "description": "RemoteCluster remote clusters communicated via public API",
            "type": "object",
            "title": "RemoteCluster",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "block_replication_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "connected": {
                    "type": "boolean"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "fs_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "os_zone_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "remote_cluster_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "snapshot_replication_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "url": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "RemoteClusterCreateReq": {
            "type": "object",
            "title": "RemoteClusterCreateReq",
            "properties": {
                "remote_cluster": {
                    "$ref": "#/definitions/RemoteClusterCreateReq_RemoteCluster"
                }
            }
        },
        "RemoteClusterCreateReq_RemoteCluster": {
            "type": "object",
            "title": "RemoteClusterCreateReq_RemoteCluster",
            "required": [
                "url",
                "access_token"
            ],
            "properties": {
                "access_token": {
                    "description": "access token of remote cluster",
                    "type": "string"
                },
                "remote_cluster_id": {
                    "description": "id of remote cluster",
                    "type": "integer",
                    "format": "int64"
                },
                "url": {
                    "description": "URL of remote cluster",
                    "type": "string"
                }
            }
        },
        "RemoteClusterResp": {
            "type": "object",
            "title": "RemoteClusterResp",
            "properties": {
                "remote_cluster": {
                    "$ref": "#/definitions/RemoteCluster"
                }
            }
        },
        "RemoteClusterUpdateReq": {
            "type": "object",
            "title": "RemoteClusterUpdateReq",
            "properties": {
                "remote_cluster": {
                    "$ref": "#/definitions/RemoteClusterUpdateReq_RemoteCluster"
                }
            }
        },
        "RemoteClusterUpdateReq_RemoteCluster": {
            "type": "object",
            "title": "RemoteClusterUpdateReq_RemoteCluster",
            "required": [
                "url",
                "access_token"
            ],
            "properties": {
                "access_token": {
                    "description": "access token of remote cluster",
                    "type": "string"
                },
                "url": {
                    "description": "URL of remote cluster",
                    "type": "string"
                }
            }
        },
        "RemoteCluster_Nestview": {
            "type": "object",
            "title": "RemoteCluster_Nestview",
            "properties": {
                "fs_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "remote_cluster_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "RemoteClustersResp": {
            "type": "object",
            "title": "RemoteClustersResp",
            "properties": {
                "remote_clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RemoteCluster"
                    }
                }
            }
        },
        "ResourceRelatedResourcesResp": {
            "type": "object",
            "title": "ResourceRelatedResourcesResp",
            "properties": {
                "related_resource_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedResourceInfo"
                    }
                }
            }
        },
        "RoleMapping": {
            "description": "RoleMapping defines role mappings for auth",
            "type": "object",
            "title": "RoleMapping",
            "properties": {
                "create": {
                    "description": "time of creating identity platform",
                    "type": "string",
                    "format": "date-time"
                },
                "default": {
                    "type": "boolean"
                },
                "id": {
                    "description": "id of role mapping",
                    "type": "integer",
                    "format": "int64"
                },
                "identity_platform": {
                    "description": "identity platform of role mapping",
                    "$ref": "#/definitions/IdentityPlatform_Nestview"
                },
                "role": {
                    "description": "mapped role of sds platform",
                    "type": "string"
                },
                "update": {
                    "description": "time of updating identity platform",
                    "type": "string",
                    "format": "date-time"
                },
                "value": {
                    "description": "roles of external identity platform",
                    "type": "string"
                }
            }
        },
        "RoleMappingCreateReq": {
            "type": "object",
            "title": "RoleMappingCreateReq",
            "properties": {
                "role_mapping": {
                    "$ref": "#/definitions/RoleMappingCreateReq_Mapping"
                }
            }
        },
        "RoleMappingCreateReq_Mapping": {
            "type": "object",
            "title": "RoleMappingCreateReq_Mapping",
            "properties": {
                "default": {
                    "type": "boolean"
                },
                "identity_platform_id": {
                    "description": "id of identity platform",
                    "type": "integer",
                    "format": "int64"
                },
                "role": {
                    "description": "mapped role of sds platform",
                    "type": "string"
                },
                "value": {
                    "description": "roles of identity platform",
                    "type": "string"
                }
            }
        },
        "RoleMappingResp": {
            "type": "object",
            "title": "RoleMappingResp",
            "properties": {
                "role_mapping": {
                    "description": "role mapping",
                    "$ref": "#/definitions/RoleMapping"
                }
            }
        },
        "RoleMappingUpdateReq": {
            "type": "object",
            "title": "RoleMappingUpdateReq",
            "properties": {
                "role_mapping": {
                    "$ref": "#/definitions/RoleMappingUpdateReq_Mapping"
                }
            }
        },
        "RoleMappingUpdateReq_Mapping": {
            "type": "object",
            "title": "RoleMappingUpdateReq_Mapping",
            "properties": {
                "default": {
                    "type": "boolean"
                },
                "value": {
                    "description": "roles of identity platform",
                    "type": "string"
                }
            }
        },
        "RoleMappingsResp": {
            "type": "object",
            "title": "RoleMappingsResp",
            "properties": {
                "role_mappings": {
                    "description": "role mappings",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoleMapping"
                    }
                }
            }
        },
        "RuleMatchingInfo": {
            "description": "RuleMatchingInfo defines rule matching info",
            "type": "object",
            "title": "RuleMatchingInfo",
            "properties": {
                "matching_rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MatchingRule"
                    }
                },
                "mismatching_action": {
                    "type": "string"
                }
            }
        },
        "S3LbGroupWebServiceConfig": {
            "description": "S3LbGroupWebServiceConfig represents config info for web service role s3 lb\ngroup",
            "type": "object",
            "title": "S3LbGroupWebServiceConfig",
            "required": [
                "authentication",
                "protocol",
                "share_path"
            ],
            "properties": {
                "authentication": {
                    "type": "string"
                },
                "credential": {
                    "$ref": "#/definitions/S3LbGroupWebServiceConfig_Credential"
                },
                "password": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "share_path": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "S3LbGroupWebServiceConfig_Credential": {
            "type": "object",
            "title": "S3LbGroupWebServiceConfig_Credential",
            "required": [
                "user_name"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "S3LoadBalancer": {
            "description": "S3LoadBalancer contains information of a s 3 load balancer and it's stats.",
            "type": "object",
            "title": "S3LoadBalancer",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "group": {
                    "$ref": "#/definitions/S3LoadBalancerGroup_Nestview"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "https_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "keepaliveds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/S3LoadBalancerKeepalived"
                    }
                },
                "name": {
                    "type": "string"
                },
                "osp_zone_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "oss_api_enabled": {
                    "type": "boolean"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "search_https_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "search_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "ssl_certificate": {
                    "$ref": "#/definitions/SSLCertificate_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "sync_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "vips": {
                    "type": "string"
                },
                "web_service_port": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "S3LoadBalancerGroup": {
            "description": "S3LoadBalancerGroup groups s3 load balancer with vips +X:model:etcd_lock;",
            "type": "object",
            "title": "S3LoadBalancerGroup",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "https_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "osp_zone_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "oss_api_enabled": {
                    "type": "boolean"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "search_https_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "search_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "ssl_certificate": {
                    "$ref": "#/definitions/SSLCertificate_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "sync_port": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "web_service_config": {
                    "$ref": "#/definitions/S3LbGroupWebServiceConfig"
                },
                "web_service_port": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "S3LoadBalancerGroupCreateReq": {
            "type": "object",
            "title": "S3LoadBalancerGroupCreateReq",
            "required": [
                "s3_load_balancer_group"
            ],
            "properties": {
                "s3_load_balancer_group": {
                    "$ref": "#/definitions/S3LoadBalancerGroupCreateReq_Group"
                }
            }
        },
        "S3LoadBalancerGroupCreateReq_Group": {
            "type": "object",
            "title": "S3LoadBalancerGroupCreateReq_Group",
            "required": [
                "name",
                "s3_load_balancers"
            ],
            "properties": {
                "description": {
                    "description": "group description",
                    "type": "string"
                },
                "https_port": {
                    "description": "group access https port",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "group name",
                    "type": "string"
                },
                "osp_zone_id": {
                    "description": "osp zone id",
                    "type": "integer",
                    "format": "int64"
                },
                "oss_api_enabled": {
                    "type": "boolean"
                },
                "port": {
                    "description": "group access http port",
                    "type": "integer",
                    "format": "int64"
                },
                "roles": {
                    "description": "group roles",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "s3_load_balancers": {
                    "description": "s3 load balancers",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/S3LoadBalancerGroupCreateReq_Group_LoadBalancers_Elt"
                    }
                },
                "search_https_port": {
                    "description": "group search https port",
                    "type": "integer",
                    "format": "int64"
                },
                "search_port": {
                    "description": "group search http port",
                    "type": "integer",
                    "format": "int64"
                },
                "sync_port": {
                    "description": "group sync http port",
                    "type": "integer",
                    "format": "int64"
                },
                "web_service_config": {
                    "description": "web service config",
                    "$ref": "#/definitions/S3LbGroupWebServiceConfig"
                },
                "web_service_port": {
                    "description": "group web service http port",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "S3LoadBalancerGroupCreateReq_Group_LoadBalancers_Elt": {
            "type": "object",
            "title": "S3LoadBalancerGroupCreateReq_Group_LoadBalancers_Elt",
            "required": [
                "host_id",
                "vip"
            ],
            "properties": {
                "host_id": {
                    "description": "host id of load balancer",
                    "type": "integer",
                    "format": "int64"
                },
                "interface_name": {
                    "description": "vip will be bounded to interface, exclusive to ip",
                    "type": "string"
                },
                "ip": {
                    "description": "vip will be bounded to interface of the gateway ip, exclusive to interface name",
                    "type": "string"
                },
                "vip": {
                    "description": "vip of load balancer",
                    "type": "string"
                }
            }
        },
        "S3LoadBalancerGroupResp": {
            "type": "object",
            "title": "S3LoadBalancerGroupResp",
            "required": [
                "s3_load_balancer_group"
            ],
            "properties": {
                "s3_load_balancer_group": {
                    "description": "s3 load balancer group",
                    "$ref": "#/definitions/S3LoadBalancerGroup"
                }
            }
        },
        "S3LoadBalancerGroupUpdateReq": {
            "type": "object",
            "title": "S3LoadBalancerGroupUpdateReq",
            "required": [
                "s3_load_balancer_group"
            ],
            "properties": {
                "s3_load_balancer_group": {
                    "$ref": "#/definitions/S3LoadBalancerGroupUpdateReq_Group"
                }
            }
        },
        "S3LoadBalancerGroupUpdateReq_Group": {
            "type": "object",
            "title": "S3LoadBalancerGroupUpdateReq_Group",
            "properties": {
                "description": {
                    "description": "group description",
                    "type": "string"
                },
                "https_port": {
                    "description": "group access https port",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "group name",
                    "type": "string"
                },
                "oss_api_enabled": {
                    "type": "boolean"
                },
                "port": {
                    "description": "group access http port",
                    "type": "integer",
                    "format": "int64"
                },
                "roles": {
                    "description": "group roles",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "search_https_port": {
                    "description": "group search https port",
                    "type": "integer",
                    "format": "int64"
                },
                "search_port": {
                    "description": "group search http port",
                    "type": "integer",
                    "format": "int64"
                },
                "sync_port": {
                    "description": "group sync http port",
                    "type": "integer",
                    "format": "int64"
                },
                "web_service_config": {
                    "description": "web service config",
                    "$ref": "#/definitions/S3LbGroupWebServiceConfig"
                },
                "web_service_port": {
                    "description": "group web service http port",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "S3LoadBalancerGroup_Nestview": {
            "type": "object",
            "title": "S3LoadBalancerGroup_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "S3LoadBalancerGroupsResp": {
            "type": "object",
            "title": "S3LoadBalancerGroupsResp",
            "required": [
                "s3_load_balancer_groups"
            ],
            "properties": {
                "s3_load_balancer_groups": {
                    "description": "s3 load balancer groups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/S3LoadBalancerGroup"
                    }
                }
            }
        },
        "S3LoadBalancerKeepalived": {
            "description": "S3LoadBalancerKeepalived is a load balancer keepalived +X:model:generate;",
            "type": "object",
            "title": "S3LoadBalancerKeepalived",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "interface_name": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "s3_load_balancer": {
                    "$ref": "#/definitions/S3LoadBalancer_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "vip": {
                    "type": "string"
                },
                "vip_mask": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "S3LoadBalancerRecord": {
            "description": "S3LoadBalancerRecord defines s3 load balancer with samples",
            "type": "object",
            "title": "S3LoadBalancerRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/S3LoadBalancer"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/S3LoadBalancerStat"
                            }
                        }
                    }
                }
            ]
        },
        "S3LoadBalancerRegisterServiceReq": {
            "type": "object",
            "title": "S3LoadBalancerRegisterServiceReq",
            "required": [
                "register_rules"
            ],
            "properties": {
                "register_rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/S3LoadBalancerRegisterServiceReq_RegisterRules_Elt"
                    }
                }
            }
        },
        "S3LoadBalancerRegisterServiceReq_RegisterRules_Elt": {
            "type": "object",
            "title": "S3LoadBalancerRegisterServiceReq_RegisterRules_Elt",
            "required": [
                "recognition_rules",
                "target_endpoints"
            ],
            "properties": {
                "recognition_rules": {
                    "description": "recognition rules of service",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "service_type": {
                    "description": "type of service",
                    "type": "string"
                },
                "target_endpoints": {
                    "description": "target endpoints of service",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/S3LoadBalancerRegisterServiceReq_RegisterRules_Elt_TargetEndpoints_Elt"
                    }
                }
            }
        },
        "S3LoadBalancerRegisterServiceReq_RegisterRules_Elt_TargetEndpoints_Elt": {
            "type": "object",
            "title": "S3LoadBalancerRegisterServiceReq_RegisterRules_Elt_TargetEndpoints_Elt",
            "required": [
                "osp_zone_id",
                "endpoints"
            ],
            "properties": {
                "endpoints": {
                    "description": "endpoints of service",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "osp_zone_id": {
                    "description": "zone id of load balancers",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "S3LoadBalancerRemoveServiceReq": {
            "type": "object",
            "title": "S3LoadBalancerRemoveServiceReq",
            "required": [
                "remove_rules"
            ],
            "properties": {
                "remove_rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/S3LoadBalancerRemoveServiceReq_RemoveRules_Elt"
                    }
                }
            }
        },
        "S3LoadBalancerRemoveServiceReq_RemoveRules_Elt": {
            "type": "object",
            "title": "S3LoadBalancerRemoveServiceReq_RemoveRules_Elt",
            "required": [
                "osp_zone_id",
                "rules"
            ],
            "properties": {
                "osp_zone_id": {
                    "description": "zone id of load balancers",
                    "type": "integer",
                    "format": "int64"
                },
                "rules": {
                    "description": "rules of service",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "S3LoadBalancerResp": {
            "type": "object",
            "title": "S3LoadBalancerResp",
            "required": [
                "s3_load_balancer"
            ],
            "properties": {
                "s3_load_balancer": {
                    "description": "s3 load balancer",
                    "$ref": "#/definitions/S3LoadBalancerRecord"
                }
            }
        },
        "S3LoadBalancerSamplesElem": {
            "type": "object",
            "title": "S3LoadBalancerSamplesElem",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "paging": {
                    "$ref": "#/definitions/Paging"
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/S3LoadBalancerStat"
                    }
                }
            }
        },
        "S3LoadBalancerSamplesResp": {
            "type": "object",
            "title": "S3LoadBalancerSamplesResp",
            "required": [
                "s3_load_balancer_samples"
            ],
            "properties": {
                "s3_load_balancer_samples": {
                    "description": "s3 load balancer samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/S3LoadBalancerStat"
                    }
                }
            }
        },
        "S3LoadBalancerServiceResp": {
            "type": "object",
            "title": "S3LoadBalancerServiceResp",
            "required": [
                "zone_ids"
            ],
            "properties": {
                "zone_ids": {
                    "description": "s3 load balancer groups",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "S3LoadBalancerStat": {
            "description": "S3LoadBalancerStat define s3 load balancer stat info",
            "type": "object",
            "title": "S3LoadBalancerStat",
            "properties": {
                "active_connections": {
                    "type": "number",
                    "format": "double"
                },
                "cpu_util": {
                    "type": "number",
                    "format": "double"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "down_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "failure_requests": {
                    "type": "number",
                    "format": "double"
                },
                "mem_usage_percent": {
                    "type": "number",
                    "format": "double"
                },
                "success_requests": {
                    "type": "number",
                    "format": "double"
                },
                "up_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "S3LoadBalancer_Nestview": {
            "type": "object",
            "title": "S3LoadBalancer_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "S3LoadBalancersAddReq": {
            "type": "object",
            "title": "S3LoadBalancersAddReq",
            "required": [
                "s3_load_balancers"
            ],
            "properties": {
                "s3_load_balancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/S3LoadBalancersAddReq_LoadBalancers_Elt"
                    }
                }
            }
        },
        "S3LoadBalancersAddReq_LoadBalancers_Elt": {
            "type": "object",
            "title": "S3LoadBalancersAddReq_LoadBalancers_Elt",
            "required": [
                "host_id",
                "vip"
            ],
            "properties": {
                "host_id": {
                    "description": "host of load balancer",
                    "type": "integer",
                    "format": "int64"
                },
                "interface_name": {
                    "description": "vip will be bound to interface, exclusive to ip",
                    "type": "string"
                },
                "ip": {
                    "description": "vip will be bound to interface of the gateway ip, exclusive to interface_name",
                    "type": "string"
                },
                "vip": {
                    "description": "vip of load balancer",
                    "type": "string"
                }
            }
        },
        "S3LoadBalancersRemoveReq": {
            "type": "object",
            "title": "S3LoadBalancersRemoveReq",
            "required": [
                "s3_load_balancer_keepalived_ids"
            ],
            "properties": {
                "s3_load_balancer_keepalived_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "S3LoadBalancersResp": {
            "type": "object",
            "title": "S3LoadBalancersResp",
            "required": [
                "s3_load_balancers"
            ],
            "properties": {
                "s3_load_balancers": {
                    "description": "s3 load balancers",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/S3LoadBalancerRecord"
                    }
                }
            }
        },
        "SSLCertificate": {
            "description": "SSLCertificate ssl certificate model",
            "type": "object",
            "title": "SSLCertificate",
            "properties": {
                "create": {
                    "description": "created time of certificate",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "certificate description",
                    "type": "string"
                },
                "enabled": {
                    "description": "enabled or not",
                    "type": "boolean"
                },
                "force_https": {
                    "description": "redirect http request to https",
                    "type": "boolean"
                },
                "id": {
                    "description": "certificate id",
                    "type": "integer",
                    "format": "int64"
                },
                "issuer": {
                    "description": "issuer info",
                    "type": "object"
                },
                "name": {
                    "description": "certificate name",
                    "type": "string"
                },
                "not_after": {
                    "description": "validity is not after the time",
                    "type": "string",
                    "format": "date-time"
                },
                "not_before": {
                    "description": "validity is not before the time",
                    "type": "string",
                    "format": "date-time"
                },
                "permitted_dns_domains": {
                    "description": "permitted dns domains",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "public_key_algorithm": {
                    "description": "public key algorithm",
                    "type": "string"
                },
                "raw_certificate": {
                    "description": "public certificate",
                    "type": "string"
                },
                "signature_algorithm": {
                    "description": "signature algorithm",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subject": {
                    "description": "subject info",
                    "type": "object"
                },
                "type": {
                    "description": "applied type: admin, s3, dfs_s3",
                    "type": "string"
                },
                "update": {
                    "description": "updated time of certificate",
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "description": "certificate version",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "SSLCertificateCreateReq": {
            "type": "object",
            "title": "SSLCertificateCreateReq",
            "required": [
                "ssl_certificate"
            ],
            "properties": {
                "ssl_certificate": {
                    "$ref": "#/definitions/SSLCertificateCreateReq_Certificate"
                }
            }
        },
        "SSLCertificateCreateReq_Certificate": {
            "type": "object",
            "title": "SSLCertificateCreateReq_Certificate",
            "required": [
                "name",
                "certificate",
                "private_key"
            ],
            "properties": {
                "certificate": {
                    "description": "certificate in pem",
                    "type": "string"
                },
                "description": {
                    "description": "certificate description",
                    "type": "string"
                },
                "name": {
                    "description": "certificate name",
                    "type": "string"
                },
                "private_key": {
                    "description": "private key in pem",
                    "type": "string"
                }
            }
        },
        "SSLCertificateResp": {
            "type": "object",
            "title": "SSLCertificateResp",
            "required": [
                "ssl_certificate"
            ],
            "properties": {
                "ssl_certificate": {
                    "description": "ssl certificate",
                    "$ref": "#/definitions/SSLCertificate"
                }
            }
        },
        "SSLCertificateUpdateReq": {
            "type": "object",
            "title": "SSLCertificateUpdateReq",
            "required": [
                "ssl_certificate"
            ],
            "properties": {
                "ssl_certificate": {
                    "$ref": "#/definitions/SSLCertificateUpdateReq_Certificate"
                }
            }
        },
        "SSLCertificateUpdateReq_Certificate": {
            "type": "object",
            "title": "SSLCertificateUpdateReq_Certificate",
            "properties": {
                "description": {
                    "description": "certificate description",
                    "type": "string"
                },
                "enabled": {
                    "description": "enabled or not",
                    "type": "boolean"
                },
                "force_https": {
                    "description": "redirect http request to https",
                    "type": "boolean"
                },
                "name": {
                    "description": "certificate name",
                    "type": "string"
                },
                "type": {
                    "description": "applied type: admin, s3, dfs_s3",
                    "type": "string"
                }
            }
        },
        "SSLCertificate_Nestview": {
            "type": "object",
            "title": "SSLCertificate_Nestview",
            "properties": {
                "force_https": {
                    "description": "redirect http request to https",
                    "type": "boolean"
                },
                "id": {
                    "description": "certificate id",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "certificate name",
                    "type": "string"
                }
            }
        },
        "SSLCertificatesResp": {
            "type": "object",
            "title": "SSLCertificatesResp",
            "required": [
                "ssl_certificates"
            ],
            "properties": {
                "ssl_certificates": {
                    "description": "ssl certificates",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SSLCertificate"
                    }
                }
            }
        },
        "SSOTypes": {
            "description": "SSOTypes use to Unmarshal config",
            "type": "array",
            "items": {
                "$ref": "#/definitions/ssoType"
            }
        },
        "SecuritySSHConfig": {
            "description": "SecuritySSHConfig is the model of ssh config\n+X:model:generate;order_by=-ID;etcd_lock",
            "type": "object",
            "title": "SecuritySSHConfig",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "permit_root_login": {
                    "type": "boolean"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "pub_key_authentication": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "SecuritySSHConfigReq": {
            "type": "object",
            "title": "SecuritySSHConfigReq",
            "properties": {
                "ssh_config": {
                    "$ref": "#/definitions/SecuritySSHConfigReq_Config"
                }
            }
        },
        "SecuritySSHConfigReq_Config": {
            "type": "object",
            "title": "SecuritySSHConfigReq_Config",
            "required": [
                "port"
            ],
            "properties": {
                "encrypted_password": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "permit_root_login": {
                    "type": "boolean"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "pub_key_authentication": {
                    "type": "boolean"
                },
                "rsa_key_id": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "SecuritySSHConfigResp": {
            "type": "object",
            "title": "SecuritySSHConfigResp",
            "properties": {
                "ssh_config": {
                    "$ref": "#/definitions/SecuritySSHConfig"
                }
            }
        },
        "SecuritySSHValidation": {
            "description": "SecuritySSHValidation is the model of ssh validation\n+X:model:generate;order_by=-ID;etcd_lock",
            "type": "object",
            "title": "SecuritySSHValidation",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "permit_root_login": {
                    "type": "boolean"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "pub_key_authentication": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "SecuritySSHValidationReq": {
            "type": "object",
            "title": "SecuritySSHValidationReq",
            "properties": {
                "ssh_validation": {
                    "$ref": "#/definitions/SecuritySSHValidationReq_Validation"
                }
            }
        },
        "SecuritySSHValidationReq_Validation": {
            "type": "object",
            "title": "SecuritySSHValidationReq_Validation",
            "required": [
                "port"
            ],
            "properties": {
                "permit_root_login": {
                    "type": "boolean"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "pub_key_authentication": {
                    "type": "boolean"
                },
                "time_out": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "SecuritySSHValidationResp": {
            "type": "object",
            "title": "SecuritySSHValidationResp",
            "properties": {
                "ssh_validation": {
                    "$ref": "#/definitions/SecuritySSHValidation"
                }
            }
        },
        "Service": {
            "description": "Service defines basic install task, used to as API",
            "type": "object",
            "title": "Service",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "enabled": {
                    "type": "boolean"
                },
                "etag": {
                    "type": "string"
                },
                "heartbeat": {
                    "type": "string",
                    "format": "date-time"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "pid": {
                    "type": "integer",
                    "format": "int32"
                },
                "primary": {
                    "type": "boolean"
                },
                "ssl_certificate": {
                    "$ref": "#/definitions/SSLCertificate_Nestview"
                },
                "started_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "up": {
                    "type": "boolean"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ServiceResp": {
            "type": "object",
            "title": "ServiceResp",
            "required": [
                "service"
            ],
            "properties": {
                "service": {
                    "description": "service",
                    "$ref": "#/definitions/Service"
                }
            }
        },
        "ServicesResp": {
            "type": "object",
            "title": "ServicesResp",
            "required": [
                "services"
            ],
            "properties": {
                "services": {
                    "description": "services",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Service"
                    }
                }
            }
        },
        "SetExtCompatConfReq": {
            "type": "object",
            "title": "SetExtCompatConfReq",
            "required": [
                "ext_compat_conf"
            ],
            "properties": {
                "ext_compat_conf": {
                    "$ref": "#/definitions/ExtCompatConf"
                }
            }
        },
        "SetExtCompatConfResp": {
            "type": "object",
            "title": "SetExtCompatConfResp",
            "required": [
                "ext_compat_conf"
            ],
            "properties": {
                "ext_compat_conf": {
                    "$ref": "#/definitions/ExtCompatConf"
                }
            }
        },
        "SetOsdFullRatioReq": {
            "type": "object",
            "title": "SetOsdFullRatioReq",
            "required": [
                "osd_group"
            ],
            "properties": {
                "osd_group": {
                    "$ref": "#/definitions/SetOsdFullRatioReq_OsdGroup"
                }
            }
        },
        "SetOsdFullRatioReq_OsdGroup": {
            "type": "object",
            "title": "SetOsdFullRatioReq_OsdGroup",
            "required": [
                "osd_full_ratio"
            ],
            "properties": {
                "osd_full_ratio": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "SettingResp": {
            "type": "object",
            "title": "SettingResp",
            "properties": {
                "settings": {
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "SliceStringField": {
            "description": "SliceStringField defines slice string field",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "SmartAttr": {
            "description": "SmartAttr defines disk smart attribute",
            "type": "object",
            "title": "SmartAttr",
            "properties": {
                "attr_id": {
                    "description": "sata only",
                    "type": "integer",
                    "format": "int64"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "flag": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "base",
                    "type": "string"
                },
                "raw_value": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "thresh": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "when_failed": {
                    "type": "string"
                },
                "worst": {
                    "type": "string"
                }
            }
        },
        "Snapshot": {
            "description": "Snapshot contains all information about a single snapshot",
            "type": "object",
            "title": "Snapshot",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "allocated_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "block_consistent_snapshot": {
                    "$ref": "#/definitions/ConsistentSnapshot_Nestview"
                },
                "block_volume_group_snapshot": {
                    "$ref": "#/definitions/VolumeGroupSnapshot_Nestview"
                },
                "cloned_block_volume_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "creator": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "passive": {
                    "type": "boolean"
                },
                "pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "protected": {
                    "type": "boolean"
                },
                "remote_cluster": {
                    "description": "the snapshot is replicated from a remote cluster",
                    "$ref": "#/definitions/RemoteCluster_Nestview"
                },
                "reserved": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "snap_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "volume": {
                    "$ref": "#/definitions/Volume_Nestview"
                }
            }
        },
        "SnapshotBackupConfig": {
            "description": "SnapshotBackupConfig contains config for snapshot backup",
            "type": "object",
            "title": "SnapshotBackupConfig",
            "properties": {
                "access_key": {
                    "type": "string"
                },
                "app_id": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "mount_path": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "region": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "SnapshotCreateReq": {
            "type": "object",
            "title": "SnapshotCreateReq",
            "required": [
                "block_snapshot"
            ],
            "properties": {
                "block_snapshot": {
                    "$ref": "#/definitions/SnapshotCreateReq_Snapshot"
                }
            }
        },
        "SnapshotCreateReq_Snapshot": {
            "type": "object",
            "title": "SnapshotCreateReq_Snapshot",
            "required": [
                "block_volume_id",
                "name",
                "description"
            ],
            "properties": {
                "block_volume_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "SnapshotResp": {
            "type": "object",
            "title": "SnapshotResp",
            "required": [
                "block_snapshot"
            ],
            "properties": {
                "block_snapshot": {
                    "description": "snapshot",
                    "$ref": "#/definitions/Snapshot"
                }
            }
        },
        "SnapshotUpdateReq": {
            "type": "object",
            "title": "SnapshotUpdateReq",
            "required": [
                "block_snapshot"
            ],
            "properties": {
                "block_snapshot": {
                    "$ref": "#/definitions/SnapshotUpdateReq_Snapshot"
                }
            }
        },
        "SnapshotUpdateReq_Snapshot": {
            "type": "object",
            "title": "SnapshotUpdateReq_Snapshot",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Snapshot_Nestview": {
            "type": "object",
            "title": "Snapshot_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "SnapshotsResp": {
            "type": "object",
            "title": "SnapshotsResp",
            "required": [
                "block_snapshots"
            ],
            "properties": {
                "block_snapshots": {
                    "description": "snapshots",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Snapshot"
                    }
                }
            }
        },
        "SnmpGateway": {
            "description": "SnmpGateway defines the snmp gateway",
            "type": "object",
            "title": "SnmpGateway",
            "properties": {
                "auth_password": {
                    "type": "string"
                },
                "auth_protocol": {
                    "type": "string"
                },
                "context_engine_id": {
                    "type": "string"
                },
                "context_name": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "priv_password": {
                    "type": "string"
                },
                "priv_protocol": {
                    "type": "string"
                },
                "read_community": {
                    "description": "V2c specific",
                    "type": "string"
                },
                "security_engine_id": {
                    "type": "string"
                },
                "security_level": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_name": {
                    "description": "V3 specific",
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "write_community": {
                    "type": "string"
                }
            }
        },
        "SnmpGatewayReq": {
            "type": "object",
            "title": "SnmpGatewayReq",
            "properties": {
                "Port": {
                    "type": "integer",
                    "format": "int64"
                },
                "auth_password": {
                    "type": "string"
                },
                "auth_protocol": {
                    "type": "string"
                },
                "context_engine_id": {
                    "type": "string"
                },
                "context_name": {
                    "type": "string"
                },
                "host_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "priv_password": {
                    "type": "string"
                },
                "priv_protocol": {
                    "type": "string"
                },
                "read_community": {
                    "type": "string"
                },
                "security_engine_id": {
                    "type": "string"
                },
                "security_level": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "write_community": {
                    "type": "string"
                }
            }
        },
        "SnmpResp": {
            "type": "object",
            "title": "SnmpResp",
            "required": [
                "snmp"
            ],
            "properties": {
                "snmp": {
                    "$ref": "#/definitions/SnmpResp_Snmp"
                }
            }
        },
        "SnmpResp_Snmp": {
            "type": "object",
            "title": "SnmpResp_Snmp",
            "required": [
                "enabled",
                "gateways",
                "receivers"
            ],
            "properties": {
                "enabled": {
                    "description": "enable snmp or not",
                    "type": "boolean"
                },
                "gateways": {
                    "description": "snmp gateways",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SnmpGateway"
                    }
                },
                "receivers": {
                    "description": "snmp receivers",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TrapReceiver"
                    }
                }
            }
        },
        "SnmpSetReq": {
            "type": "object",
            "title": "SnmpSetReq",
            "properties": {
                "snmp": {
                    "$ref": "#/definitions/SnmpSetReq_Snmp"
                }
            }
        },
        "SnmpSetReq_Snmp": {
            "type": "object",
            "title": "SnmpSetReq_Snmp",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "gateways": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SnmpGatewayReq"
                    }
                },
                "receivers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SnmpTrapReceiverReq"
                    }
                }
            }
        },
        "SnmpTrapReceiverReq": {
            "type": "object",
            "title": "SnmpTrapReceiverReq",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "SourceRecord": {
            "type": "object",
            "title": "SourceRecord",
            "properties": {
                "highlight": {},
                "source": {},
                "type": {
                    "type": "string"
                }
            }
        },
        "SourcesResp": {
            "type": "object",
            "title": "SourcesResp",
            "properties": {
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SourceRecord"
                    }
                }
            }
        },
        "StorageProtocol": {
            "description": "StorageProtocol defines storage protocol",
            "type": "string",
            "title": "StorageProtocol"
        },
        "SumOspGatewayStat": {
            "description": "SumOspGatewayStat defines response for sum of osp gateways stat",
            "type": "object",
            "title": "SumOspGatewayStat",
            "properties": {
                "down_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "down_latency": {
                    "type": "number",
                    "format": "double"
                },
                "down_ops": {
                    "type": "number",
                    "format": "double"
                },
                "sync_down_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "sync_down_latency": {
                    "type": "number",
                    "format": "double"
                },
                "sync_down_ops": {
                    "type": "number",
                    "format": "double"
                },
                "sync_up_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "sync_up_latency": {
                    "type": "number",
                    "format": "double"
                },
                "sync_up_ops": {
                    "type": "number",
                    "format": "double"
                },
                "up_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "up_latency": {
                    "type": "number",
                    "format": "double"
                },
                "up_ops": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "SystemLog": {
            "description": "SystemLog defines the system log",
            "type": "object",
            "title": "SystemLog",
            "properties": {
                "catalog": {
                    "type": "string"
                },
                "host": {
                    "$ref": "#/definitions/Host"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "last_updated_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "SystemLogsResp": {
            "type": "object",
            "title": "SystemLogsResp",
            "required": [
                "system_logs"
            ],
            "properties": {
                "system_logs": {
                    "description": "system logs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SystemLog"
                    }
                }
            }
        },
        "Target": {
            "description": "Target defines targets of different metric",
            "type": "object",
            "title": "Target",
            "properties": {
                "access_path": {
                    "$ref": "#/definitions/AccessPath_Nestview"
                },
                "board": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dc_name": {
                    "type": "string"
                },
                "gateway_ips": {
                    "type": "string"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "iqn": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "TargetAddGatewayIPsReq": {
            "type": "object",
            "title": "TargetAddGatewayIPsReq",
            "properties": {
                "target": {
                    "$ref": "#/definitions/TargetAddGatewayIPsReq_Target"
                }
            }
        },
        "TargetAddGatewayIPsReq_Target": {
            "type": "object",
            "title": "TargetAddGatewayIPsReq_Target",
            "properties": {
                "gateway_ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "TargetCreateReq": {
            "type": "object",
            "title": "TargetCreateReq",
            "properties": {
                "target": {
                    "$ref": "#/definitions/TargetCreateReq_Target"
                }
            }
        },
        "TargetCreateReq_Target": {
            "type": "object",
            "title": "TargetCreateReq_Target",
            "properties": {
                "access_path_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "gateway_ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "host_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TargetRecord": {
            "type": "object",
            "title": "TargetRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/Target"
                },
                {
                    "properties": {
                        "luns_info": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LunInfo"
                            }
                        }
                    }
                }
            ]
        },
        "TargetReq": {
            "type": "object",
            "title": "TargetReq",
            "properties": {
                "gateway_ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "host_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TargetResp": {
            "type": "object",
            "title": "TargetResp",
            "required": [
                "target"
            ],
            "properties": {
                "target": {
                    "$ref": "#/definitions/Target"
                }
            }
        },
        "Target_Nestview": {
            "type": "object",
            "title": "Target_Nestview",
            "properties": {
                "gateway_ips": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TargetsResp": {
            "type": "object",
            "title": "TargetsResp",
            "required": [
                "targets"
            ],
            "properties": {
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TargetRecord"
                    }
                }
            }
        },
        "Task": {
            "description": "Task defines a task will be run on a host",
            "type": "object",
            "title": "Task",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "data": {
                    "type": "string"
                },
                "error_msg": {
                    "type": "string"
                },
                "execute": {
                    "type": "string",
                    "format": "date-time"
                },
                "finish": {
                    "type": "string",
                    "format": "date-time"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "host_role": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "priority": {
                    "type": "integer",
                    "format": "int64"
                },
                "retried": {
                    "type": "boolean"
                },
                "retry": {
                    "type": "integer",
                    "format": "int64"
                },
                "retry_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "TaskIDResp": {
            "type": "object",
            "title": "TaskIDResp",
            "properties": {
                "task_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TaskResp": {
            "type": "object",
            "title": "TaskResp",
            "required": [
                "task"
            ],
            "properties": {
                "task": {
                    "description": "task",
                    "$ref": "#/definitions/Task"
                }
            }
        },
        "TasksResp": {
            "type": "object",
            "title": "TasksResp",
            "required": [
                "tasks"
            ],
            "properties": {
                "tasks": {
                    "description": "tasks",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Task"
                    }
                }
            }
        },
        "Token": {
            "description": "An access token contains the security information for a logon session. The\nsystem creates an access token when a user logs on, and every process executed\non behalf of the user has a copy of the token. The token identifies the user,\nthe user's groups, and the user's privileges. The system uses the token to\ncontrol access to securable objects and to control the ability of the user to\nperform various system-related operations on the local computer.",
            "type": "object",
            "title": "Token",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "expires": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "uuid": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "TokenCreateReq": {
            "type": "object",
            "title": "TokenCreateReq",
            "required": [
                "auth"
            ],
            "properties": {
                "auth": {
                    "$ref": "#/definitions/TokenCreateReq_Auth"
                }
            }
        },
        "TokenCreateReq_Auth": {
            "type": "object",
            "title": "TokenCreateReq_Auth",
            "required": [
                "identity"
            ],
            "properties": {
                "identity": {
                    "$ref": "#/definitions/TokenCreateReq_Auth_Identity"
                }
            }
        },
        "TokenCreateReq_Auth_Identity": {
            "type": "object",
            "title": "TokenCreateReq_Auth_Identity",
            "properties": {
                "password": {
                    "description": "password for auth",
                    "$ref": "#/definitions/AuthPasswordReq"
                },
                "token": {
                    "description": "token for auth",
                    "$ref": "#/definitions/AuthTokenReq"
                }
            }
        },
        "TokenRecord": {
            "description": "TokenRecord defines token record for api response",
            "type": "object",
            "title": "TokenRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/Token"
                },
                {
                    "properties": {
                        "roles": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "TokenResp": {
            "type": "object",
            "title": "TokenResp",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "description": "token",
                    "$ref": "#/definitions/TokenRecord"
                }
            }
        },
        "TopologyFromOsdReq": {
            "type": "object",
            "title": "TopologyFromOsdReq",
            "required": [
                "osd_ids"
            ],
            "properties": {
                "osd_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "protect_domain_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TrapReceiver": {
            "description": "TrapReceiver defines the snmp trap receiver",
            "type": "object",
            "title": "TrapReceiver",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip": {
                    "type": "string"
                },
                "msg_level": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Trash": {
            "description": "Trash defines the trash attributes. +X:model:generate;etcd_lock=with_get;",
            "type": "object",
            "title": "Trash",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_type": {
                    "type": "string"
                },
                "retention": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "trash_resource_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "TrashResource": {
            "description": "TrashResource is the corresponding trash record. +X:model:etcd_lock=with_get;",
            "type": "object",
            "title": "TrashResource",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "expire_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "TrashResourceResp": {
            "type": "object",
            "title": "TrashResourceResp",
            "required": [
                "trash_resource"
            ],
            "properties": {
                "trash_resource": {
                    "description": "trash resource",
                    "$ref": "#/definitions/TrashResource"
                }
            }
        },
        "TrashResource_Nestview": {
            "type": "object",
            "title": "TrashResource_Nestview",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "expire_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_type": {
                    "type": "string"
                }
            }
        },
        "TrashResourcesResp": {
            "type": "object",
            "title": "TrashResourcesResp",
            "required": [
                "trash_resources"
            ],
            "properties": {
                "trash_resources": {
                    "description": "trash resources",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TrashResource"
                    }
                }
            }
        },
        "TrashResp": {
            "type": "object",
            "title": "TrashResp",
            "required": [
                "trash"
            ],
            "properties": {
                "trash": {
                    "description": "trash",
                    "$ref": "#/definitions/Trash"
                }
            }
        },
        "TrashUpdateReq": {
            "type": "object",
            "title": "TrashUpdateReq",
            "required": [
                "trash"
            ],
            "properties": {
                "trash": {
                    "$ref": "#/definitions/TrashUpdateReq_Trash"
                }
            }
        },
        "TrashUpdateReq_Trash": {
            "type": "object",
            "title": "TrashUpdateReq_Trash",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "retention": {
                    "type": "string"
                }
            }
        },
        "TrashesResp": {
            "type": "object",
            "title": "TrashesResp",
            "required": [
                "trashes"
            ],
            "properties": {
                "trashes": {
                    "description": "trashes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Trash"
                    }
                }
            }
        },
        "Type": {
            "description": "Type is Result type",
            "type": "string",
            "title": "Type"
        },
        "UpdateAlertRuleResourceBlacklistReq": {
            "type": "object",
            "title": "UpdateAlertRuleResourceBlacklistReq",
            "required": [
                "alert_rule_resource_blacklist"
            ],
            "properties": {
                "alert_rule_resource_blacklist": {
                    "description": "create resource blacklist request",
                    "$ref": "#/definitions/UpdateAlertRuleResourceBlacklistReq_AlertRuleResourceBlacklist"
                }
            }
        },
        "UpdateAlertRuleResourceBlacklistReq_AlertRuleResourceBlacklist": {
            "type": "object",
            "title": "UpdateAlertRuleResourceBlacklistReq_AlertRuleResourceBlacklist",
            "properties": {
                "resource_ids": {
                    "description": "resource blacklist id must array, ex: [1, 2, 3]",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        },
        "UpdateOspPartitionTypeReq": {
            "type": "object",
            "title": "UpdateOspPartitionTypeReq",
            "properties": {
                "type": {
                    "description": "partition type",
                    "type": "string"
                }
            }
        },
        "UpdateVolumeStatReq": {
            "type": "object",
            "title": "UpdateVolumeStatReq",
            "properties": {
                "pool_name": {
                    "type": "string"
                },
                "stat": {
                    "$ref": "#/definitions/VolumeStat"
                },
                "volume_name": {
                    "type": "string"
                }
            }
        },
        "UsedDataKbytePrediction": {
            "description": "UsedDataKbytePrediction is a point in a prediction graph",
            "type": "object",
            "title": "UsedDataKbytePrediction",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "used_data_kbyte": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "UsedQuota": {
            "type": "object",
            "title": "UsedQuota",
            "required": [
                "used_capacity",
                "used_hdd_capacity",
                "used_ssd_capacity",
                "used_host_num"
            ],
            "properties": {
                "used_capacity": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_hdd_capacity": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_host_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "used_ssd_capacity": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "User": {
            "type": "object",
            "title": "User",
            "properties": {
                "create": {
                    "description": "time of creating user",
                    "type": "string",
                    "format": "date-time"
                },
                "email": {
                    "description": "email of user",
                    "type": "string"
                },
                "enabled": {
                    "description": "enable the user or not",
                    "type": "boolean"
                },
                "external_id": {
                    "description": "external id of user",
                    "type": "string"
                },
                "id": {
                    "description": "id of user",
                    "type": "integer",
                    "format": "int64"
                },
                "identity_platform": {
                    "description": "identity platform of user",
                    "$ref": "#/definitions/IdentityPlatform_Nestview"
                },
                "name": {
                    "description": "name of user",
                    "type": "string"
                },
                "password_last_update": {
                    "description": "time of last password update",
                    "type": "string",
                    "format": "date-time"
                },
                "roles": {
                    "description": "roles of user",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "UserCreateReq": {
            "type": "object",
            "title": "UserCreateReq",
            "required": [
                "user"
            ],
            "properties": {
                "user": {
                    "$ref": "#/definitions/UserCreateReq_User"
                }
            }
        },
        "UserCreateReq_User": {
            "type": "object",
            "title": "UserCreateReq_User",
            "required": [
                "name",
                "email",
                "password",
                "enabled"
            ],
            "properties": {
                "email": {
                    "description": "email of user",
                    "type": "string"
                },
                "enabled": {
                    "description": "enable or disable the user",
                    "type": "boolean"
                },
                "encrypted_password": {
                    "description": "encrypted password for auth",
                    "type": "string"
                },
                "name": {
                    "description": "name of user",
                    "type": "string"
                },
                "password": {
                    "description": "password of user",
                    "type": "string"
                },
                "roles": {
                    "description": "roles of user",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rsa_key_id": {
                    "description": "rsa key id",
                    "type": "string"
                }
            }
        },
        "UserRecord": {
            "description": "UserRecord defines user record for api response",
            "type": "object",
            "title": "UserRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/User"
                }
            ]
        },
        "UserResp": {
            "type": "object",
            "title": "UserResp",
            "required": [
                "user"
            ],
            "properties": {
                "user": {
                    "description": "user",
                    "$ref": "#/definitions/UserRecord"
                }
            }
        },
        "UserSettings": {
            "type": "object",
            "title": "UserSettings",
            "required": [
                "user"
            ],
            "properties": {
                "user": {
                    "$ref": "#/definitions/UserSettings_User"
                }
            }
        },
        "UserSettings_User": {
            "type": "object",
            "title": "UserSettings_User",
            "required": [
                "settings"
            ],
            "properties": {
                "settings": {
                    "$ref": "#/definitions/UserSettings_User_Settings"
                }
            }
        },
        "UserSettings_User_Settings": {
            "type": "object",
            "title": "UserSettings_User_Settings",
            "properties": {
                "dashboard": {
                    "description": "dashboard setting",
                    "type": "string"
                }
            }
        },
        "UserUpdateReq": {
            "type": "object",
            "title": "UserUpdateReq",
            "required": [
                "user"
            ],
            "properties": {
                "user": {
                    "$ref": "#/definitions/UserUpdateReq_User"
                }
            }
        },
        "UserUpdateReq_User": {
            "type": "object",
            "title": "UserUpdateReq_User",
            "required": [
                "name",
                "email",
                "enabled"
            ],
            "properties": {
                "email": {
                    "description": "email of user",
                    "type": "string"
                },
                "enabled": {
                    "description": "enable or disable the user",
                    "type": "boolean"
                },
                "name": {
                    "description": "name of user",
                    "type": "string"
                },
                "roles": {
                    "description": "roles of user",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "User_Nestview": {
            "type": "object",
            "title": "User_Nestview",
            "properties": {
                "id": {
                    "description": "id of user",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name of user",
                    "type": "string"
                }
            }
        },
        "UsersResp": {
            "type": "object",
            "title": "UsersResp",
            "required": [
                "users"
            ],
            "properties": {
                "users": {
                    "description": "users",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserRecord"
                    }
                }
            }
        },
        "VIP": {
            "description": "VIP is a virtual IP provided access to resources.\n+X:model:generate;plur=VIPs;with_detailed;order_by=-ID;check_get +X:benchmark:",
            "type": "object",
            "title": "VIP",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip": {
                    "type": "string"
                },
                "mac_address": {
                    "type": "string"
                },
                "mask": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "vip_group": {
                    "$ref": "#/definitions/VIPGroup_Nestview"
                },
                "virtual_router_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VIPArgs": {
            "type": "object",
            "title": "VIPArgs",
            "required": [
                "ip",
                "network_address_id"
            ],
            "properties": {
                "ip": {
                    "type": "string"
                },
                "mask": {
                    "type": "integer",
                    "format": "int64"
                },
                "network_address_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VIPCreateReq": {
            "type": "object",
            "title": "VIPCreateReq",
            "required": [
                "vip"
            ],
            "properties": {
                "vip": {
                    "$ref": "#/definitions/VIPCreateReq_VIP"
                }
            }
        },
        "VIPCreateReq_VIP": {
            "type": "object",
            "title": "VIPCreateReq_VIP",
            "required": [
                "ip",
                "network_address_id",
                "vip_group_id"
            ],
            "properties": {
                "ip": {
                    "type": "string"
                },
                "mask": {
                    "type": "integer",
                    "format": "int64"
                },
                "network_address_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "vip_group_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VIPGroup": {
            "description": "VIPGroup contains many vips and associated to a resource.\n+X:model:generate;plur=VIPGroups;related_depth=0;order_by=-ID;check_get\n+X:benchmark:",
            "type": "object",
            "title": "VIPGroup",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "preempt": {
                    "type": "boolean"
                },
                "resource_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "VIPGroupCreateReq": {
            "type": "object",
            "title": "VIPGroupCreateReq",
            "required": [
                "vip_group"
            ],
            "properties": {
                "vip_group": {
                    "$ref": "#/definitions/VIPGroupCreateReq_VIPGroup"
                }
            }
        },
        "VIPGroupCreateReq_VIPGroup": {
            "type": "object",
            "title": "VIPGroupCreateReq_VIPGroup",
            "required": [
                "resource_type",
                "resource_id",
                "network",
                "vips"
            ],
            "properties": {
                "network": {
                    "type": "string"
                },
                "preempt": {
                    "type": "boolean"
                },
                "resource_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_type": {
                    "type": "string"
                },
                "vips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VIPArgs"
                    }
                }
            }
        },
        "VIPGroupResp": {
            "type": "object",
            "title": "VIPGroupResp",
            "required": [
                "vip_group"
            ],
            "properties": {
                "vip_group": {
                    "$ref": "#/definitions/VIPGroup"
                }
            }
        },
        "VIPGroupResps": {
            "type": "object",
            "title": "VIPGroupResps",
            "required": [
                "vip_groups"
            ],
            "properties": {
                "vip_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VIPGroup"
                    }
                }
            }
        },
        "VIPGroupUpdateReq": {
            "type": "object",
            "title": "VIPGroupUpdateReq",
            "required": [
                "vip_group"
            ],
            "properties": {
                "vip_group": {
                    "$ref": "#/definitions/VIPGroupUpdateReq_VIPGroup"
                }
            }
        },
        "VIPGroupUpdateReq_VIPGroup": {
            "type": "object",
            "title": "VIPGroupUpdateReq_VIPGroup",
            "properties": {
                "preempt": {
                    "type": "boolean"
                }
            }
        },
        "VIPGroup_Nestview": {
            "type": "object",
            "title": "VIPGroup_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "resource_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "resource_type": {
                    "type": "string"
                }
            }
        },
        "VIPInstance": {
            "description": "VIPInstance is an instance of a VIP.\n+X:model:generate;plur=VIPInstances;order_by=-ID;check_get +X:benchmark:",
            "type": "object",
            "title": "VIPInstance",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "network_address": {
                    "$ref": "#/definitions/NetworkAddress_Nestview"
                },
                "priority": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "vip": {
                    "$ref": "#/definitions/VIP_Nestview"
                }
            }
        },
        "VIPInstanceResp": {
            "type": "object",
            "title": "VIPInstanceResp",
            "properties": {
                "vip_instance": {
                    "$ref": "#/definitions/VIPInstance"
                }
            }
        },
        "VIPInstance_Nestview": {
            "type": "object",
            "title": "VIPInstance_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VIPInstancesResp": {
            "type": "object",
            "title": "VIPInstancesResp",
            "properties": {
                "vip_instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VIPInstance"
                    }
                }
            }
        },
        "VIPRecord": {
            "description": "VIPRecord represents doc returned by API.",
            "type": "object",
            "title": "VIPRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/VIP"
                },
                {
                    "properties": {
                        "current_vip_instance": {
                            "$ref": "#/definitions/VIPInstance_Nestview"
                        },
                        "default_vip_instance": {
                            "description": "Copy these two fields from corresponding fields of VIP to avoid JSON marshal\nrecursion.",
                            "$ref": "#/definitions/VIPInstance_Nestview"
                        }
                    }
                }
            ]
        },
        "VIPResp": {
            "type": "object",
            "title": "VIPResp",
            "properties": {
                "vip": {
                    "$ref": "#/definitions/VIPRecord"
                }
            }
        },
        "VIP_Nestview": {
            "type": "object",
            "title": "VIP_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip": {
                    "type": "string"
                },
                "mask": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VIPsResp": {
            "type": "object",
            "title": "VIPsResp",
            "properties": {
                "vips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VIPRecord"
                    }
                }
            }
        },
        "VMDisk": {
            "description": "VMDisk defines disk of vm",
            "type": "object",
            "title": "VMDisk",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "disk": {
                    "$ref": "#/definitions/Disk_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string"
                },
                "vm": {
                    "$ref": "#/definitions/VirtualMachine_Nestview"
                },
                "volume": {
                    "$ref": "#/definitions/Volume_Nestview"
                }
            }
        },
        "VMFlavor": {
            "description": "VMFlavor defines flavor of vm",
            "type": "object",
            "title": "VMFlavor",
            "properties": {
                "cpu": {
                    "type": "integer",
                    "format": "int64"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "memory_kbyte": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "root_disk_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "VMFlavorResp": {
            "type": "object",
            "title": "VMFlavorResp",
            "properties": {
                "vm_flavor": {
                    "$ref": "#/definitions/VMFlavor"
                }
            }
        },
        "VMFlavor_Nestview": {
            "type": "object",
            "title": "VMFlavor_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "VMFlavorsResp": {
            "type": "object",
            "title": "VMFlavorsResp",
            "properties": {
                "vm_flavors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VMFlavor"
                    }
                }
            }
        },
        "VMImage_Nestview": {
            "type": "object",
            "title": "VMImage_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "VMNetworkInterface": {
            "description": "VMNetworkInterface defines the nic of vm",
            "type": "object",
            "title": "VMNetworkInterface",
            "properties": {
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "gateway": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip_address": {
                    "type": "string"
                },
                "mac_address": {
                    "type": "string"
                },
                "mask": {
                    "type": "integer",
                    "format": "int64"
                },
                "master": {
                    "$ref": "#/definitions/VMNetworkInterface_Nestview"
                },
                "name": {
                    "type": "string"
                },
                "nat_config": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortMapPair"
                    }
                },
                "network_type": {
                    "type": "string"
                },
                "pci_address": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "vm": {
                    "$ref": "#/definitions/VirtualMachine_Nestview"
                }
            }
        },
        "VMNetworkInterface_Nestview": {
            "type": "object",
            "title": "VMNetworkInterface_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "VersionResp": {
            "type": "object",
            "title": "VersionResp",
            "required": [
                "version"
            ],
            "properties": {
                "version": {
                    "description": "version",
                    "type": "string"
                }
            }
        },
        "VirtualMachine": {
            "description": "VirtualMachine defines libvirt VM",
            "type": "object",
            "title": "VirtualMachine",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "custom_cpu": {
                    "type": "integer",
                    "format": "int64"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VMDisk"
                    }
                },
                "flavor": {
                    "$ref": "#/definitions/VMFlavor_Nestview"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "image": {
                    "$ref": "#/definitions/VMImage_Nestview"
                },
                "name": {
                    "type": "string"
                },
                "nics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VMNetworkInterface"
                    }
                },
                "root_volume": {
                    "$ref": "#/definitions/Volume_Nestview"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "uuid": {
                    "type": "string"
                },
                "vm_status": {
                    "type": "string"
                }
            }
        },
        "VirtualMachineResp": {
            "type": "object",
            "title": "VirtualMachineResp",
            "properties": {
                "virtual_machine": {
                    "$ref": "#/definitions/VirtualMachine"
                }
            }
        },
        "VirtualMachine_Nestview": {
            "type": "object",
            "title": "VirtualMachine_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "VirtualMachinesResp": {
            "type": "object",
            "title": "VirtualMachinesResp",
            "properties": {
                "virtual_machines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VirtualMachine"
                    }
                }
            }
        },
        "Volume": {
            "description": "Volume contains information of a volume and it's stats.",
            "type": "object",
            "title": "Volume",
            "properties": {
                "access_path": {
                    "$ref": "#/definitions/AccessPath_Nestview"
                },
                "action_status": {
                    "type": "string"
                },
                "allocated_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "alua_enabled": {
                    "type": "boolean"
                },
                "block_snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "block_volume_group": {
                    "$ref": "#/definitions/VolumeGroup_Nestview"
                },
                "client_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cloud_platform": {
                    "$ref": "#/definitions/CloudPlatform_Nestview"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "crc_check": {
                    "type": "boolean"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "dp_block_backup_policy_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "dp_block_replication_policy": {
                    "$ref": "#/definitions/DpBlockReplicationPolicy_Nestview"
                },
                "dp_block_snapshot_policy": {
                    "$ref": "#/definitions/DpBlockSnapshotPolicy_Nestview"
                },
                "flattened": {
                    "type": "boolean"
                },
                "format": {
                    "description": "128 or 129 (advanced)",
                    "type": "integer",
                    "format": "int64"
                },
                "hidden": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "image_id": {
                    "type": "string"
                },
                "latest_snapshot_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "migration_stripes": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "original_name": {
                    "type": "string"
                },
                "original_volume_name": {
                    "type": "string"
                },
                "passive": {
                    "type": "boolean"
                },
                "performance_priority": {
                    "description": "0 or 1",
                    "type": "integer",
                    "format": "int64"
                },
                "pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "progress": {
                    "type": "number",
                    "format": "double"
                },
                "qos": {
                    "$ref": "#/definitions/VolumeQosSpec"
                },
                "qos_enabled": {
                    "type": "boolean"
                },
                "rbd_client": {
                    "$ref": "#/definitions/RBDClient"
                },
                "recycled": {
                    "description": "trash",
                    "type": "boolean"
                },
                "remote_cluster": {
                    "description": "the volume is replicated from a remote cluster, via snapshot or IO",
                    "$ref": "#/definitions/RemoteCluster_Nestview"
                },
                "replication_dest": {
                    "type": "string"
                },
                "replication_pool": {
                    "type": "string"
                },
                "replication_pool_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "replication_pool_name": {
                    "type": "string"
                },
                "replication_role": {
                    "type": "string"
                },
                "replication_status": {
                    "type": "string"
                },
                "replication_version": {
                    "type": "integer",
                    "format": "int64"
                },
                "replication_volume": {
                    "type": "string"
                },
                "replication_volume_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "replication_volume_name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "sn": {
                    "type": "string"
                },
                "snapshot": {
                    "$ref": "#/definitions/Snapshot_Nestview"
                },
                "snapshot_replication_role": {
                    "type": "string"
                },
                "snapshot_replication_status": {
                    "type": "string"
                },
                "source_type": {
                    "type": "string"
                },
                "source_uuid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "trash_resource": {
                    "$ref": "#/definitions/TrashResource_Nestview"
                },
                "uid": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "volume_name": {
                    "type": "string"
                }
            }
        },
        "VolumeAsyncReplicationProtectionReq": {
            "type": "object",
            "title": "VolumeAsyncReplicationProtectionReq",
            "required": [
                "dp_block_async_replication_policy_id",
                "dest_pool_id",
                "dest_pool_name",
                "dest_volume_name"
            ],
            "properties": {
                "dest_pool_id": {
                    "description": "destination pool id",
                    "type": "integer",
                    "format": "int64"
                },
                "dest_pool_name": {
                    "description": "destination pool name",
                    "type": "string"
                },
                "dest_volume_name": {
                    "description": "destination volume name",
                    "type": "string"
                },
                "dp_block_async_replication_policy_id": {
                    "description": "policy",
                    "type": "integer",
                    "format": "int64"
                },
                "initial_sync_time": {
                    "description": "initial sync time",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "VolumeBackupProtectionReq": {
            "type": "object",
            "title": "VolumeBackupProtectionReq",
            "properties": {
                "block_volume": {
                    "$ref": "#/definitions/VolumeBackupProtectionReq_Volume"
                }
            }
        },
        "VolumeBackupProtectionReq_Volume": {
            "type": "object",
            "title": "VolumeBackupProtectionReq_Volume",
            "required": [
                "dp_block_backup_policy_id"
            ],
            "properties": {
                "dp_block_backup_policy_id": {
                    "description": "policy",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VolumeCrcSetReq": {
            "type": "object",
            "title": "VolumeCrcSetReq",
            "properties": {
                "block_volume": {
                    "$ref": "#/definitions/VolumeCrcSetReq_Volume"
                }
            }
        },
        "VolumeCrcSetReq_Volume": {
            "type": "object",
            "title": "VolumeCrcSetReq_Volume",
            "required": [
                "crc_check"
            ],
            "properties": {
                "crc_check": {
                    "type": "boolean"
                }
            }
        },
        "VolumeCreateReq": {
            "type": "object",
            "title": "VolumeCreateReq",
            "required": [
                "block_volume"
            ],
            "properties": {
                "block_volume": {
                    "$ref": "#/definitions/VolumeCreateReq_Volume"
                }
            }
        },
        "VolumeCreateReq_Volume": {
            "type": "object",
            "title": "VolumeCreateReq_Volume",
            "required": [
                "pool_id",
                "name"
            ],
            "properties": {
                "block_snapshot_id": {
                    "description": "id of related block volume snapshot",
                    "type": "integer",
                    "format": "int64"
                },
                "crc_check": {
                    "description": "crc check or not",
                    "type": "boolean"
                },
                "description": {
                    "description": "description of volume",
                    "type": "string"
                },
                "flattened": {
                    "description": "flatten or not flatten",
                    "type": "boolean"
                },
                "format": {
                    "description": "volume format: { 128 | 129 (advanced) }, default 128",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "name of volume",
                    "type": "string"
                },
                "performance_priority": {
                    "description": "performance priority: { 0 | 1 }, default 0",
                    "type": "integer",
                    "format": "int64"
                },
                "pool_id": {
                    "description": "id of pool belonged to",
                    "type": "integer",
                    "format": "int64"
                },
                "qos": {
                    "description": "qos of volume",
                    "$ref": "#/definitions/VolumeQosSpec"
                },
                "qos_enabled": {
                    "description": "enable or disable the qos",
                    "type": "boolean"
                },
                "remote_cluster_fs_id": {
                    "description": "replication remote cluster fsid",
                    "type": "string"
                },
                "replication_pool": {
                    "description": "replication peer pool",
                    "type": "string"
                },
                "replication_pool_id": {
                    "description": "replication peer pool id",
                    "type": "integer",
                    "format": "int64"
                },
                "replication_pool_name": {
                    "description": "replication peer pool name",
                    "type": "string"
                },
                "replication_version": {
                    "description": "replication version",
                    "type": "integer",
                    "format": "int64"
                },
                "replication_volume": {
                    "description": "replication peer volume",
                    "type": "string"
                },
                "replication_volume_id": {
                    "description": "replication peer volume id",
                    "type": "integer",
                    "format": "int64"
                },
                "replication_volume_name": {
                    "description": "replication peer volume name",
                    "type": "string"
                },
                "size": {
                    "description": "size of volume",
                    "type": "integer",
                    "format": "int64"
                },
                "sn": {
                    "description": "volume sn, used when creating replication volume",
                    "type": "string"
                },
                "snapshot_replication_pool": {
                    "description": "snapshot replication peer pool",
                    "type": "string"
                },
                "snapshot_replication_pool_id": {
                    "description": "snapshot replication peer pool id",
                    "type": "integer",
                    "format": "int64"
                },
                "snapshot_replication_volume": {
                    "description": "snapshot replication peer volume",
                    "type": "string"
                },
                "snapshot_replication_volume_id": {
                    "description": "snapshot replication peer volume id",
                    "type": "integer",
                    "format": "int64"
                },
                "uid": {
                    "description": "UID of volume",
                    "type": "string"
                }
            }
        },
        "VolumeDpBlockBackupPolicyMapping": {
            "description": "VolumeDpBlockBackupPolicyMapping represent the mapping relationship of volume\nand dp block backup policies",
            "type": "object",
            "title": "VolumeDpBlockBackupPolicyMapping",
            "properties": {
                "dp_block_backup_policy": {
                    "$ref": "#/definitions/DpBlockBackupPolicy_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "volume": {
                    "$ref": "#/definitions/Volume_Nestview"
                }
            }
        },
        "VolumeDpBlockBackupPolicyMappingsResp": {
            "type": "object",
            "title": "VolumeDpBlockBackupPolicyMappingsResp",
            "properties": {
                "volume_dp_block_backup_policy_mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VolumeDpBlockBackupPolicyMapping"
                    }
                }
            }
        },
        "VolumeFailedTask": {
            "type": "object",
            "title": "VolumeFailedTask",
            "properties": {
                "abort": {
                    "type": "number",
                    "format": "double"
                },
                "busy": {
                    "type": "number",
                    "format": "double"
                },
                "check_cond": {
                    "type": "number",
                    "format": "double"
                },
                "resv_conflict": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "VolumeGroup": {
            "description": "VolumeGroup defines the model of volume group\n+X:model:generate;plur=VolumeGroups;with_detailed; +X:benchmark:",
            "type": "object",
            "title": "VolumeGroup",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "block_volume_group_snapshot": {
                    "$ref": "#/definitions/VolumeGroupSnapshot_Nestview"
                },
                "block_volume_group_snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "block_volume_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "flattened": {
                    "type": "boolean"
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "latest_snapshot_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "passive": {
                    "type": "boolean"
                },
                "pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "progress": {
                    "type": "number",
                    "format": "double"
                },
                "snapshot_replication_role": {
                    "type": "string"
                },
                "snapshot_replication_status": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "VolumeGroupCreateReq": {
            "type": "object",
            "title": "VolumeGroupCreateReq",
            "required": [
                "block_volume_group"
            ],
            "properties": {
                "block_volume_group": {
                    "$ref": "#/definitions/VolumeGroupCreateReq_VolumeGroup"
                }
            }
        },
        "VolumeGroupCreateReq_VolumeGroup": {
            "type": "object",
            "title": "VolumeGroupCreateReq_VolumeGroup",
            "required": [
                "name"
            ],
            "properties": {
                "block_volume_group_snapshot_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "block_volume_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "description": {
                    "type": "string"
                },
                "flattened": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "VolumeGroupResp": {
            "type": "object",
            "title": "VolumeGroupResp",
            "properties": {
                "block_volume_group": {
                    "$ref": "#/definitions/VolumeGroup"
                }
            }
        },
        "VolumeGroupRollbackReq": {
            "type": "object",
            "title": "VolumeGroupRollbackReq",
            "required": [
                "block_volume_group"
            ],
            "properties": {
                "block_volume_group": {
                    "$ref": "#/definitions/VolumeGroupRollbackReq_VolumeGroup"
                }
            }
        },
        "VolumeGroupRollbackReq_VolumeGroup": {
            "type": "object",
            "title": "VolumeGroupRollbackReq_VolumeGroup",
            "properties": {
                "block_volume_group_snapshot_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VolumeGroupSnapshot": {
            "description": "VolumeGroupSnapshot defines the model of volume group snapshot\n+X:model:generate;plur=VolumeGroupSnapshots;with_detailed; +X:benchmark:",
            "type": "object",
            "title": "VolumeGroupSnapshot",
            "properties": {
                "action_status": {
                    "type": "string"
                },
                "block_snapshot_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "block_volume_group": {
                    "$ref": "#/definitions/VolumeGroup_Nestview"
                },
                "cloned_block_volume_group_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "creator": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "group_snapshot_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "passive": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "VolumeGroupSnapshotCreateReq": {
            "type": "object",
            "title": "VolumeGroupSnapshotCreateReq",
            "required": [
                "block_volume_group_snapshot"
            ],
            "properties": {
                "block_volume_group_snapshot": {
                    "$ref": "#/definitions/VolumeGroupSnapshotCreateReq_VolumeGroupSnapshot"
                }
            }
        },
        "VolumeGroupSnapshotCreateReq_VolumeGroupSnapshot": {
            "type": "object",
            "title": "VolumeGroupSnapshotCreateReq_VolumeGroupSnapshot",
            "required": [
                "block_volume_group_id",
                "name",
                "description"
            ],
            "properties": {
                "block_volume_group_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "VolumeGroupSnapshotReplicationProtectionReq": {
            "type": "object",
            "title": "VolumeGroupSnapshotReplicationProtectionReq",
            "required": [
                "dp_volume_group_snapshot_replication_policy_id",
                "dest_volume_group_name",
                "volume_pairs"
            ],
            "properties": {
                "dest_volume_group_name": {
                    "description": "destination volume name",
                    "type": "string"
                },
                "dp_volume_group_snapshot_replication_policy_id": {
                    "description": "policy",
                    "type": "integer",
                    "format": "int64"
                },
                "initial_sync_time": {
                    "description": "initial sync time",
                    "type": "string",
                    "format": "date-time"
                },
                "volume_pairs": {
                    "description": "volume pairs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VolumePairInfo"
                    }
                }
            }
        },
        "VolumeGroupSnapshotResp": {
            "type": "object",
            "title": "VolumeGroupSnapshotResp",
            "required": [
                "block_volume_group_snapshot"
            ],
            "properties": {
                "block_volume_group_snapshot": {
                    "$ref": "#/definitions/VolumeGroupSnapshot"
                }
            }
        },
        "VolumeGroupSnapshotUpdateReq": {
            "type": "object",
            "title": "VolumeGroupSnapshotUpdateReq",
            "required": [
                "block_volume_group_snapshot"
            ],
            "properties": {
                "block_volume_group_snapshot": {
                    "$ref": "#/definitions/VolumeGroupSnapshotUpdateReq_VolumeGroupSnapshot"
                }
            }
        },
        "VolumeGroupSnapshotUpdateReq_VolumeGroupSnapshot": {
            "type": "object",
            "title": "VolumeGroupSnapshotUpdateReq_VolumeGroupSnapshot",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "VolumeGroupSnapshot_Nestview": {
            "type": "object",
            "title": "VolumeGroupSnapshot_Nestview",
            "properties": {
                "group_snapshot_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "VolumeGroupSnapshotsResp": {
            "type": "object",
            "title": "VolumeGroupSnapshotsResp",
            "required": [
                "block_volume_group_snapshots"
            ],
            "properties": {
                "block_volume_group_snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VolumeGroupSnapshot"
                    }
                }
            }
        },
        "VolumeGroupUpdateReq": {
            "type": "object",
            "title": "VolumeGroupUpdateReq",
            "required": [
                "block_volume_group"
            ],
            "properties": {
                "block_volume_group": {
                    "$ref": "#/definitions/VolumeGroupUpdateReq_VolumeGroup"
                }
            }
        },
        "VolumeGroupUpdateReq_VolumeGroup": {
            "type": "object",
            "title": "VolumeGroupUpdateReq_VolumeGroup",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "VolumeGroup_Nestview": {
            "type": "object",
            "title": "VolumeGroup_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "VolumeGroupsResp": {
            "type": "object",
            "title": "VolumeGroupsResp",
            "properties": {
                "block_volume_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VolumeGroup"
                    }
                }
            }
        },
        "VolumeIOLatency": {
            "description": "VolumeIOLatency defines volume io size latency",
            "type": "object",
            "title": "VolumeIOLatency",
            "properties": {
                "0_4k_us": {
                    "type": "number",
                    "format": "double"
                },
                "32_64k_us": {
                    "type": "number",
                    "format": "double"
                },
                "4_8k_us": {
                    "type": "number",
                    "format": "double"
                },
                "64_512k_us": {
                    "type": "number",
                    "format": "double"
                },
                "8_32k_us": {
                    "type": "number",
                    "format": "double"
                },
                "above_512k_us": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "VolumeIOSize": {
            "type": "object",
            "title": "VolumeIOSize",
            "properties": {
                "0_4kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "32_64kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "4_8kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "64_512kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "8_32kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "above_512kbyte": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "VolumeMigrateReq": {
            "type": "object",
            "title": "VolumeMigrateReq",
            "properties": {
                "block_volume": {
                    "$ref": "#/definitions/VolumeMigrateReq_Volume"
                }
            }
        },
        "VolumeMigrateReq_Volume": {
            "type": "object",
            "title": "VolumeMigrateReq_Volume",
            "required": [
                "dest_pool_id"
            ],
            "properties": {
                "dest_pool_id": {
                    "description": "migrate destination pool",
                    "type": "integer",
                    "format": "int64"
                },
                "migration_stripes": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VolumeMigrationJob": {
            "description": "VolumeMigrationJob defines the volume migration job record",
            "type": "object",
            "title": "VolumeMigrationJob",
            "properties": {
                "cluster": {
                    "$ref": "#/definitions/Cluster_Nestview"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "dest_pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "finished_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "host": {
                    "$ref": "#/definitions/Host_Nestview"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "remaining_time": {
                    "type": "integer",
                    "format": "int64"
                },
                "source_pool": {
                    "$ref": "#/definitions/Pool_Nestview"
                },
                "started_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "stripes": {
                    "type": "integer",
                    "format": "int64"
                },
                "task": {
                    "$ref": "#/definitions/Task"
                },
                "update": {
                    "type": "string",
                    "format": "date-time"
                },
                "volume": {
                    "$ref": "#/definitions/Volume_Nestview"
                }
            }
        },
        "VolumeNonIOTask": {
            "type": "object",
            "title": "VolumeNonIOTask",
            "properties": {
                "ats": {
                    "type": "number",
                    "format": "double"
                },
                "other": {
                    "type": "number",
                    "format": "double"
                },
                "unmap": {
                    "type": "number",
                    "format": "double"
                },
                "write_same": {
                    "type": "number",
                    "format": "double"
                },
                "xcopy": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "VolumePairInfo": {
            "type": "object",
            "title": "VolumePairInfo",
            "required": [
                "src_volume_id",
                "dest_pool_id",
                "dest_pool_name",
                "dest_volume_name"
            ],
            "properties": {
                "dest_pool_id": {
                    "description": "destination pool id",
                    "type": "integer",
                    "format": "int64"
                },
                "dest_pool_name": {
                    "description": "destination pool name",
                    "type": "string"
                },
                "dest_volume_name": {
                    "description": "destination volume name",
                    "type": "string"
                },
                "src_volume_id": {
                    "description": "source volume id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VolumeQosSpec": {
            "description": "VolumeQosSpec is a collection of all qos field",
            "type": "object",
            "title": "VolumeQosSpec",
            "properties": {
                "burst_total_bw": {
                    "type": "integer",
                    "format": "int64"
                },
                "burst_total_iops": {
                    "type": "integer",
                    "format": "int64"
                },
                "max_total_bw": {
                    "type": "integer",
                    "format": "int64"
                },
                "max_total_iops": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VolumeRecord": {
            "description": "VolumeRecord defines the response content of volume related API",
            "type": "object",
            "title": "VolumeRecord",
            "allOf": [
                {
                    "$ref": "#/definitions/Volume"
                },
                {
                    "properties": {
                        "samples": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VolumeStat"
                            }
                        }
                    }
                }
            ]
        },
        "VolumeReplicationSetReq": {
            "type": "object",
            "title": "VolumeReplicationSetReq",
            "properties": {
                "block_volume": {
                    "$ref": "#/definitions/VolumeReplicationSetReq_Volume"
                }
            }
        },
        "VolumeReplicationSetReq_Volume": {
            "type": "object",
            "title": "VolumeReplicationSetReq_Volume",
            "properties": {
                "dest_pool_id": {
                    "description": "destination pool id",
                    "type": "integer",
                    "format": "int64"
                },
                "dest_volume_name": {
                    "description": "destination volume name",
                    "type": "string"
                },
                "dp_block_replication_policy_id": {
                    "description": "block replication policy id",
                    "type": "integer",
                    "format": "int64"
                },
                "remote_cluster_fs_id": {
                    "description": "remote cluster",
                    "type": "string"
                },
                "replication_pool": {
                    "description": "replication peer pool",
                    "type": "string"
                },
                "replication_pool_id": {
                    "description": "replication peer pool id",
                    "type": "integer",
                    "format": "int64"
                },
                "replication_pool_name": {
                    "description": "replication peer pool name",
                    "type": "string"
                },
                "replication_version": {
                    "description": "replication version",
                    "type": "integer",
                    "format": "int64"
                },
                "replication_volume": {
                    "description": "replication peer volume",
                    "type": "string"
                },
                "replication_volume_id": {
                    "description": "replication peer volume id",
                    "type": "integer",
                    "format": "int64"
                },
                "replication_volume_name": {
                    "description": "replication peer volume name",
                    "type": "string"
                }
            }
        },
        "VolumeResp": {
            "type": "object",
            "title": "VolumeResp",
            "required": [
                "block_volume"
            ],
            "properties": {
                "block_volume": {
                    "description": "volume",
                    "$ref": "#/definitions/VolumeRecord"
                }
            }
        },
        "VolumeSamplesElem": {
            "type": "object",
            "title": "VolumeSamplesElem",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "paging": {
                    "$ref": "#/definitions/Paging"
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VolumeStat"
                    }
                }
            }
        },
        "VolumeSamplesResp": {
            "type": "object",
            "title": "VolumeSamplesResp",
            "required": [
                "block_volume_samples"
            ],
            "properties": {
                "block_volume_samples": {
                    "description": "volume samples",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VolumeStat"
                    }
                }
            }
        },
        "VolumeSnapshotProtectionReq": {
            "type": "object",
            "title": "VolumeSnapshotProtectionReq",
            "properties": {
                "block_volume": {
                    "$ref": "#/definitions/VolumeSnapshotProtectionReq_Volume"
                }
            }
        },
        "VolumeSnapshotProtectionReq_Volume": {
            "type": "object",
            "title": "VolumeSnapshotProtectionReq_Volume",
            "required": [
                "dp_block_snapshot_policy_id"
            ],
            "properties": {
                "dp_block_snapshot_policy_id": {
                    "description": "policy",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VolumeStat": {
            "description": "VolumeStat records volume stat info",
            "type": "object",
            "title": "VolumeStat",
            "properties": {
                "FailedTask": {
                    "$ref": "#/definitions/VolumeFailedTask"
                },
                "create": {
                    "type": "string",
                    "format": "date-time"
                },
                "io_size": {
                    "$ref": "#/definitions/VolumeIOSize"
                },
                "io_size_lat": {
                    "$ref": "#/definitions/VolumeIOLatency"
                },
                "migrate_write_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "migrate_write_iops": {
                    "type": "number",
                    "format": "double"
                },
                "migrate_write_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "non_io_task": {
                    "$ref": "#/definitions/VolumeNonIOTask"
                },
                "queue_depth": {
                    "type": "number",
                    "format": "double"
                },
                "read_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "read_iops": {
                    "type": "number",
                    "format": "double"
                },
                "read_latency_us": {
                    "type": "number",
                    "format": "double"
                },
                "total_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "total_iops": {
                    "type": "number",
                    "format": "double"
                },
                "write_bandwidth_kbyte": {
                    "type": "number",
                    "format": "double"
                },
                "write_iops": {
                    "type": "number",
                    "format": "double"
                },
                "write_latency_us": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "VolumeUpdateReq": {
            "type": "object",
            "title": "VolumeUpdateReq",
            "required": [
                "block_volume"
            ],
            "properties": {
                "block_volume": {
                    "$ref": "#/definitions/VolumeUpdateReq_Volume"
                }
            }
        },
        "VolumeUpdateReq_Volume": {
            "type": "object",
            "title": "VolumeUpdateReq_Volume",
            "properties": {
                "action": {
                    "type": "string"
                },
                "block_snapshot_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "description": {
                    "type": "string"
                },
                "flattened": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "performance_priority": {
                    "type": "integer",
                    "format": "int64"
                },
                "qos": {
                    "$ref": "#/definitions/VolumeQosSpec"
                },
                "qos_enabled": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VolumeUpdateVolumeNameReq": {
            "type": "object",
            "title": "VolumeUpdateVolumeNameReq",
            "required": [
                "block_volume"
            ],
            "properties": {
                "block_volume": {
                    "$ref": "#/definitions/VolumeUpdateVolumeNameReq_Volume"
                }
            }
        },
        "VolumeUpdateVolumeNameReq_Volume": {
            "type": "object",
            "title": "VolumeUpdateVolumeNameReq_Volume",
            "required": [
                "volume_name"
            ],
            "properties": {
                "volume_name": {
                    "description": "VolumeName of volume",
                    "type": "string"
                }
            }
        },
        "Volume_Nestview": {
            "type": "object",
            "title": "Volume_Nestview",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "original_name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "VolumesResp": {
            "type": "object",
            "title": "VolumesResp",
            "required": [
                "block_volumes"
            ],
            "properties": {
                "block_volumes": {
                    "description": "volumes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VolumeRecord"
                    }
                }
            }
        },
        "customStorageClass": {
            "type": "object",
            "title": "customStorageClass",
            "required": [
                "name",
                "write_policy",
                "sc_id",
                "pool_policies"
            ],
            "properties": {
                "description": {
                    "description": "description of custom class",
                    "type": "string"
                },
                "name": {
                    "description": "name of custom class",
                    "type": "string"
                },
                "pool_policies": {
                    "description": "active pool policy array of custom class",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/poolPolicy"
                    }
                },
                "sc_id": {
                    "description": "class unique id(1-7)",
                    "type": "integer",
                    "format": "int64"
                },
                "write_policy": {
                    "description": "write policy of custom class",
                    "type": "string"
                }
            }
        },
        "gcPlan": {
            "type": "object",
            "title": "gcPlan",
            "required": [
                "days",
                "policies"
            ],
            "properties": {
                "days": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gcPolicy"
                    }
                }
            }
        },
        "gcPolicy": {
            "type": "object",
            "title": "gcPolicy",
            "required": [
                "enable"
            ],
            "properties": {
                "bandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "enable": {
                    "type": "boolean"
                },
                "end_time": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "identityProvidersRespDetail": {
            "type": "object",
            "title": "identityProvidersRespDetail",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vendor": {
                    "type": "string"
                }
            }
        },
        "loginSSOExtra": {
            "type": "object",
            "title": "loginSSOExtra",
            "properties": {
                "code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "ticket": {
                    "type": "string"
                }
            }
        },
        "poolPolicy": {
            "type": "object",
            "title": "poolPolicy",
            "properties": {
                "active": {
                    "description": "is active pool",
                    "type": "boolean"
                },
                "from_default": {
                    "description": "judge the source of the add pool",
                    "type": "boolean"
                },
                "pool_id": {
                    "description": "pool id",
                    "type": "integer",
                    "format": "int64"
                },
                "threshold": {
                    "description": "threshold for auto active pool",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "s3Key": {
            "type": "object",
            "title": "s3Key",
            "properties": {
                "access_key": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                }
            }
        },
        "s3Req": {
            "type": "object",
            "title": "s3Req",
            "properties": {
                "bucket_limit": {
                    "type": "integer",
                    "format": "int64"
                },
                "bucket_path": {
                    "type": "string"
                },
                "bucket_permission": {
                    "type": "string"
                },
                "gateway_group_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_enabled": {
                    "type": "boolean"
                },
                "s3_keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/s3Key"
                    }
                }
            }
        },
        "ssoType": {
            "type": "object",
            "title": "ssoType",
            "properties": {
                "type": {
                    "type": "string"
                },
                "vendors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}
